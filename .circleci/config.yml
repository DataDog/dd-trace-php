version: 2.0

aliases:

  - &CACHE_COMPOSER_KEY
    key: 'betav1-composer-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}'

  - &CACHE_NPM_KEY
    key: 'betav1-lint-deps-{{ checksum "composer.json" }}'

  - &IMAGE_DOCKER_DD_AGENT
    image: datadog/agent:latest
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=invalid_key_but_this_is_fine

  - &IMAGE_DOCKER_REDIS
    image: circleci/redis:4.0-alpine
    name: redis_integration

  - &IMAGE_DOCKER_ELASTICSEARCH2
    image: elasticsearch:2
    name: elasticsearch2_integration

  - &IMAGE_DOCKER_HTTPBIN
    image: kennethreitz/httpbin
    name: httpbin_integration

  - &IMAGE_DOCKER_MEMCHACED
    image: memcached:1.5-alpine
    name: memcached_integration

  - &IMAGE_DOCKER_MYSQL
    image: mysql:5.6
    name: mysql_integration
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_PASSWORD=test
      - MYSQL_USER=test
      - MYSQL_DATABASE=test

  - &IMAGE_DOCKER_MONGODB
    image: circleci/mongo:4.0
    name: mongodb_integration
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=test

  - &STEP_ATTACH_WORKSPACE
    attach_workspace:
      at: ~/datadog

  - &STEP_EXT_INSTALL
    run:
      name: Build and install extension
      command: make -f DDMakefile install install_ini SUDO=sudo BUILD_DIR=tmp/build_extension

  - &STEP_COMPOSER_SELF_UPDATE
    run:
      name: Updating composer itself
      command: sudo composer self-update

  - &STEP_COMPOSER_CACHE_RESTORE
    restore_cache:
      <<: *CACHE_COMPOSER_KEY

  - &STEP_COMPOSER_CACHE_SAVE
    save_cache:
      <<: *CACHE_COMPOSER_KEY
      paths:
        - vendor/

  - &STEP_COMPOSER_INSTALL_LEGACY
    run:
      name: Installing composer dependencies without PHPStan
      command: composer remove phpstan/phpstan --no-interaction --no-plugins --dev

  - &STEP_COMPOSER_INSTALL
    run:
      name: Installing dependencies with composer
      command: composer install --no-interaction


  - &STEP_PREPARE_TEST_RESULTS_DIR
    run:
      name: testresults dir
      command: mkdir test-results

  - &STEP_EXPORT_CI_ENV
    run:
      name: export .env.circleci
      command: |
        echo "export $(cat .env.circleci | xargs)" >> $BASH_ENV

  - &STEP_RUN_EXTENSION_TESTS
    run:
      name: Run extension tests with leak detection
      command: TEST_PHP_JUNIT=test-results/leak_test.xml REPORT_EXIT_STATUS=1 make -f DDMakefile test_c_mem

  - &STEP_WAIT_AGENT
    run:
      name: Waiting for Dockerized agent
      command: dockerize -wait tcp://127.0.0.1:8126 -timeout 1m

  - &STEP_WAIT_MYSQL
    run:
      name: Waiting for Dockerized MySQL
      command: dockerize -wait tcp://mysql_integration:3306 -timeout 1m

  - &STEP_WAIT_MONGODB
    run:
      name: Waiting for Dockerized MongoDB
      command: dockerize -wait tcp://mongodb_integration:27017 -timeout 1m

  - &STEP_RUN_UNIT_TESTS
    run:
      name: Run unit tests
      command: composer test-unit -- --log-junit test-results/php-unit/results.xml

  - &STEP_RUN_INTEGRATION_TESTS
    run:
      name: Run integration tests
      command: composer test-integration -- --log-junit test-results/php-integration/results.xml

  - &STEP_UPDATE_LARAVEL_42_ENV
    run:
      name: Update the Laravel 4.2 test environment
      command: composer laravel-42-update

  - &STEP_UPDATE_LARAVEL_57_ENV
    run:
      name: Update the Laravel 5.7 test environment
      command: composer laravel-57-update

  - &STEP_UPDATE_SYMFONY_34_ENV
    run:
      name: Update the Symfony 3.4 test environment
      command: composer symfony-34-update

  - &STEP_RUN_LARAVEL_42_TESTS
    run:
      name: Run the Laravel 4.2 test suite
      command: composer laravel-42-test

  - &STEP_RUN_LARAVEL_57_TESTS
    run:
      name: Run the Laravel 5.7 test suite
      command: composer laravel-57-test

  - &STEP_RUN_SYMFONY_34_TESTS
    run:
      name: Run the Symfony 3.4 test suite
      command: composer symfony-34-test

  - &STEP_PERSIST_TO_WORKSPACE
    persist_to_workspace:
      root: '.'
      paths:
      - vendor/
      - tmp/build_extension

  - &STEP_STORE_ARTIFACTS
    store_artifacts:
      path: test-results

  - &STEP_STORE_TEST_RESULTS
    store_test_results:
      path: test-results

# Integrations tests execution

  - &STEP_RUN_INTEGRATIONS_TESTS_56
    run:
      command: composer test-integrations-56

  - &STEP_RUN_INTEGRATIONS_TESTS_70
    run:
      command: composer test-integrations-70

  - &STEP_RUN_INTEGRATIONS_TESTS_71
    run:
      command: composer test-integrations-71

  - &STEP_RUN_INTEGRATIONS_TESTS_72
    run:
      command: composer test-integrations-72


jobs:

  "Lint files": &lint_files
    docker:
      - image: circleci/php:7.2-cli-node-browsers
    steps:
      - checkout
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - restore_cache:
          <<: *CACHE_NPM_KEY
      - run:
          name: Installing dependencies with npm
          command: npm install eclint --no-package-lock --no-save
      - save_cache:
          <<: *CACHE_NPM_KEY
          paths:
          - node_modules/
      - run:
          name: Creating directory for phpcs results
          command: mkdir -p test-results/phpcs
      - run:
          name: Running eclint
          command: node_modules/.bin/eclint check '**/*' '!config.*' '!tmp/**/*' '!vendor/**/*' '!src/ext/.libs/*' '!LICENSE' '!phpstan.neon' '!tests/Frameworks/*/Version_*/**' || touch .failure
      - run:
          name: Running phpcs
          command: composer lint -- --report=junit | tee test-results/phpcs/results.xml || touch .failure
      - run:
          name: Install clang-format 6.0
          command: sudo apt -y install clang-format-6.0/testing
      - run:
          name: Run clang-format
          command: |
            find ./ -path ./vendor -prune -o -iname *.h -o -iname *.c | while read fname; do
              changes=$(clang-format-6.0 -output-replacements-xml $fname | grep -c "<replacement " || true)
              if [ $changes != 0 ]
              then
                clang-format-6.0 -output-replacements-xml $fname
                echo "$fname did not pass clang-format, consider running: find ./ -iname *.h -o -iname *.c | xargs clang-format -i"
                touch .failure
              fi
            done
      - run:
          name: Check linting failure
          command: test -e .failure && exit 1 || true
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  "Static Analysis":
    docker:
      - image: circleci/php:7.2
    steps:
      - checkout
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - run:
          name: Running phpstan
          command: composer static-analyze

  "php-5.6":
    working_directory: ~/datadog
    docker:
      - image: datadog/docker-library:ddtrace_php_5_6
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_ELASTICSEARCH2
      - <<: *IMAGE_DOCKER_HTTPBIN
      - <<: *IMAGE_DOCKER_REDIS
      - <<: *IMAGE_DOCKER_MEMCHACED
      - <<: *IMAGE_DOCKER_MYSQL
      - <<: *IMAGE_DOCKER_MONGODB
    steps:
      - checkout
      - <<: *STEP_ATTACH_WORKSPACE
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL_LEGACY
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - <<: *STEP_PREPARE_TEST_RESULTS_DIR
      - <<: *STEP_EXPORT_CI_ENV
      - <<: *STEP_RUN_EXTENSION_TESTS
      - <<: *STEP_WAIT_AGENT
      - <<: *STEP_WAIT_MYSQL
      - <<: *STEP_WAIT_MONGODB
      - <<: *STEP_RUN_UNIT_TESTS
      - <<: *STEP_RUN_INTEGRATION_TESTS
      - <<: *STEP_RUN_INTEGRATIONS_TESTS_56
      - <<: *STEP_UPDATE_LARAVEL_42_ENV
      - <<: *STEP_RUN_LARAVEL_42_TESTS
      - <<: *STEP_UPDATE_SYMFONY_34_ENV
      - <<: *STEP_RUN_SYMFONY_34_TESTS
      - <<: *STEP_PERSIST_TO_WORKSPACE
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  "php-7.0":
    working_directory: ~/datadog
    docker:
      - image: datadog/docker-library:ddtrace_php_7_0
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_ELASTICSEARCH2
      - <<: *IMAGE_DOCKER_HTTPBIN
      - <<: *IMAGE_DOCKER_REDIS
      - <<: *IMAGE_DOCKER_MEMCHACED
      - <<: *IMAGE_DOCKER_MYSQL
      - <<: *IMAGE_DOCKER_MONGODB
    steps:
      - checkout
      - <<: *STEP_ATTACH_WORKSPACE
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL_LEGACY
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - <<: *STEP_PREPARE_TEST_RESULTS_DIR
      - <<: *STEP_EXPORT_CI_ENV
      - <<: *STEP_RUN_EXTENSION_TESTS
      - <<: *STEP_WAIT_AGENT
      - <<: *STEP_WAIT_MYSQL
      - <<: *STEP_WAIT_MONGODB
      - <<: *STEP_RUN_UNIT_TESTS
      - <<: *STEP_RUN_INTEGRATION_TESTS
      - <<: *STEP_RUN_INTEGRATIONS_TESTS_70
      - <<: *STEP_UPDATE_LARAVEL_42_ENV
      - <<: *STEP_RUN_LARAVEL_42_TESTS
      - <<: *STEP_UPDATE_SYMFONY_34_ENV
      - <<: *STEP_RUN_SYMFONY_34_TESTS
      - <<: *STEP_PERSIST_TO_WORKSPACE
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  "php-7.1":
    working_directory: ~/datadog
    docker:
      - image: datadog/docker-library:ddtrace_php_7_1
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_ELASTICSEARCH2
      - <<: *IMAGE_DOCKER_HTTPBIN
      - <<: *IMAGE_DOCKER_REDIS
      - <<: *IMAGE_DOCKER_MEMCHACED
      - <<: *IMAGE_DOCKER_MYSQL
      - <<: *IMAGE_DOCKER_MONGODB
    steps:
      - checkout
      - <<: *STEP_ATTACH_WORKSPACE
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - <<: *STEP_PREPARE_TEST_RESULTS_DIR
      - <<: *STEP_EXPORT_CI_ENV
      - <<: *STEP_RUN_EXTENSION_TESTS
      - <<: *STEP_WAIT_AGENT
      - <<: *STEP_WAIT_MYSQL
      - <<: *STEP_WAIT_MONGODB
      - <<: *STEP_RUN_UNIT_TESTS
      - <<: *STEP_RUN_INTEGRATION_TESTS
      - <<: *STEP_RUN_INTEGRATIONS_TESTS_71
      - <<: *STEP_UPDATE_LARAVEL_42_ENV
      - <<: *STEP_RUN_LARAVEL_42_TESTS
      - <<: *STEP_UPDATE_LARAVEL_57_ENV
      - <<: *STEP_RUN_LARAVEL_57_TESTS
      - <<: *STEP_UPDATE_SYMFONY_34_ENV
      - <<: *STEP_RUN_SYMFONY_34_TESTS
      - <<: *STEP_PERSIST_TO_WORKSPACE
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  "php-7.2":
    working_directory: ~/datadog
    docker:
      - image: datadog/docker-library:ddtrace_php_7_2
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_ELASTICSEARCH2
      - <<: *IMAGE_DOCKER_HTTPBIN
      - <<: *IMAGE_DOCKER_REDIS
      - <<: *IMAGE_DOCKER_MEMCHACED
      - <<: *IMAGE_DOCKER_MYSQL
      - <<: *IMAGE_DOCKER_MONGODB
    steps:
      - checkout
      - <<: *STEP_ATTACH_WORKSPACE
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - <<: *STEP_PREPARE_TEST_RESULTS_DIR
      - <<: *STEP_EXPORT_CI_ENV
      - <<: *STEP_RUN_EXTENSION_TESTS
      - <<: *STEP_WAIT_AGENT
      - <<: *STEP_WAIT_MYSQL
      - <<: *STEP_WAIT_MONGODB
      - <<: *STEP_RUN_UNIT_TESTS
      - <<: *STEP_RUN_INTEGRATION_TESTS
      - <<: *STEP_RUN_INTEGRATIONS_TESTS_72
      - <<: *STEP_UPDATE_LARAVEL_42_ENV
      - <<: *STEP_RUN_LARAVEL_42_TESTS
      - <<: *STEP_UPDATE_LARAVEL_57_ENV
      - <<: *STEP_RUN_LARAVEL_57_TESTS
      - <<: *STEP_UPDATE_SYMFONY_34_ENV
      - <<: *STEP_RUN_SYMFONY_34_TESTS
      - <<: *STEP_PERSIST_TO_WORKSPACE
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  "5.6 20131106": &ARTIFACT_BUILD
    working_directory: ~/datadog
    docker: [ image: 'circleci/php:5.6' ]
    steps:
      - checkout
      - attach_workspace:
          at: ~/datadog
      - run:
          name: Build extension .so
          command: |
              mkdir -p extensions
              make -f DDMakefile all CFLAGS="-O2 -Wall -Werror -Wextra"
              SUFFIX="$( echo "$CIRCLE_JOB" | awk '{print $NF}' )"
              cp tmp/build_extension/.libs/ddtrace.so extensions/ddtrace-$SUFFIX.so
      - persist_to_workspace:
          root: '.'
          paths: ['./extensions']

  "7.0 20151012":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.0' ]

  "7.1 20160303":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.1' ]

  "7.2 20170718":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.2' ]

  "5.6 zts 20131106-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:5.6-zts' ]

  "7.0 zts 20151012-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.0-zts' ]

  "7.1 zts 20160303-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.1-zts' ]

  "7.2 zts 20170718-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.2-zts' ]

  "package extension":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.2' ]
    steps:
      - checkout
      - attach_workspace:
          at: ~/datadog
      - run:
          name: Install FPM and build dependencies
          command: sudo apt-get update && sudo apt-get install -y ruby ruby-dev rubygems build-essential rpm && sudo gem install --no-ri --no-rdoc fpm
      - run:
          name: Build packages
          command: make -f DDMakefile packages
      - store_artifacts: { path: 'build/packages', destination: / }
      - store_artifacts: { path: 'packages.tar.gz', destination: '/all/packages.tar.gz' }
      - setup_remote_docker
      - run:
          name: Test installing packages on target systems
          command: make -j 2 -f dockerfiles/verify_packages/Makefile

workflows:
  version: 2
  build_packages:
    jobs:
      - "5.6 20131106": &BUILD_PACKAGE_FORKFLOW
          filters:
            tags:
              only: /(^build$)|(^[v]?[0-9]+(\.[0-9]+)*$)/
            branches:
              # Always build on master
              ignore: /^(?!master$).*/
      - "7.0 20151012": *BUILD_PACKAGE_FORKFLOW
      - "7.1 20160303": *BUILD_PACKAGE_FORKFLOW
      - "7.2 20170718": *BUILD_PACKAGE_FORKFLOW
      - "5.6 zts 20131106-zts": *BUILD_PACKAGE_FORKFLOW
      - "7.0 zts 20151012-zts": *BUILD_PACKAGE_FORKFLOW
      - "7.1 zts 20160303-zts": *BUILD_PACKAGE_FORKFLOW
      - "7.2 zts 20170718-zts": *BUILD_PACKAGE_FORKFLOW
      - "package extension":
          requires:
            - "5.6 20131106"
            - "7.0 20151012"
            - "7.1 20160303"
            - "7.2 20170718"
            - "5.6 zts 20131106-zts"
            - "7.0 zts 20151012-zts"
            - "7.1 zts 20160303-zts"
            - "7.2 zts 20170718-zts"
  build:
    jobs:
      - "Lint files"
      - "Static Analysis"
      - "php-5.6"
      - "php-7.0"
      - "php-7.1"
      - "php-7.2"
