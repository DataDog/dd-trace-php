version: 2.0

aliases:
  - &CACHE_COMPOSER_KEY
    key: 'betav1-composer-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}'

  - &CACHE_NPM_KEY
    key: 'betav1-lint-deps-{{ checksum "composer.json" }}'

  - &IMAGE_DOCKER_DD_AGENT
    image: datadog/agent:latest
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=invalid_key_but_this_is_fine
  - &IMAGE_DOCKER_REDIS
    image: circleci/redis:4.0-alpine

  - &STEP_EXT_INSTALL
    run:
      name: Build and install extension
      command: make -f DDMakefile install install_ini SUDO=sudo BUILD_DIR=tmp/build_extension

  - &STEP_COMPOSER_SELF_UPDATE
    run:
      name: Updating composer itself
      command: sudo composer self-update

  - &STEP_COMPOSER_CACHE_RESTORE
    restore_cache:
      <<: *CACHE_COMPOSER_KEY

  - &STEP_COMPOSER_CACHE_SAVE
    save_cache:
      <<: *CACHE_COMPOSER_KEY
      paths:
        - vendor/

  - &STEP_COMPOSER_INSTALL
    run:
      name: Installing dependencies with composer
      command: composer install -n

  - &STEP_STORE_ARTIFACTS
    store_artifacts:
      path: test-results

  - &STEP_STORE_TEST_RESULTS
    store_test_results:
      path: test-results

  - &JOB_PHP_DEFAULTS
    working_directory: ~/datadog
    steps:
      - checkout
      - attach_workspace:
          at: ~/datadog
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - run:
          name: testresults dir
          command: mkdir test-results
      - run:
          name: export .env.circleci
          command: |
            echo "export $(cat .env.circleci | xargs)" >> $BASH_ENV
      - run:
          name: Run extension tests with leak detection
          command: TEST_PHP_JUNIT=test-results/leak_test.xml REPORT_EXIT_STATUS=1 make -f DDMakefile test_c_mem
      - run:
          name: Waiting for Dockerized agent
          command: dockerize -wait tcp://127.0.0.1:8126 -timeout 1m
      - run:
          name: Run unit tests
          command: composer test-unit -- --log-junit test-results/php-unit/results.xml
      - run:
          name: Run integration tests
          command: composer test-integration -- --log-junit test-results/php-integration/results.xml
      - persist_to_workspace:
          root: '.'
          paths:
          - vendor/
          - tmp/build_extension
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

jobs:
  "Lint files": &lint_files
    docker:
      - image: circleci/php:7-cli-node-browsers
    steps:
      - checkout
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - restore_cache:
          <<: *CACHE_NPM_KEY
      - run:
          name: Installing dependencies with npm
          command: npm install eclint --no-package-lock --no-save
      - save_cache:
          <<: *CACHE_NPM_KEY
          paths:
          - node_modules/
      - run:
          name: Creating directory for phpcs results
          command: mkdir -p test-results/phpcs
      - run:
          name: Running eclint
          command: node_modules/.bin/eclint check '**/*' '!tmp/**/*' '!vendor/**/*' '!src/ext/.libs/*' '!LICENSE' '!phpstan.neon'
      - run:
          name: Running phpcs
          command: composer lint -- --report=junit | tee test-results/phpcs/results.xml
      - run:
          name: Install clang-format 6.0
          command: sudo apt -y install clang-format-6.0/testing
      - run:
          name: Run clang-format
          command: |
            find ./ -iname *.h -o -iname *.c | while read fname; do
              changes=$(clang-format-6.0 -output-replacements-xml $fname | grep -c "<replacement " || true)
              if [ $changes != 0 ]
              then
                clang-format-6.0 -output-replacements-xml $fname
                echo "$fname did not pass clang-format, consider running: find ./ -iname *.h -o -iname *.c | xargs clang-format -i"
                exit 1
              fi
            done
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS
  "Check 5.4 compatibility (only changed files)":
    <<: *lint_files
    steps:
      - checkout
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - run:
          name: Creating directory for phpcs results
          command: mkdir -p test-results/phpcs
      - run:
          name: Running phpcs
          command: (git diff --name-status origin/master...HEAD | egrep "^[ACMR].*\.php$" | cut -c 3- || true) | xargs -r composer lint-5.4 -- --report=junit | tee test-results/phpcs/results.xml
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS
  "Static Analysis":
    docker:
      - image: circleci/php:7.2
    steps:
      - checkout
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - <<: *STEP_COMPOSER_CACHE_SAVE
      - run:
          name: Installing phpstan
          command: composer require --dev phpstan/phpstan:~0.10.3
      - run:
          name: Running phpstan
          command: vendor/bin/phpstan analyse --level=2 src


  "php-5.6":
    <<: *JOB_PHP_DEFAULTS
    docker:
      - image: datadog/docker-library:ddtrace_php_5_6
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_REDIS

  "php-7.0":
    <<: *JOB_PHP_DEFAULTS
    docker:
      - image: datadog/docker-library:ddtrace_php_7_0
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_REDIS

  "php-7.1":
    <<: *JOB_PHP_DEFAULTS
    docker:
      - image: datadog/docker-library:ddtrace_php_7_1
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_REDIS

  "php-7.2":
    <<: *JOB_PHP_DEFAULTS
    docker:
      - image: datadog/docker-library:ddtrace_php_7_2
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_REDIS

workflows:
  version: 2
  build:
    jobs:
      - "Lint files"
      - "Check 5.4 compatibility (only changed files)"
      - "Static Analysis"
      - "php-5.6"
      - "php-7.0"
      - "php-7.1"
      - "php-7.2"
