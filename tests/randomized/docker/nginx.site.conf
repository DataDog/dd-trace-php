server {
    listen 80;

    access_log /var/log/nginx/access.log access_log_format;
    error_log /var/log/nginx/error.log;

    server_name localhost;

    root /var/www/html/public;
    index index.php;
    dav_methods PUT DELETE;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        # Buffer size configuration
        # Motivation: we had 502s due to 'upstream sent too big header while reading response header from upstream'.
        #   - go to https://circle-production-customer-artifacts.s3.amazonaws.com/picard/5a749a79c9e77c00017f464f/602bdf44fd979719617214ef-0-build/artifacts/tests/randomized/.tmp.scenarios/.results/randomized-394871314-centos7-7.0/nginx/error.log?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210217T104719Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=AKIAJR3Q6CR467H7Z55A%2F20210217%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=a57a67ec933349758aa081b7aee8abdd11b2648f90e4f9d61645b06f2481dbda
        #   - search for 'upstream sent too big'
        # Explanation:
        #   - Page size in container is 4kB: `getconf PAGESIZE`
        #   - We need to increase buffers size limit so the entire response can be buffered:
        #      - http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering
        #   - Specifically fastcgi_buffers is increased because it is defined per connection and a single connection to
        #     fastcgi can handle more than 100+ requests of ~200bytes each (see nginx access log).
        #   - We do not want to disable buffering because otherwise nginx will start immediately sending back the
        #     response to the http client and will not be able to modify it (e.g. status code 502) in case of segfault.
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        # FASTCGI config
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass    localhost:9000;
        fastcgi_index   index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
