<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminExportBundleProductTest">
        <annotations>
            <features value="CatalogImportExport"/>
            <stories value="Export products"/>
            <title value="Export Bundle Product"/>
            <description value="Admin should be able to export Bundle Product"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14008"/>
            <group value="catalog_import_export"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!--Create bundle product with dynamic price with two simple products -->
            <createData entity="SimpleProduct2" stepKey="firstSimpleProductForDynamic"/>
            <createData entity="SimpleProduct2" stepKey="secondSimpleProductForDynamic"/>
            <createData entity="ApiBundleProduct" stepKey="createDynamicBundleProduct"/>
            <createData entity="DropDownBundleOption" stepKey="createFirstBundleOption">
                <requiredEntity createDataKey="createDynamicBundleProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="firstLinkOptionToDynamicProduct">
                <requiredEntity createDataKey="createDynamicBundleProduct"/>
                <requiredEntity createDataKey="createFirstBundleOption"/>
                <requiredEntity createDataKey="firstSimpleProductForDynamic"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="secondLinkOptionToDynamicProduct">
                <requiredEntity createDataKey="createDynamicBundleProduct"/>
                <requiredEntity createDataKey="createFirstBundleOption"/>
                <requiredEntity createDataKey="secondSimpleProductForDynamic"/>
            </createData>

            <!-- Create bundle product with fixed price with two simple products -->
            <createData entity="SimpleProduct2" stepKey="firstSimpleProductForFixed"/>
            <createData entity="SimpleProduct2" stepKey="secondSimpleProductForFixed"/>
            <createData entity="ApiFixedBundleProduct" stepKey="createFixedBundleProduct"/>
            <createData entity="DropDownBundleOption" stepKey="createSecondBundleOption">
                <requiredEntity createDataKey="createFixedBundleProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="firstLinkOptionToFixedProduct">
                <requiredEntity createDataKey="createFixedBundleProduct"/>
                <requiredEntity createDataKey="createSecondBundleOption"/>
                <requiredEntity createDataKey="firstSimpleProductForFixed"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="secondLinkOptionToFixedProduct">
                <requiredEntity createDataKey="createFixedBundleProduct"/>
                <requiredEntity createDataKey="createSecondBundleOption"/>
                <requiredEntity createDataKey="secondSimpleProductForFixed"/>
            </createData>

            <!-- Create bundle product with custom textarea attribute with two simple products -->
            <createData entity="productAttributeWysiwyg" stepKey="createProductAttribute"/>
            <createData entity="AddToDefaultSet" stepKey="addToDefaultAttributeSet">
                <requiredEntity createDataKey="createProductAttribute"/>
            </createData>
            <createData entity="ApiFixedBundleProduct" stepKey="createFixedBundleProductWithAttribute">
                <requiredEntity createDataKey="addToDefaultAttributeSet"/>
            </createData>
            <createData entity="SimpleProduct2" stepKey="firstSimpleProductForFixedWithAttribute"/>
            <createData entity="SimpleProduct2" stepKey="secondSimpleProductForFixedWithAttribute"/>
            <createData entity="DropDownBundleOption" stepKey="createBundleOptionWithAttribute">
                <requiredEntity createDataKey="createFixedBundleProductWithAttribute"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="firstLinkOptionToFixedProductWithAttribute">
                <requiredEntity createDataKey="createFixedBundleProductWithAttribute"/>
                <requiredEntity createDataKey="createBundleOptionWithAttribute"/>
                <requiredEntity createDataKey="firstSimpleProductForFixedWithAttribute"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="secondLinkOptionToFixedProductWithAttribute">
                <requiredEntity createDataKey="createFixedBundleProductWithAttribute"/>
                <requiredEntity createDataKey="createBundleOptionWithAttribute"/>
                <requiredEntity createDataKey="secondSimpleProductForFixedWithAttribute"/>
            </createData>

            <!-- Run cron twice (To reduce the load and with introducing BIC cron runs have been removed) -->
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCron1">
                <argument name="indices" value="catalog_category_product catalogrule_product catalog_product_price catalogsearch_fulltext "/>
            </actionGroup>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="runCron2">
                <argument name="tags" value="full_page"/>
            </actionGroup>

            <!-- Login as admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="deleteAllExportedFiles" stepKey="clearExportedFilesList"/>
        </before>
        <after>
            <!-- Delete products creations -->
            <deleteData createDataKey="createDynamicBundleProduct" stepKey="deleteDynamicBundleProduct"/>
            <deleteData createDataKey="firstSimpleProductForDynamic" stepKey="deleteFirstSimpleProductForDynamic"/>
            <deleteData createDataKey="secondSimpleProductForDynamic" stepKey="deleteSecondSimpleProductForDynamic"/>
            <deleteData createDataKey="createFixedBundleProduct" stepKey="deleteFixedBundleProduct"/>
            <deleteData createDataKey="firstSimpleProductForFixed" stepKey="deleteFirstSimpleProductForFixed"/>
            <deleteData createDataKey="secondSimpleProductForFixed" stepKey="deleteSecondSimpleProductForFixed"/>
            <deleteData createDataKey="createFixedBundleProductWithAttribute" stepKey="deleteFixedBundleProductWithAttribute"/>
            <deleteData createDataKey="firstSimpleProductForFixedWithAttribute" stepKey="deleteFirstSimpleProductForFixedWithAttribute"/>
            <deleteData createDataKey="secondSimpleProductForFixedWithAttribute" stepKey="deleteSecondSimpleProductForFixedWithAttribute"/>
            <deleteData createDataKey="createProductAttribute" stepKey="deleteProductAttribute"/>

            <!-- Delete exported file -->
            <actionGroup ref="deleteExportedFile" stepKey="deleteExportedFile">
                <argument name="rowIndex" value="0"/>
            </actionGroup>
            <!-- Log out -->
            <actionGroup ref="logout" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Go to export page -->
        <amOnPage url="{{AdminExportIndexPage.url}}" stepKey="goToExportIndexPage"/>

        <!-- Export created below products -->
        <actionGroup ref="exportAllProducts" stepKey="exportCreatedProducts"/>

        <!-- Run cron (To reduce the load and with introducing BIC cron runs have been removed) -->
        <magentoCLI command="help" stepKey="runCron3"/>
        <actionGroup ref="CliConsumerStartActionGroup" stepKey="runCron4">
            <argument name="consumerName" value="exportProcessor"/>
            <argument name="maxMessages" value="10"/>
        </actionGroup>

        <!-- Download product -->
        <actionGroup ref="downloadFileByRowIndex" stepKey="downloadCreatedProducts">
            <argument name="rowIndex" value="0"/>
        </actionGroup>
    </test>
</tests>
