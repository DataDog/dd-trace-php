<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateDownloadableProductWithManageStockTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Downloadable Product"/>
            <title value="Create downloadable product with manage stock test"/>
            <description value="Admin should be able to create downloadable product with manage stock"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14510"/>
            <group value="Downloadable"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <magentoCLI stepKey="addDownloadableDomain" command="downloadable:domains:add static.magento.com"/>
            <!-- Create category -->
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>

            <!-- Login as admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="LoginAsAdmin"/>
        </before>
        <after>
            <magentoCLI stepKey="removeDownloadableDomain" command="downloadable:domains:remove static.magento.com"/>
            <!-- Delete category -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <!-- Delete created downloadable product -->
            <actionGroup ref="deleteProductUsingProductGrid" stepKey="deleteProduct">
                <argument name="product" value="DownloadableProduct"/>
            </actionGroup>

            <!-- Log out -->
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!-- Create downloadable product -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="amOnProductGridPage"/>
        <waitForPageLoad stepKey="waitForProductGridPageLoad"/>
        <actionGroup ref="GoToSpecifiedCreateProductPage" stepKey="createProduct">
            <argument name="productType" value="downloadable"/>
        </actionGroup>

        <!-- Fill downloadable product values -->
        <actionGroup ref="fillMainProductFormNoWeight" stepKey="fillDownloadableProductForm">
            <argument name="product" value="DownloadableProduct"/>
        </actionGroup>

        <!-- Add advanced inventory data to downloadable product -->
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink"/>

        <actionGroup ref="AdminFillAdvancedInventoryQtyActionGroup" stepKey="fillAdvancedInventoryQty">
            <argument name="qty" value="{{DownloadableProduct.quantity}}"/>
        </actionGroup>

        <actionGroup ref="AdminFillAdvancedInventoryOutOfStockThresholdActionGroup" stepKey="fillAdvancedInventoryOutOfStockThreshold">
            <argument name="qty" value="{{DownloadableProduct.quantity}}"/>
        </actionGroup>

        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickDoneBtn"/>

        <!-- Add downloadable product to category -->
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$createCategory.name$$]" stepKey="fillCategory"/>

        <!-- Fill downloadable link information before the creation link -->
        <actionGroup ref="AdminAddDownloadableLinkInformationActionGroup" stepKey="addDownloadableLinkInformation"/>

        <!-- Links can be purchased separately -->
        <checkOption selector="{{AdminProductDownloadableSection.isLinksPurchasedSeparately}}" stepKey="checkOptionPurchaseSeparately"/>

        <!-- Add first downloadable link -->
        <actionGroup ref="addDownloadableProductLinkWithMaxDownloads" stepKey="addFirstDownloadableProductLink">
            <argument name="link" value="downloadableLinkWithMaxDownloads"/>
        </actionGroup>

        <!-- Add second downloadable link -->
        <actionGroup ref="addDownloadableProductLink" stepKey="addSecondDownloadableProductLink">
            <argument name="link" value="downloadableLink"/>
        </actionGroup>

        <!-- Save product -->
        <actionGroup ref="saveProductForm" stepKey="saveProduct"/>

        <!-- Find downloadable product in grid -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="visitAdminProductPage"/>
        <waitForPageLoad stepKey="waitForAdminProductPageLoad"/>
        <actionGroup ref="filterProductGridBySku" stepKey="findCreatedConfigurableProduct">
            <argument name="product" value="DownloadableProduct"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.firstRow}}" stepKey="clickOnProduct"/>
        <waitForPageLoad stepKey="waitForProductFormPageLoad"/>

        <!-- Assert downloadable links in product form -->
        <scrollTo selector="{{AdminProductDownloadableSection.sectionLinkGrid}}" stepKey="scrollToLinks"/>
        <seeInField selector="{{AdminProductDownloadableSection.addLinkTitleInput('0')}}" userInput="{{downloadableLinkWithMaxDownloads.title}}" stepKey="seeFirstLinkTitle"/>
        <seeInField selector="{{AdminProductDownloadableSection.addLinkTitleInput('1')}}" userInput="{{downloadableLink.title}}" stepKey="seeSecondLinkTitle"/>

        <!-- Assert product is out of stock in store front -->
        <amOnPage url="{{DownloadableProduct.urlKey}}.html" stepKey="navigateToProductPage"/>
        <waitForPageLoad stepKey="waitForProductPageLoad"/>
        <see selector="{{StorefrontProductInfoMainSection.productName}}" userInput="{{DownloadableProduct.name}}" stepKey="seeProductNameInStoreFront"/>
        <see selector="{{StorefrontProductInfoMainSection.productStockStatus}}" userInput="OUT OF STOCK" stepKey="seeProductStatusInStoreFront"/>
    </test>
</tests>
