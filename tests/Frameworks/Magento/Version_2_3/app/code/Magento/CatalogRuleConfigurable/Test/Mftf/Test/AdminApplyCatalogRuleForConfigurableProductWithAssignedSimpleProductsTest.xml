<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminApplyCatalogRuleForConfigurableProductWithAssignedSimpleProductsTest">
        <annotations>
            <features value="CatalogRuleConfigurable"/>
            <stories value="Apply catalog price rule"/>
            <title value="DEPRECATED. Apply catalog rule for configurable product with assigned simple products"/>
            <description value="DEPRECATED. Admin should be able to apply catalog rule for configurable product with assigned simple products"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14063"/>
            <group value="catalogRuleConfigurable"/>
            <group value="mtf_migrated"/>
            <skip>
                <issueId value="DEPRECATED">Use AdminApplyCatalogRuleForConfigurableProductWithAssignedSimpleProducts2Test instead</issueId>
            </skip>
        </annotations>
        <before>
            <!-- Create category for first configurable product -->
            <createData entity="SimpleSubCategory" stepKey="firstSimpleCategory"/>

            <!-- Create first configurable product with two options -->
            <createData entity="ApiConfigurableProduct" stepKey="createFirstConfigProduct">
                <requiredEntity createDataKey="firstSimpleCategory"/>
            </createData>

            <createData entity="productAttributeWithTwoOptions" stepKey="createFirstConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createFirstConfigProductAttributeFirstOption">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createFirstConfigProductAttributeSecondOption">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </createData>

            <createData entity="AddToDefaultSet" stepKey="addFirstProductToAttributeSet">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </createData>

            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getFirstConfigAttributeFirstOption">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getFirstConfigAttributeSecondOption">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </getData>

            <!-- Create two child products for first configurable product -->
            <createData entity="ApiSimpleOne" stepKey="createFirstConfigFirstChildProduct">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
                <requiredEntity createDataKey="getFirstConfigAttributeFirstOption"/>
            </createData>

            <createData entity="ApiSimpleOne" stepKey="createFirstConfigSecondChildProduct">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
                <requiredEntity createDataKey="getFirstConfigAttributeSecondOption"/>
            </createData>

            <createData entity="ConfigurableProductTwoOptions" stepKey="createFirstConfigProductOption">
                <requiredEntity createDataKey="createFirstConfigProduct"/>
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
                <requiredEntity createDataKey="getFirstConfigAttributeFirstOption"/>
                <requiredEntity createDataKey="getFirstConfigAttributeSecondOption"/>
            </createData>

            <createData entity="ConfigurableProductAddChild" stepKey="createFirstConfigProductAddFirstChild">
                <requiredEntity createDataKey="createFirstConfigProduct"/>
                <requiredEntity createDataKey="createFirstConfigFirstChildProduct"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createFirstConfigProductAddSecondChild">
                <requiredEntity createDataKey="createFirstConfigProduct"/>
                <requiredEntity createDataKey="createFirstConfigSecondChildProduct"/>
            </createData>

            <!-- Add customizable options to first product -->
            <updateData createDataKey="createFirstConfigProduct" entity="productWithOptionRadiobutton" stepKey="updateFirstProductWithOption"/>

            <!-- Create category for second configurable product -->
            <createData entity="SimpleSubCategory" stepKey="secondSimpleCategory"/>

            <!-- Create second configurable product with two options -->
            <createData entity="ApiConfigurableProduct" stepKey="createSecondConfigProduct">
                <requiredEntity createDataKey="secondSimpleCategory"/>
            </createData>

            <createData entity="productAttributeWithTwoOptions" stepKey="createSecondConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createSecondConfigProductAttributeFirstOption">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createSecondConfigProductAttributeSecondOption">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </createData>

            <createData entity="AddToDefaultSet" stepKey="addSecondProductToAttributeSet">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </createData>

            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getSecondConfigAttributeFirstOption">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getSecondConfigAttributeSecondOption">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </getData>

            <!-- Create two child products for second configurable product -->
            <createData entity="ApiSimpleOne" stepKey="createSecondConfigFirstChildProduct">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
                <requiredEntity createDataKey="getSecondConfigAttributeFirstOption"/>
            </createData>

            <createData entity="ApiSimpleOne" stepKey="createSecondConfigSecondChildProduct">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
                <requiredEntity createDataKey="getSecondConfigAttributeSecondOption"/>
            </createData>

            <createData entity="ConfigurableProductTwoOptions" stepKey="createSecondConfigProductOption">
                <requiredEntity createDataKey="createSecondConfigProduct"/>
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
                <requiredEntity createDataKey="getSecondConfigAttributeFirstOption"/>
                <requiredEntity createDataKey="getSecondConfigAttributeSecondOption"/>
            </createData>

            <createData entity="ConfigurableProductAddChild" stepKey="createSecondConfigProductAddFirstChild">
                <requiredEntity createDataKey="createSecondConfigProduct"/>
                <requiredEntity createDataKey="createSecondConfigFirstChildProduct"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createSecondConfigProductAddSecondChild">
                <requiredEntity createDataKey="createSecondConfigProduct"/>
                <requiredEntity createDataKey="createSecondConfigSecondChildProduct"/>
            </createData>

            <!-- Add customizable options to second product -->
            <updateData createDataKey="createSecondConfigProduct" entity="productWithOptionRadiobutton" stepKey="updateSecondProductWithOption"/>

             <!--Create customer group -->
            <createData entity="CustomCustomerGroup" stepKey="customerGroup"/>

            <!-- Create Customer -->
            <createData entity="SimpleUsCustomerWithNewCustomerGroup" stepKey="createCustomer">
                <requiredEntity createDataKey="customerGroup" />
            </createData>

            <!-- Login as Admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminPanel"/>
        </before>
        <after>
            <!-- Customer log out -->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>

            <!-- Delete created data -->
            <deleteData createDataKey="createFirstConfigProduct" stepKey="deleteFirstConfigProduct"/>
            <deleteData createDataKey="createFirstConfigFirstChildProduct" stepKey="deleteFirstConfigFirstChildProduct"/>
            <deleteData createDataKey="createFirstConfigSecondChildProduct" stepKey="deleteFirstConfigSecondChildProduct"/>
            <deleteData createDataKey="createFirstConfigProductAttribute" stepKey="deleteFirstConfigProductAttribute"/>
            <deleteData createDataKey="firstSimpleCategory" stepKey="deleteFirstSimpleCategory"/>

            <deleteData createDataKey="createSecondConfigProduct" stepKey="deleteSecondConfigProduct"/>
            <deleteData createDataKey="createSecondConfigFirstChildProduct" stepKey="deleteSecondConfigFirstChildProduct"/>
            <deleteData createDataKey="createSecondConfigSecondChildProduct" stepKey="deleteSecondConfigSecondChildProduct"/>
            <deleteData createDataKey="createSecondConfigProductAttribute" stepKey="deleteSecondConfigProductAttribute"/>
            <deleteData createDataKey="secondSimpleCategory" stepKey="deleteSimpleCategory"/>

            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="customerGroup" stepKey="deleteCustomerGroup"/>

            <!-- Delete created price rules -->
            <amOnPage url="{{CatalogRulePage.url}}" stepKey="goToPriceRulePage"/>
            <actionGroup ref="deleteEntitySecondaryGrid" stepKey="deletePriceRuleForFirstOption">
                <argument name="name" value="{{CatalogRuleToFixed.name}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
            </actionGroup>

            <!-- Admin log out -->
            <actionGroup ref="logout" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>
        <!-- Create price rule -->
        <actionGroup ref="newCatalogPriceRuleByUI" stepKey="createPriceRule">
            <argument name="catalogRule" value="CatalogRuleToFixed"/>
        </actionGroup>
        <actionGroup ref="CatalogSelectCustomerGroupActionGroup" stepKey="addCustomerGroup">
            <argument name="customerGroupName" value="$$customerGroup.code$$"/>
        </actionGroup>

        <!-- Save price rule -->
        <click selector="{{AdminNewCatalogPriceRule.saveAndApply}}" stepKey="clickSaveAndApplyRule"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the rule." stepKey="assertSuccessMessage"/>

        <!-- Run full reindex and clear caches -->
        <magentoCLI command="indexer:reindex" stepKey="reindex"/>
        <magentoCLI command="cache:flush" stepKey="flushCache"/>

        <!-- Login to storefront from customer -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="logInFromCustomer">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>

        <!-- Assert first product in category -->
        <amOnPage url="$$firstSimpleCategory.name$$.html" stepKey="goToFirstCategoryPageStorefront"/>
        <waitForPageLoad stepKey="waitForFirstCategoryPageLoad"/>
        <actionGroup ref="StorefrontCheckCategoryConfigurableProductWithUpdatedPriceActionGroup" stepKey="checkFirstProductPriceInCategory">
            <argument name="productName" value="$$createFirstConfigProduct.name$$"/>
            <argument name="expectedPrice" value="{{CatalogRuleToFixed.discount_amount}}"/>
        </actionGroup>

        <!-- Assert second product in category -->
        <amOnPage url="$$secondSimpleCategory.name$$.html" stepKey="goToSecondCategoryPageStorefront"/>
        <waitForPageLoad stepKey="waitForSecondCategoryPageLoad"/>
        <actionGroup ref="StorefrontCheckCategoryConfigurableProductWithUpdatedPriceActionGroup" stepKey="checkSecondProductPriceInCategory">
            <argument name="productName" value="$$createSecondConfigProduct.name$$"/>
            <argument name="expectedPrice" value="{{CatalogRuleToFixed.discount_amount}}"/>
        </actionGroup>

        <!-- Assert first product in storefront product page -->
        <amOnPage url="$$createFirstConfigProduct.custom_attributes[url_key]$$.html" stepKey="amOnFirstProductPage"/>
        <waitForPageLoad stepKey="waitForFirstProductPageLoad"/>
        <actionGroup ref="StorefrontAssertUpdatedProductPriceInStorefrontProductPageActionGroup" stepKey="checkFirstProductPriceInStorefrontProductPage">
            <argument name="productName" value="$$createFirstConfigProduct.name$$"/>
            <argument name="expectedPrice" value="{{CatalogRuleToFixed.discount_amount}}"/>
        </actionGroup>

        <!-- Add first product with selected options to the cart -->
        <actionGroup ref="StorefrontAddProductWithSelectedConfigurableAndCustomOptionsToCartActionGroup" stepKey="addFirstProductWithSelectedOptionToCart1">
            <argument name="product" value="$$createFirstConfigProduct$$"/>
            <argument name="option" value="$$createFirstConfigProductAttributeFirstOption.option[store_labels][1][label]$$"/>
            <argument name="customizableOption" value="{{ProductOptionValueRadioButtons1.title}}"/>
        </actionGroup>
        <grabTextFrom selector="{{StorefrontProductInfoMainSection.updatedPrice}}" stepKey="grabForthProductUpdatedPrice1"/>

        <actionGroup ref="StorefrontAddProductWithSelectedConfigurableAndCustomOptionsToCartActionGroup" stepKey="addFirstProductWithSelectedOptionToCart2">
            <argument name="product" value="$$createFirstConfigProduct$$"/>
            <argument name="option" value="$$createFirstConfigProductAttributeSecondOption.option[store_labels][1][label]$$"/>
            <argument name="customizableOption" value="{{ProductOptionValueRadioButtons3.title}}"/>
        </actionGroup>

        <!-- Assert second product in storefront product page -->
        <amOnPage url="$$createSecondConfigProduct.custom_attributes[url_key]$$.html" stepKey="amOnSecondProductPage"/>
        <waitForPageLoad stepKey="waitForSecondProductPageLoad"/>
        <actionGroup ref="StorefrontAssertUpdatedProductPriceInStorefrontProductPageActionGroup" stepKey="checkSecondProductPriceInStorefrontProductPage">
            <argument name="productName" value="$$createSecondConfigProduct.name$$"/>
            <argument name="expectedPrice" value="{{CatalogRuleToFixed.discount_amount}}"/>
        </actionGroup>

        <!-- Add second product with selected options to the cart -->
        <actionGroup ref="StorefrontAddProductWithSelectedConfigurableAndCustomOptionsToCartActionGroup" stepKey="addSecondProductWithSelectedOptionToCart1">
            <argument name="product" value="$$createSecondConfigProduct$$"/>
            <argument name="option" value="$$createSecondConfigProductAttributeFirstOption.option[store_labels][1][label]$$"/>
            <argument name="customizableOption" value="{{ProductOptionValueRadioButtons1.title}}"/>
        </actionGroup>

        <actionGroup ref="StorefrontAddProductWithSelectedConfigurableAndCustomOptionsToCartActionGroup" stepKey="addSecondProductWithSelectedOptionToCart2">
            <argument name="product" value="$$createSecondConfigProduct$$"/>
            <argument name="option" value="$$createSecondConfigProductAttributeSecondOption.option[store_labels][1][label]$$"/>
            <argument name="customizableOption" value="{{ProductOptionValueRadioButtons3.title}}"/>
        </actionGroup>

        <!--Assert products prices in the cart -->
        <amOnPage url="/checkout/cart/" stepKey="amOnShoppingCartPage"/>
        <waitForPageLoad stepKey="waitForShoppingCartPageLoad"/>
        <see userInput="$210.69" selector="{{CheckoutCartProductSection.ProductPriceByOption($$createFirstConfigProductAttributeFirstOption.option[store_labels][1][label]$$)}}" stepKey="assertFirstProductPriceForFirstProductOption"/>
        <see userInput="$120.70" selector="{{CheckoutCartProductSection.ProductPriceByOption($$createFirstConfigProductAttributeSecondOption.option[store_labels][1][label]$$)}}" stepKey="assertFirstProductPriceForSecondProductOption"/>
        <see userInput="$210.69" selector="{{CheckoutCartProductSection.ProductPriceByOption($$createSecondConfigProductAttributeFirstOption.option[store_labels][1][label]$$)}}" stepKey="assertSecondProductPriceForFirstProductOption"/>
        <see userInput="$120.70" selector="{{CheckoutCartProductSection.ProductPriceByOption($$createSecondConfigProductAttributeSecondOption.option[store_labels][1][label]$$)}}" stepKey="assertSecondProductPriceForSecondProductOption"/>
    </test>
</tests>
