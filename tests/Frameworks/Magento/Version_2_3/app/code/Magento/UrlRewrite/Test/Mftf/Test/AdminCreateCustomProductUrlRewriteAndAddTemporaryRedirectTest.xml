<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCustomProductUrlRewriteAndAddTemporaryRedirectTest">
        <annotations>
            <stories value="Create custom URL rewrite"/>
            <title value="Create custom URL rewrite, temporary"/>
            <description value="Login as Admin and create custom product UrlRewrite and add Temporary redirect type "/>
            <testCaseId value="MC-5344"/>
            <severity value="CRITICAL"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <createData entity="defaultSimpleProduct" stepKey="createProduct"/>
            <actionGroup ref="LoginAsAdmin" stepKey="login"/>
        </before>
        <after>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <actionGroup ref="AdminDeleteUrlRewrite" stepKey="deleteCustomUrlRewrite">
                <argument name="requestPath" value="{{_defaultProduct.name}}.html"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Filter Product in product page and get the Product ID -->
        <actionGroup ref="filterAndSelectProduct" stepKey="filterProduct">
            <argument name="productSku" value="$$createProduct.sku$$"/>
        </actionGroup>
        <grabFromCurrentUrl stepKey="productId" regex="#\/([0-9]*)?\/$#"/>

        <!-- Open UrlRewrite Edit page and update the fields and fill the created product Target Path  -->
        <actionGroup ref="AdminAddCustomUrlRewrite" stepKey="addCustomUrlRewrite">
            <argument name="customUrlRewriteValue" value="Custom"/>
            <argument name="storeValue" value="Default Store View"/>
            <argument name="requestPath" value="{{_defaultProduct.name}}.html"/>
            <argument name="redirectTypeValue" value="Temporary (302)"/>
            <argument name="targetPath" value="catalog/product/view/id/{$productId}"/>
            <argument name="description" value="End To End Test"/>
        </actionGroup>

        <!--Assert updated product Url Rewrite in Grid -->
        <actionGroup ref="AdminSearchByRequestPath" stepKey="searchByRequestPath">
            <argument name="redirectPath" value="{{_defaultProduct.name}}.html" />
            <argument name="redirectType" value="Temporary (302)" />
            <argument name="targetPath" value="catalog/product/view/id/{$productId}"/>
        </actionGroup>

        <!-- Assert initial product Url rewrite in grid -->
        <actionGroup ref="AdminSearchByRequestPath" stepKey="searchByRequestPath1">
            <argument name="redirectPath" value="$$createProduct.name$$.html" />
            <argument name="redirectType" value="No"/>
            <argument name="targetPath" value="catalog/product/view/id/{$productId}"/>
        </actionGroup>

        <!-- Assert updated product redirect in Store Front-->
        <actionGroup ref="AssertStorefrontProductRedirect" stepKey="verifyProductInStoreFront">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="productSku" value="$$createProduct.sku$$"/>
            <argument name="productRequestPath" value="{{_defaultProduct.name}}.html"/>
        </actionGroup>

        <!-- Assert initial product redirect in Store Front-->
        <actionGroup ref="AssertStorefrontProductRedirect" stepKey="verifyProductInStoreFront1">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="productSku" value="$$createProduct.sku$$"/>
            <argument name="productRequestPath" value="$$createProduct.name$$.html"/>
        </actionGroup>
    </test>
</tests>
