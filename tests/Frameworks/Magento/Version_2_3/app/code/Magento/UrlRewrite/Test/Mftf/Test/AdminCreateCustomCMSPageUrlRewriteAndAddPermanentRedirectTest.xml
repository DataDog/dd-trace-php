<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCustomCMSPageUrlRewriteAndAddPermanentRedirectTest">
        <annotations>
            <stories value="Create custom URL rewrite"/>
            <title value="Create custom URL rewrite, CMS permanent"/>
            <description value="Login as Admin and create custom CMS page UrlRewrite and add Permanent redirect type "/>
            <testCaseId value="MC-5345"/>
            <severity value="CRITICAL"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <createData entity="simpleCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="login"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="AdminDeleteUrlRewrite" stepKey="deleteCustomUrlRewrite">
                <argument name="requestPath" value="{{defaultCmsPage.title}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Open CMS Edit Page and Get the CMS ID -->
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <grabFromCurrentUrl stepKey="cmsId" regex="#\/([0-9]*)?\/$#"/>

        <!-- Open UrlRewrite Edit page and update the fields and fill the created CMS Page Target Path -->
        <actionGroup ref="AdminAddCustomUrlRewrite" stepKey="addCustomUrlRewrite">
            <argument name="customUrlRewriteValue" value="Custom"/>
            <argument name="storeValue" value="Default Store View"/>
            <argument name="requestPath" value="{{defaultCmsPage.title}}"/>
            <argument name="redirectTypeValue" value="Permanent (301)"/>
            <argument name="targetPath" value="cms/page/view/page_id/{$cmsId}"/>
            <argument name="description" value="Created New CMS Page."/>
        </actionGroup>

        <!-- Assert updated CMS page Url Rewrite in Grid -->
        <actionGroup ref="AdminSearchByRequestPath" stepKey="searchByRequestPath">
            <argument name="redirectPath" value="{{defaultCmsPage.title}}" />
            <argument name="redirectType" value="Permanent (301)" />
            <argument name="targetPath" value="cms/page/view/page_id/{$cmsId}"/>
        </actionGroup>

        <!--  Assert initial CMS page Url Rewrite in Grid-->
        <actionGroup ref="AdminSearchByRequestPath" stepKey="searchByRequestPath1">
            <argument name="redirectPath" value="$$createCMSPage.identifier$$" />
            <argument name="redirectType" value="No"/>
            <argument name="targetPath" value="cms/page/view/page_id/{$cmsId}"/>
        </actionGroup>

        <!-- Assert Updated Request Path redirects to the CMS Page on Store Front -->
        <actionGroup ref="navigateToStorefrontForCreatedPage" stepKey="navigateToTheStoreFront">
            <argument name="page" value="{{defaultCmsPage.title}}"/>
        </actionGroup>

        <!-- Assert updated CMS redirect in Store Front -->
        <actionGroup ref="AssertStoreFrontCMSPage" stepKey="assertCMSPage">
            <argument name="cmsTitle"  value="$$createCMSPage.title$$"/>
            <argument name="cmsContent" value="$$createCMSPage.content$$"/>
            <argument name="cmsContentHeading" value="$$createCMSPage.content_heading$$"/>
        </actionGroup>

        <!-- Assert initial request path directs to the CMS Page on Store Front -->
        <actionGroup ref="navigateToStorefrontForCreatedPage" stepKey="navigateToTheStoreFront1">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>

        <!-- Assert initial CMS redirect in Store Front   -->
        <actionGroup ref="AssertStoreFrontCMSPage" stepKey="assertCMSPage1">
            <argument name="cmsTitle"  value="$$createCMSPage.title$$"/>
            <argument name="cmsContent" value="$$createCMSPage.content$$"/>
            <argument name="cmsContentHeading" value="$$createCMSPage.content_heading$$"/>
        </actionGroup>
    </test>
</tests>
