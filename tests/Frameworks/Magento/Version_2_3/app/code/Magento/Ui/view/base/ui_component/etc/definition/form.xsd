<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <!-- Include section -->
    <xs:include schemaLocation="urn:magento:module:Magento_Ui:view/base/ui_component/etc/definition/ui_component.xsd"/>

    <xs:complexType name="componentForm">
        <xs:sequence>
            <xs:group ref="configurable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="settings" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:group ref="componentFormSettings"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attributeGroup ref="ui_element_attributes"/>
    </xs:complexType>

    <xs:group name="componentFormSettings">
        <xs:choice>
            <xs:group ref="uiCollectionSettings"/>
            <xs:element name="selectorPrefix" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The name that can be used to address the block to which this attribute is assigned.
                        The name must be unique per generated page.
                        If not specified, the name is assigned automatically in the following format: "ANONYMOUS_n".
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="messagesClass" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The CSS class assigned to the "div" element, where the form elements validation error is
                        rendered.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="errorClass" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The CSS class added to the component's DOM block if an error appears.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ajaxSaveType" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        There are two possible approaches to collect form data for ajaxSave:
                        - "default": collects data using native FormData JavaScript class.
                        - "simple": collects data to simple key value pairs object.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="layout" type="layoutType"/>
            <xs:element name="ajaxSave" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Save Form values by AJAX.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="namespace" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Form identifier that is passed to backend when performing actions, e.g. validate or submit.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="reloadItem" type="xs:string"/>
            <xs:element ref="label"/>
            <xs:element ref="spinner"/>
            <xs:element ref="buttons"/>
        </xs:choice>
    </xs:group>

    <xs:complexType name="layoutType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="type" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="navContainerName" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="argument" type="argumentType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>
</xs:schema>
