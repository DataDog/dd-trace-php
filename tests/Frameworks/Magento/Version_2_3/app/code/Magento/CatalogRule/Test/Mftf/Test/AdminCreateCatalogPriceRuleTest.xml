<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCatalogPriceRuleByPercentTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Create catalog price rule"/>
            <title value="Admin should be able to create a catalog price rule applied as a percentage of original (for simple product)"/>
            <description value="Admin should be able to create a catalog price rule applied as a percentage of original (for simple product)"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-65"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <!-- Create the simple product and category that it will be in -->
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Perform reindex and flush cache -->
            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>

            <!-- log in and create the price rule -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup stepKey="createNewPriceRule" ref="newCatalogPriceRuleByUI"/>
            <actionGroup stepKey="selectNotLoggedInCustomerGroup" ref="selectNotLoggedInCustomerGroup"/>
            <click stepKey="saveAndApply" selector="{{AdminNewCatalogPriceRule.saveAndApply}}"/>
            <see stepKey="assertSuccess" selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the rule."/>
        </before>
        <after>
            <!-- delete the simple product and catalog price rule and logout -->
            <amOnPage stepKey="goToPriceRulePage" url="admin/catalog_rule/promo_catalog/"/>
            <actionGroup stepKey="deletePriceRule" ref="deleteEntitySecondaryGrid">
                <argument name="name" value="{{_defaultCatalogRule.name}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
            </actionGroup>
            <amOnPage url="{{AdminLogoutPage.url}}" stepKey="amOnLogoutPage"/>
            <deleteData createDataKey="createProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
        </after>

        <!-- Go to category page and make sure that all of the prices are correct -->
        <amOnPage url="$$createCategory.name$$.html" stepKey="goToCategoryPage"/>
        <waitForPageLoad stepKey="waitForCategory"/>
        <see stepKey="seeOldPrice" selector="{{StorefrontCategoryProductSection.ProductOldPriceByNumber('1')}}" userInput="$$createProduct.price$$"/>
        <see stepKey="seeNewPrice" selector="{{StorefrontCategoryProductSection.ProductSpecialPriceByNumber('1')}}" userInput="$110.70"/>

        <!-- Go to the simple product page and check that the prices are correct -->
        <amOnPage stepKey="goToProductPage" url="$$createProduct.sku$$.html"/>
        <waitForPageLoad stepKey="waitForProductPage"/>
        <see stepKey="seeOldPriceTag" selector="{{StorefrontProductInfoMainSection.oldPriceTag}}" userInput="Regular Price"/>
        <see stepKey="seeOldPrice2" selector="{{StorefrontProductInfoMainSection.oldPriceAmount}}" userInput="$$createProduct.price$$"/>
        <see stepKey="seeNewPrice2" selector="{{StorefrontProductInfoMainSection.updatedPrice}}" userInput="$110.70"/>

        <!-- Add the product to cart and check that the price is correct there -->
        <click stepKey="addToCart" selector="{{StorefrontProductActionSection.addToCart}}"/>
        <waitForPageLoad stepKey="waitForAddedToCart"/>
        <amOnPage url="{{CheckoutCartPage.url}}" stepKey="goToCheckout"/>
        <waitForPageLoad stepKey="waitForCart"/>
        <see stepKey="seeNewPriceInCart" selector="{{CheckoutCartSummarySection.subtotal}}" userInput="$110.70"/>
    </test>

    <test name="AdminCreateCatalogPriceRuleByFixedTest" extends="AdminCreateCatalogPriceRuleByPercentTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Create catalog price rule"/>
            <title value="Admin should be able to create a catalog price rule applied as a fixed amount (for simple product)"/>
            <description value="Admin should be able to create a catalog price rule applied as a fixed amount (for simple product)"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-93"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <actionGroup stepKey="createNewPriceRule" ref="newCatalogPriceRuleByUI">
                <argument name="catalogRule" value="CatalogRuleByFixed"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup stepKey="deletePriceRule" ref="deleteEntitySecondaryGrid">
                <argument name="name" value="{{CatalogRuleByFixed.name}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
            </actionGroup>
        </after>
    </test>

    <test name="AdminCreateCatalogPriceRuleToPercentTest" extends="AdminCreateCatalogPriceRuleByPercentTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Create catalog price rule"/>
            <title value="Admin should be able to create a catalog price rule adjust final price to this percentage (for simple product)"/>
            <description value="Admin should be able to create a catalog price rule adjust final price to this percentage (for simple product)"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-69"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <actionGroup stepKey="createNewPriceRule" ref="newCatalogPriceRuleByUI">
                <argument name="catalogRule" value="CatalogRuleToPercent"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup stepKey="deletePriceRule" ref="deleteEntitySecondaryGrid">
                <argument name="name" value="{{CatalogRuleToPercent.name}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
            </actionGroup>
        </after>
    </test>

    <test name="AdminCreateCatalogPriceRuleToFixedTest" extends="AdminCreateCatalogPriceRuleByPercentTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Create catalog price rule"/>
            <title value="Admin should be able to create a catalog price rule adjust final price to discount value (for simple product)"/>
            <description value="Admin should be able to create a catalog price rule adjust final price to discount value (for simple product)"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-60"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <actionGroup stepKey="createNewPriceRule" ref="newCatalogPriceRuleByUI">
                <argument name="catalogRule" value="CatalogRuleToFixed"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup stepKey="deletePriceRule" ref="deleteEntitySecondaryGrid">
                <argument name="name" value="{{CatalogRuleToFixed.name}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
            </actionGroup>
        </after>
    </test>

    <test name="AdminCreateCatalogPriceRuleForCustomerGroupTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Apply catalog price rule"/>
            <title value="Admin should be able to apply the catalog rule by customer group"/>
            <description value="Admin should be able to apply the catalog rule by customer group"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-71"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <!-- Create a simple product and a category-->
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!-- Delete the simple product and category -->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <!-- Delete the catalog rule -->
            <amOnPage url="{{CatalogRulePage.url}}" stepKey="goToRulePage"/>
            <waitForPageLoad stepKey="waitForRulePage"/>
            <actionGroup ref="deleteEntitySecondaryGrid" stepKey="deletePriceRule">
                <argument name="name" value="{{_defaultCatalogRule.name}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
            </actionGroup>
            <amOnPage url="{{AdminLogoutPage.url}}" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Create a catalog rule for the NOT LOGGED IN customer group -->
        <actionGroup ref="newCatalogPriceRuleByUI" stepKey="createNewPriceRule"/>
        <actionGroup ref="selectNotLoggedInCustomerGroup" stepKey="selectNotLoggedInCustomerGroup"/>
        <click selector="{{AdminNewCatalogPriceRule.saveAndApply}}" stepKey="saveAndApply"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the rule." stepKey="assertSuccess"/>

        <!-- Perform reindex and flush cache -->
        <magentoCLI command="indexer:reindex" stepKey="reindex"/>
        <magentoCLI command="cache:flush" stepKey="flushCache"/>

        <!-- As a NOT LOGGED IN user, go to the storefront category page and should see the discount -->
        <amOnPage url="$$createCategory.name$$.html" stepKey="goToCategory1"/>
        <see selector="{{StorefrontCategoryProductSection.ProductInfoByNumber('1')}}" userInput="$$createProduct.name$$" stepKey="seeProduct1"/>
        <see selector="{{StorefrontCategoryProductSection.ProductInfoByNumber('1')}}" userInput="$110.70" stepKey="seeDiscountedPrice1"/>

        <!-- Create a user account -->
        <actionGroup ref="SignUpNewUserFromStorefrontActionGroup" stepKey="createAnAccount">
            <argument name="Customer" value="CustomerEntityOne"/>
        </actionGroup>

        <!-- As a logged in user, go to the storefront category page and should NOT see discount -->
        <amOnPage url="$$createCategory.name$$.html" stepKey="goToCategory2"/>
        <see selector="{{StorefrontCategoryProductSection.ProductInfoByNumber('1')}}" userInput="$$createProduct.name$$" stepKey="seeProduct2"/>
        <see selector="{{StorefrontCategoryProductSection.ProductInfoByNumber('1')}}" userInput="$123.00" stepKey="seeDiscountedPrice2"/>
    </test>

    <test name="AdminCreateCatalogPriceRuleWithInvalidDataTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Create Catalog Price Rule"/>
            <title value="Admin can not create catalog price rule with the invalid data"/>
            <description value="Admin can not create catalog price rule with the invalid data"/>
            <severity value="MAJOR"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <amOnPage url="{{AdminLogoutPage.url}}" stepKey="amOnLogoutPage"/>
        </after>

        <actionGroup ref="newCatalogPriceRuleWithInvalidData" stepKey="createNewPriceRule">
            <argument name="catalogRule" value="catalogRuleWithInvalid"/>
        </actionGroup>

        <see selector="{{AdminNewCatalogPriceRule.fieldError('sort_order')}}" userInput="Please enter a valid number in this field." stepKey="seeSortOrderError"/>
    </test>
</tests>
