<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <!-- action group to create a new catalog price rule giving a catalogRule entity -->
    <actionGroup name="newCatalogPriceRuleByUI">
        <annotations>
            <description>Goes to the Catalog Price Rule grid. Clicks on Add. Fills in the provided Catalog Rule details.</description>
        </annotations>
        <arguments>
            <argument name="catalogRule" defaultValue="_defaultCatalogRule"/>
        </arguments>

        <!-- Go to the admin Catalog rule grid and add a new one -->
        <amOnPage stepKey="goToPriceRulePage" url="{{CatalogRulePage.url}}"/>
        <waitForPageLoad stepKey="waitForPriceRulePage"/>
        <click stepKey="addNewRule" selector="{{AdminGridMainControls.add}}"/>

        <!-- Fill the form according the attributes of the entity -->
        <fillField stepKey="fillName" selector="{{AdminNewCatalogPriceRule.ruleName}}" userInput="{{catalogRule.name}}"/>
        <fillField stepKey="fillDescription" selector="{{AdminNewCatalogPriceRule.description}}" userInput="{{catalogRule.description}}"/>
        <click stepKey="selectActive" selector="{{AdminCategoryBasicFieldSection.enableCategoryLabel}}"/>
        <selectOption stepKey="selectSite" selector="{{AdminNewCatalogPriceRule.websites}}" userInput="{{catalogRule.website_ids[0]}}"/>
        <click stepKey="clickFromCalender" selector="{{AdminNewCatalogPriceRule.fromDateButton}}"/>
        <click stepKey="clickFromToday" selector="{{AdminNewCatalogPriceRule.todayDate}}"/>
        <click stepKey="clickToCalender" selector="{{AdminNewCatalogPriceRule.toDateButton}}"/>
        <click stepKey="clickToToday" selector="{{AdminNewCatalogPriceRule.todayDate}}"/>
        <click stepKey="openActionDropdown" selector="{{AdminNewCatalogPriceRule.actionsTab}}"/>
        <fillField stepKey="fillDiscountValue" selector="{{AdminNewCatalogPriceRuleActions.discountAmount}}" userInput="{{catalogRule.discount_amount}}"/>
        <selectOption stepKey="discountType" selector="{{AdminNewCatalogPriceRuleActions.apply}}" userInput="{{catalogRule.simple_action}}"/>
        <selectOption stepKey="discardSubsequentRules" selector="{{AdminNewCatalogPriceRuleActions.disregardRules}}" userInput="Yes"/>

        <!-- Scroll to top and either save or save and apply after the action group -->
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <waitForPageLoad stepKey="waitForApplied"/>
    </actionGroup>

    <actionGroup name="createCatalogPriceRule">
        <annotations>
            <description>Clicks on the Add button. Fills Rule Name, Description, Website and Discount Value.</description>
        </annotations>
        <arguments>
            <argument name="catalogRule" defaultValue="_defaultCatalogRule"/>
        </arguments>
        <click stepKey="addNewRule" selector="{{AdminGridMainControls.add}}"/>
        <fillField selector="{{AdminNewCatalogPriceRule.ruleName}}" userInput="{{catalogRule.name}}"  stepKey="fillName" />
        <click stepKey="selectActive" selector="{{AdminCategoryBasicFieldSection.enableCategoryLabel}}"/>
        <fillField selector="{{AdminNewCatalogPriceRule.description}}" userInput="{{catalogRule.description}}" stepKey="fillDescription" />
        <selectOption selector="{{AdminNewCatalogPriceRule.websites}}" parameterArray="{{catalogRule.website_ids}}" stepKey="selectSite" />
        <click stepKey="openActionDropdown" selector="{{AdminNewCatalogPriceRule.actionsTab}}"/>
        <fillField stepKey="fillDiscountValue" selector="{{AdminNewCatalogPriceRuleActions.discountAmount}}" userInput="{{catalogRule.discount_amount}}"/>
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <click selector="{{AdminNewCatalogPriceRule.save}}" stepKey="clickSave"/>
        <waitForPageLoad stepKey="waitForApplied"/>
    </actionGroup>

    <actionGroup name="AdminCreateCatalogPriceRuleWithConditionActionGroup" extends="createCatalogPriceRule">
        <arguments>
            <argument name="catalogRuleType" type="entity" defaultValue="PriceRuleWithCondition"/>
        </arguments>
        <waitForPageLoad stepKey="waitForPageLoad" after="addNewRule"/>
        <click selector="{{AdminNewCatalogPriceRule.conditionsTab}}" stepKey="expandConditions" before="openActionDropdown"/>
        <scrollTo selector="{{AdminNewCatalogPriceRule.conditionsTab}}" stepKey="scrollToConditionsTab" after="expandConditions"/>
        <waitForElementVisible selector="{{PriceRuleConditionsSection.createNewRule}}" stepKey="waitForNewRule" after="scrollToConditionsTab"/>
        <click selector="{{PriceRuleConditionsSection.createNewRule}}" stepKey="clickNewRule" after="waitForNewRule"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.conditionsDropdown}}" userInput="{{ProductAttributeFrontendLabel.label}}" stepKey="selectProductAttribute" after="clickNewRule"/>
        <waitForPageLoad stepKey="waitForAttributeLoad" after="selectProductAttribute"/>
        <!--Assert that attribute contains today date without time-->
        <comment userInput="Assert that attribute contains today date without time" stepKey="assertDate" after="waitForAttributeLoad"/>
        <generateDate date="now" format="Y-m-d" stepKey="today" after="assertDate"/>
        <grabTextFrom selector="{{PriceRuleConditionsSection.firstProductAttributeSelected}}"  stepKey="grabTextFromSelectedAttribute" after="today"/>
        <assertEquals expected="$today" actual="$grabTextFromSelectedAttribute" stepKey="assertTodayDate" after="grabTextFromSelectedAttribute"/>
    </actionGroup>
    <actionGroup name="AdminCreateMultipleWebsiteCatalogPriceRule" extends="createCatalogPriceRule">
        <remove keyForRemoval="selectSite"/>
        <selectOption selector="{{AdminNewCatalogPriceRule.websites}}" parameterArray="['FirstWebsite', 'SecondWebsite']" stepKey="selectWebsite"/>
    </actionGroup>
    <actionGroup name="CreateCatalogPriceRuleViaTheUi">
        <arguments>
            <argument name="catalogRule" defaultValue="_defaultCatalogRule"/>
            <argument name="customerGroup" defaultValue="General" type="string"/>
            <argument name="disregardRules" defaultValue="Yes" type="string"/>
        </arguments>

        <fillField selector="{{AdminNewCatalogPriceRule.ruleName}}" userInput="{{catalogRule.name}}" stepKey="fillName1"/>
        <fillField selector="{{AdminNewCatalogPriceRule.description}}" userInput="{{catalogRule.description}}" stepKey="fillDescription1"/>
        <selectOption selector="{{AdminNewCatalogPriceRule.websites}}" userInput="{{catalogRule.website_ids[0]}}"  stepKey="selectWebSite1"/>
        <selectOption selector="{{AdminNewCatalogPriceRule.customerGroups}}" userInput="{{customerGroup}}" stepKey="selectCustomerGroup1"/>
        <scrollTo selector="{{AdminNewCatalogPriceRule.actionsTab}}" stepKey="scrollToActionTab1"/>
        <click selector="{{AdminNewCatalogPriceRule.actionsTab}}" stepKey="openActionDropdown1"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleActions.apply}}" userInput="{{catalogRule.simple_action}}" stepKey="discountType1"/>
        <fillField selector="{{AdminNewCatalogPriceRuleActions.discountAmount}}" userInput="{{catalogRule.discount_amount}}" stepKey="fillDiscountValue1"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleActions.disregardRules}}" userInput="{{disregardRules}}" stepKey="discardSubsequentRules1"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
        <scrollToTopOfPage stepKey="scrollToTop1"/>
    </actionGroup>

    <actionGroup name="CreateCatalogPriceRuleConditionWithAttribute">
        <annotations>
            <description>Add Conditional Requirements to a Catalog Price Rule from the creation/edit page.</description>
        </annotations>
        <arguments>
            <argument name="attributeName" type="string"/>
            <argument name="targetValue" type="string"/>
            <argument name="targetSelectValue" type="string"/>
        </arguments>

        <click selector="{{AdminNewCatalogPriceRule.conditionsTab}}" stepKey="openConditionsTab"/>
        <waitForPageLoad stepKey="waitForConditionTabOpened"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.newCondition}}" stepKey="addNewCondition"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.conditionSelect('1')}}" userInput="{{attributeName}}" stepKey="selectTypeCondition"/>
        <waitForElement selector="{{AdminNewCatalogPriceRuleConditions.targetEllipsisValue('1', targetValue)}}" stepKey="waitForIsTarget"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.targetEllipsisValue('1', 'is')}}" stepKey="clickOnIs"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.targetSelect('1')}}" userInput="{{targetSelectValue}}" stepKey="selectTargetCondition"/>
        <click selector="{{AdminNewCatalogPriceRule.fromDateButton}}" stepKey="clickFromCalender"/>
        <click selector="{{AdminNewCatalogPriceRule.todayDate}}" stepKey="clickFromToday"/>
    </actionGroup>

    <!-- Apply all of the saved catalog price rules -->
    <actionGroup name="applyCatalogPriceRules">
        <annotations>
            <description>Goes to the Catalog Price Rule grid page. Clicks on Apply Rules. Validates that the Success Message is present and correct.</description>
        </annotations>

        <amOnPage stepKey="goToPriceRulePage" url="{{CatalogRulePage.url}}"/>
        <waitForPageLoad stepKey="waitForPriceRulePage"/>
        <click stepKey="applyRules" selector="{{AdminCatalogPriceRuleGrid.applyRules}}"/>
        <see stepKey="assertSuccess" selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="Updated rules applied."/>
    </actionGroup>

    <!--Add Catalog Rule Condition With product SKU-->
    <actionGroup name="newCatalogPriceRuleByUIWithConditionIsSKU" extends="newCatalogPriceRuleByUI">
        <annotations>
            <description>EXTENDS: newCatalogPriceRuleByUI. Add a Catalog Price Rule Condition based on the provided SKU.</description>
        </annotations>
        <arguments>
            <argument name="productSku"/>
        </arguments>

        <click selector="{{AdminNewCatalogPriceRule.conditionsTab}}" after="discardSubsequentRules" stepKey="openConditionsTab"/>
        <waitForPageLoad after="openConditionsTab" stepKey="waitForConditionTabOpened"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.newCondition}}" after="waitForConditionTabOpened" stepKey="addNewCondition"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.conditionSelect('1')}}" userInput="Magento\CatalogRule\Model\Rule\Condition\Product|sku" after="addNewCondition" stepKey="selectTypeCondition"/>
        <waitForPageLoad after="selectTypeCondition" stepKey="waitForConditionChosed"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.targetEllipsis('1')}}" after="waitForConditionChosed" stepKey="clickEllipsis"/>
        <fillField selector="{{AdminNewCatalogPriceRuleConditions.targetInput('1', '1')}}" userInput="{{productSku}}" after="clickEllipsis" stepKey="fillProductSku"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.applyButton('1', '1')}}" after="fillProductSku" stepKey="clickApply"/>
    </actionGroup>

    <!--Add Catalog Rule Condition With Category-->
    <actionGroup name="newCatalogPriceRuleByUIWithConditionIsCategory" extends="newCatalogPriceRuleByUI">
        <annotations>
            <description>EXTENDS: newCatalogPriceRuleByUI. Add a Catalog Price Rule Condition based on the provided Category ID.</description>
        </annotations>
        <arguments>
            <argument name="categoryId"/>
        </arguments>

        <click selector="{{AdminNewCatalogPriceRule.conditionsTab}}" after="discardSubsequentRules" stepKey="openConditionsTab"/>
        <waitForPageLoad after="openConditionsTab" stepKey="waitForConditionTabOpened"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.newCondition}}" after="waitForConditionTabOpened" stepKey="addNewCondition"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.conditionSelect('1')}}" userInput="Magento\CatalogRule\Model\Rule\Condition\Product|category_ids" after="addNewCondition" stepKey="selectTypeCondition"/>
        <waitForPageLoad after="selectTypeCondition" stepKey="waitForConditionChosed"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.targetEllipsis('1')}}" after="waitForConditionChosed" stepKey="clickEllipsis"/>
        <fillField selector="{{AdminNewCatalogPriceRuleConditions.targetInput('1', '1')}}" userInput="{{categoryId}}" after="clickEllipsis" stepKey="fillCategoryId"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.applyButton('1', '1')}}" after="fillCategoryId" stepKey="clickApply"/>
    </actionGroup>

    <actionGroup name="selectGeneralCustomerGroupActionGroup">
        <annotations>
            <description>Selects the 'General' Customer Group for a Catalog Price Rule on the creation/edit page.</description>
        </annotations>

        <selectOption selector="{{AdminNewCatalogPriceRule.customerGroups}}" userInput="General" stepKey="selectCustomerGroup"/>
    </actionGroup>

    <actionGroup name="selectNotLoggedInCustomerGroupActionGroup">
        <annotations>
            <description>Selects the 'NOT LOGGED IN' Customer Group for a Catalog Price Rule on the creation/edit page.</description>
        </annotations>

        <selectOption selector="{{AdminNewCatalogPriceRule.customerGroups}}" userInput="NOT LOGGED IN" stepKey="selectCustomerGroup"/>
    </actionGroup>

    <!-- Open rule for Edit -->
    <actionGroup name="OpenCatalogPriceRule">
        <arguments>
            <argument name="ruleName" type="string" defaultValue="CustomCatalogRule.name"/>
        </arguments>
        <amOnPage url="{{AdminCatalogPriceRuleGridPage.url}}" stepKey="goToAdminCatalogPriceRuleGridPage"/>
        <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearExistingFilters"/>
        <fillField selector="{{AdminCatalogPriceRuleGridSection.filterByRuleName}}" userInput="{{ruleName}}" stepKey="filterByRuleName"/>
        <click selector="{{AdminDataGridHeaderSection.applyFilters}}" stepKey="clickSearch"/>
        <click selector="{{AdminGridTableSection.row('1')}}" stepKey="clickEdit"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
    </actionGroup>

    <actionGroup name="RemoveCatalogPriceRule" extends="OpenCatalogPriceRule">
        <click selector="{{AdminMainActionsSection.delete}}" after="waitForPageLoad" stepKey="clickToDelete"/>
        <waitForElementVisible selector="{{AdminConfirmationModalSection.ok}}" after="clickToDelete" stepKey="waitForElementVisible"/>
        <click selector="{{AdminConfirmationModalSection.ok}}" after="waitForElementVisible" stepKey="clickToConfirm"/>
        <waitForElementVisible selector="{{AdminMessagesSection.success}}" after="clickToConfirm" stepKey="waitForSuccessMessage"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You deleted the rule." after="waitForSuccessMessage" stepKey="verifyRuleIsDeleted"/>
    </actionGroup>

    <actionGroup name="AdminFillCatalogRuleConditionActionGroup">
        <annotations>
            <description>Clicks on the Conditions tab. Fills in the provided condition for Catalog Price Rule.</description>
        </annotations>
        <arguments>
            <argument name="condition" type="string" defaultValue="{{CatalogRuleProductConditions.categoryIds}}"/>
            <argument name="conditionOperator" type="string" defaultValue="is"/>
            <argument name="conditionValue" type="string" defaultValue="2"/>
        </arguments>

        <conditionalClick selector="{{AdminNewCatalogPriceRule.conditionsTab}}" dependentSelector="{{AdminNewCatalogPriceRuleConditions.newCondition}}" visible="false" stepKey="openConditionsTab"/>
        <waitForElementVisible selector="{{AdminNewCatalogPriceRuleConditions.newCondition}}" stepKey="waitForAddConditionButton"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.newCondition}}" stepKey="addNewCondition"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.conditionSelect('1')}}" userInput="{{condition}}" stepKey="selectTypeCondition"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.condition('is')}}" stepKey="clickOnOperator"/>
        <selectOption selector="{{AdminNewCatalogPriceRuleConditions.activeOperatorSelect}}" userInput="{{conditionOperator}}" stepKey="selectCondition"/>
        <!-- In case we are choosing already selected value - select is not closed automatically -->
        <conditionalClick selector="{{AdminNewCatalogPriceRuleConditions.condition('...')}}" dependentSelector="{{AdminNewCatalogPriceRuleConditions.activeOperatorSelect}}" visible="true" stepKey="closeSelect"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.condition('...')}}" stepKey="clickToChooseOption3"/>
        <waitForElementVisible selector="{{AdminNewCatalogPriceRuleConditions.activeValueInput}}" stepKey="waitForValueInput"/>
        <fillField selector="{{AdminNewCatalogPriceRuleConditions.activeValueInput}}" userInput="{{conditionValue}}" stepKey="fillConditionValue"/>
        <click selector="{{AdminNewCatalogPriceRuleConditions.activeConditionApplyButton}}" stepKey="clickApply"/>
        <waitForElementNotVisible selector="{{AdminNewCatalogPriceRuleConditions.activeConditionApplyButton}}" stepKey="waitForApplyButtonInvisibility"/>
    </actionGroup>

    <actionGroup name="newCatalogPriceRuleWithInvalidData">
        <annotations>
            <description>Goes to the Catalog Price Rule grid. Clicks on Add. Fills in the provided Catalog Rule details with invalid data.</description>
        </annotations>
        <arguments>
            <argument name="catalogRule" defaultValue="catalogRuleWithInvalid"/>
        </arguments>

        <!-- Go to the admin Catalog rule grid and add a new one -->
        <amOnPage stepKey="goToPriceRulePage" url="{{CatalogRulePage.url}}"/>
        <waitForPageLoad stepKey="waitForPriceRulePage"/>

        <click stepKey="addNewRule" selector="{{AdminGridMainControls.add}}"/>
        <fillField stepKey="fillPriority" selector="{{AdminNewCatalogPriceRule.priority}}" userInput="{{catalogRule.priority}}"/>
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <click selector="{{AdminNewCatalogPriceRule.save}}" stepKey="clickSave"/>
        <waitForPageLoad stepKey="waitForApplied"/>
    </actionGroup>
</actionGroups>
