<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontAddTwoBundleMultiSelectOptionsToTheShoppingCartTest">
        <annotations>
            <stories value="Shopping Cart"/>
            <title value="Add two products to the cart from multi select options of a bundle product"/>
            <description value="Add two products to the cart from multi select options of a bundle product."/>
            <testCaseId value="MC-14728"/>
            <severity value="CRITICAL"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRate"/>
            <magentoCLI command="config:set {{EnableFlatRateDefaultPriceConfigData.path}} {{EnableFlatRateDefaultPriceConfigData.value}}" stepKey="enableFlatRateDefaultPrice"/>
            <createData entity="SimpleSubCategory" stepKey="createSubCategory"/>
            <!--Create  simple product-->
            <createData entity="SimpleProduct2" stepKey="simpleProduct1">
                <field key="price">10.00</field>
            </createData>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2">
                <field key="price">50.00</field>
            </createData>
            <!--Create Bundle product with multi select option-->
            <createData entity="BundleProductPriceViewRange" stepKey="createBundleProduct">
                <requiredEntity createDataKey="createSubCategory"/>
            </createData>
            <createData entity="MultipleSelectOption" stepKey="createBundleOption1_1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="required">True</field>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct2">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </createData>
            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </before>
        <after>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="createBundleProduct" stepKey="deleteBundleProduct"/>
            <deleteData createDataKey="createSubCategory" stepKey="deleteCategory"/>
        </after>

        <!--Open Product page in StoreFront -->
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPageByCustomAttributeUrlKey" stepKey="openProductPageAndVerifyProduct">
            <argument name="product" value="$$createBundleProduct$$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontElementVisibleActionGroup" stepKey="seePriceRangeIsVisible">
            <argument name="selector" value="{{StorefrontProductInfoMainSection.priceFrom}}"/>
            <argument name="userInput" value="From $10.00"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontElementVisibleActionGroup" stepKey="seePriceRangeIsVisible1">
            <argument name="selector" value="{{StorefrontProductInfoMainSection.priceTo}}"/>
            <argument name="userInput" value="To $60.00"/>
        </actionGroup>

        <!-- Click on customize And Add To Cart Button -->
        <actionGroup ref="StorefrontSelectCustomizeAndAddToTheCartButtonActionGroup" stepKey="clickOnCustomizeAndAddtoCartButton"/>

        <!-- Select Two Products, enter the quantity and add product to the cart -->
        <selectOption selector="{{StorefrontBundledSection.multiSelectOption}}" parameterArray="[$$simpleProduct1.name$$ +$10.00, $$simpleProduct2.name$$ +$50.00]" stepKey="selectOptions"/>
        <actionGroup ref="StorefrontEnterProductQuantityAndAddToTheCartActionGroup" stepKey="enterProductQuantityAndAddToTheCart">
            <argument name="quantity" value="1"/>
        </actionGroup>

        <!-- Select Mini Cart and select 'View And Edit Cart' -->
        <actionGroup ref="clickViewAndEditCartFromMiniCart" stepKey="selectViewAndEditCart"/>

        <!--Assert Shopping Cart Summary-->
        <actionGroup ref="AssertStorefrontShoppingCartSummaryWithShippingActionGroup" stepKey="AssertCartSummary" >
            <argument name="subtotal" value="$60.00"/>
            <argument name="shipping" value="5.00"/>
            <argument name="total" value="65.00"/>
        </actionGroup>

        <!--Assert Product items in cart -->
        <actionGroup ref="AssertStorefrontCheckoutCartItemsActionGroup" stepKey="assertSimpleProduct1ItemsInCheckOutCart">
            <argument name="productName" value="$$createBundleProduct.name$$"/>
            <argument name="productSku" value="$$createBundleProduct.sku$$"/>
            <argument name="productPrice" value="$60.00"/>
            <argument name="subtotal" value="$60.00" />
            <argument name="qty" value="1"/>
        </actionGroup>

        <!-- Assert Grouped product options is displayed in cart -->
        <actionGroup ref="AssertStorefrontElementVisibleActionGroup" stepKey="seeProductOptionTitle">
            <argument name="selector" value="{{CheckoutCartProductSection.productOptionLabel}}"/>
            <argument name="userInput" value="$$createBundleOption1_1.title$$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontElementVisibleActionGroup" stepKey="seeProductOption1InCart">
            <argument name="selector" value="{{CheckoutCartProductSection.productOptionLabel}}"/>
            <argument name="userInput" value="1 x $$simpleProduct1.name$$ $10.00"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontElementVisibleActionGroup" stepKey="seeProductOption2InCart">
            <argument name="selector" value="{{CheckoutCartProductSection.productOptionLabel}}"/>
            <argument name="userInput" value="1 x $$simpleProduct2.name$$ $50.00"/>
        </actionGroup>

        <!-- Assert Product in Mini Cart -->
        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickOnMiniCart"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
        <actionGroup ref="AssertStorefrontMiniCartItemsActionGroup" stepKey="assertSimpleProduct3MiniCart">
            <argument name="productName" value="$$createBundleProduct.name$$"/>
            <argument name="productPrice" value="$60.00"/>
            <argument name="cartSubtotal" value="$60.00" />
            <argument name="qty" value="1"/>
        </actionGroup>
    </test>
</tests>
