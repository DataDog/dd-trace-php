<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminShouldBeAbleToAssociateSimpleProductToWebsitesTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Edit products"/>
            <title value="Admin should be able to associate simple product to websites"/>
            <description value="Admin should be able to associate simple product to websites"/>
            <testCaseId value="MC-3483"/>
            <group value="catalog"/>
            <severity value="AVERAGE"/>
        </annotations>

        <before>
            <magentoCLI command="config:set {{StorefrontEnableAddStoreCodeToUrls.path}} {{StorefrontEnableAddStoreCodeToUrls.value}}" stepKey="setAddStoreCodeToUrlsToYes"/>
            <createData entity="secondCustomWebsite" stepKey="createCustomWebsite"/>
            <createData entity="SimpleProduct2" stepKey="createSimpleProduct"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminStoreGroupCreateActionGroup" stepKey="createNewStore">
                <argument name="Website" value="secondCustomWebsite"/>
                <argument name="storeGroup" value="customStoreGroup"/>
            </actionGroup>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createCustomStoreView">
                <argument name="StoreGroup" value="customStoreGroup"/>
                <argument name="customStore" value="customStoreEN"/>
            </actionGroup>
        </before>

        <after>
            <magentoCLI command="config:set {{StorefrontDisableAddStoreCodeToUrls.path}} {{StorefrontDisableAddStoreCodeToUrls.value}}" stepKey="setAddStoreCodeToUrlsToNo"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <!-- Delete second website -->
            <actionGroup ref="DeleteCustomWebsiteActionGroup" stepKey="deleteCustomWeWebsite">
                <argument name="websiteName" value="$createCustomWebsite.website[name]$"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="resetFiltersOnStoresIndexPage"/>
            <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="openProductIndexPageToResetFilters"/>
            <actionGroup ref="clearFiltersAdminDataGrid" stepKey="clearFiltersOnProductIndexPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!-- 1. Go to product page in admin panel to edit -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="openProductIndexPageToAssociateToSecondWebsite"/>
        <actionGroup ref="filterProductGridByName2" stepKey="filterProductInGrid">
            <argument name="name" value="$$createSimpleProduct.name$$"/>
        </actionGroup>

        <!-- 2. Go to Product in Websites tab, unassign product from Main website and assign it to Second website -->
        <actionGroup ref="AdminProcessProductWebsitesActionGroup" stepKey="processProductWebsites">
            <argument name="website" value="secondCustomWebsite"/>
            <argument name="websiteToUnassign" value="_defaultWebsite"/>
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>
        <actionGroup ref="AssertProductIsAssignedToWebsite" stepKey="seeCustomWebsiteIsChecked">
            <argument name="website" value="$createCustomWebsite.website[name]$"/>
        </actionGroup>
        <actionGroup ref="AssertProductIsNotAssignedToWebsite" stepKey="seeMainWebsiteIsNotChecked">
            <argument name="website" value="{{_defaultWebsite.name}}"/>
        </actionGroup>

        <!-- 3. Go to frontend and open Simple product on Main website and assert 404 page-->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage">
            <argument name="productUrl" value="$createSimpleProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertPageNotFoundErrorOnProductDetailPageActionGroup" stepKey="assertPageNotFoundErrorOnProductDetailPage">
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>

        <!-- 4. Open Simple product on Second website and assert its name -->
        <actionGroup ref="StorefrontOpenProductPageUsingStoreCodeInUrlActionGroup" stepKey="openProductPageUsingStoreCodeInUrl">
            <argument name="product" value="$$createSimpleProduct$$"/>
            <argument name="storeView" value="customStoreEN"/>
        </actionGroup>
    </test>
</tests>
