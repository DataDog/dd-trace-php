<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminProductCustomURLKeyPreservedWhenAssignedToCategoryWithoutCustomURLKey">
        <annotations>
            <stories value="Product"/>
            <features value="Catalog"/>
            <title value="Product custom URL Key is preserved when assigned to a Category (without custom URL Key) alongside with another Product without custom URL Key"/>
            <description value="The test verifies that product custom URL Key is preserved when assigned to a Category (without custom URL Key) alongside with another Product without custom URL Key."/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-6443"/>
            <useCaseId value="MAGETWO-90331"/>
            <group value="catalog"/>
        </annotations>
        <before>
            <!-- Create category -->
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>

            <!-- Create Simple Products -->
            <createData entity="SimpleProduct2" stepKey="createSimpleProductFirst"/>
            <createData entity="SimpleProduct2" stepKey="createSimpleProductSecond"/>

            <!--Login as admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminPanel"/>

            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createStoreView">
                <argument name="customStore" value="storeViewData"/>
            </actionGroup>

            <!--Run full reindex and clear caches -->
            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
            <magentoCLI command="cache:flush" arguments="full_page" stepKey="flushCache"/>
        </before>
        <after>
            <deleteData createDataKey="createSimpleProductFirst" stepKey="deleteFirstSimpleProduct"/>
            <deleteData createDataKey="createSimpleProductSecond" stepKey="deleteSecondSimpleProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <actionGroup ref="AdminDeleteStoreViewActionGroup" stepKey="deleteStoreView">
                <argument name="customStore" value="storeViewData"/>
            </actionGroup>

            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!-- Open product -->
        <amOnPage url="{{AdminProductEditPage.url($createSimpleProductSecond.id$)}}" stepKey="openProductSecondEditPage"/>
        <!-- switch store view -->
        <actionGroup ref="AdminSwitchStoreViewActionGroup" stepKey="switchToStoreView">
            <argument name="storeView" value="storeViewData.name"/>
        </actionGroup>

        <!-- set url key -->
        <conditionalClick selector="{{AdminProductSEOSection.sectionHeader}}" dependentSelector="{{AdminProductSEOSection.urlKeyInput}}" visible="false" stepKey="openSeoSection"/>
        <uncheckOption selector="{{AdminProductSEOSection.useDefaultUrl}}" stepKey="uncheckUseDefaultUrlKey"/>
        <fillField userInput="U2" selector="{{AdminProductSEOSection.urlKeyInput}}" stepKey="fillUrlKey"/>
        <actionGroup ref="saveProductForm" stepKey="saveProduct"/>

        <actionGroup ref="goToAdminCategoryPageById" stepKey="openCategory">
            <argument name="id" value="$createCategory.id$"/>
        </actionGroup>

        <actionGroup ref="AdminCategoryAssignProduct" stepKey="assignSimpleProductFirst">
            <argument name="productSku" value="$createSimpleProductFirst.sku$"/>
        </actionGroup>
        <actionGroup ref="AdminCategoryAssignProduct" stepKey="assignSimpleProductSecond">
            <argument name="productSku" value="$createSimpleProductSecond.sku$"/>
        </actionGroup>

        <actionGroup ref="saveCategoryForm" stepKey="saveCategory"/>

        <executeJS function="return '$createCategory.name$'.toLowerCase();" stepKey="categoryNameLower" />
        <executeJS function="return '$createSimpleProductFirst.name$'.toLowerCase();" stepKey="simpleProductFirstNameLower" />
        <executeJS function="return '$createSimpleProductSecond.name$'.toLowerCase();" stepKey="simpleProductSecondNameLower" />

        <!-- Make assertions on frontend -->
        <amOnPage url="{{StorefrontHomePage.url}}" stepKey="goToStorefrontPage"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($createCategory.name$)}}" stepKey="onCategoryPage"/>
        <seeInCurrentUrl url="{$categoryNameLower}.html" stepKey="checkCategryUrlKey"/>

        <!-- Open first product -->
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($createSimpleProductFirst.name$)}}" stepKey="openFirstProduct"/>
        <waitForPageLoad time="30" stepKey="waitForFirstProduct"/>
        <seeInCurrentUrl url="{$simpleProductFirstNameLower}.html" stepKey="checkFirstSimpleProductUrlKey"/>

        <amOnPage url="{{StorefrontCategoryPage.url($createCategory.custom_attributes[url_key]$)}}" stepKey="onCategoryView"/>
        <!-- Open second product  -->
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($createSimpleProductSecond.name$)}}" stepKey="openSecondProduct"/>
        <waitForPageLoad time="30" stepKey="waitForSecondProduct"/>
        <seeInCurrentUrl url="{$simpleProductSecondNameLower}.html" stepKey="checkSecondSimpleProductUrlKey"/>

        <actionGroup ref="StorefrontSwitchStoreViewActionGroup" stepKey="switchToCustomStoreView">
            <argument name="storeView" value="storeViewData"/>
        </actionGroup>

        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($createCategory.name$)}}" stepKey="openCategoryPage"/>
        <seeInCurrentUrl url="{$categoryNameLower}.html" stepKey="seeCategoryUrlKey"/>

        <!-- Open product first  -->
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProductFirst.name$$)}}" stepKey="openFirstSimpleProduct"/>
        <waitForPageLoad time="30" stepKey="waitForFirstSimpleProduct"/>
        <seeInCurrentUrl url="{$simpleProductFirstNameLower}.html" stepKey="assertFirstSimpleProductUrlKey"/>

        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($createCategory.name$)}}" stepKey="openCategoryView"/>
        <!-- Open product2  -->
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($createSimpleProductSecond.name$)}}" stepKey="openSecondSimpleProduct"/>
        <waitForPageLoad time="30" stepKey="waitForSecondSimpleProduct"/>
        <seeInCurrentUrl url="u2.html" stepKey="assertSecondSimpleProductUrlKey"/>
    </test>
</tests>
