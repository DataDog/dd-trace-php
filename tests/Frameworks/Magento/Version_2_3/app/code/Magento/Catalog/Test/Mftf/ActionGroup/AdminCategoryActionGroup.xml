<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <!--Create a new category-->
    <actionGroup name="CreateCategory">
        <annotations>
            <description>Requires navigation to the Category creation page. Adds a new Subcategory. Validates that the Category was created.</description>
        </annotations>
        <arguments>
            <argument name="categoryEntity" defaultValue="_defaultCategory"/>
        </arguments>

        <seeInCurrentUrl url="{{AdminCategoryPage.url}}" stepKey="seeOnCategoryPage"/>
        <click selector="{{AdminCategorySidebarActionSection.AddSubcategoryButton}}" stepKey="clickOnAddSubCategory"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="New Category" stepKey="seeCategoryPageTitle"/>
        <fillField selector="{{AdminCategoryBasicFieldSection.CategoryNameInput}}" userInput="{{categoryEntity.name}}" stepKey="enterCategoryName"/>
        <click selector="{{AdminCategorySEOSection.SectionHeader}}" stepKey="openSEO"/>
        <fillField selector="{{AdminCategorySEOSection.UrlKeyInput}}" userInput="{{categoryEntity.name_lwr}}" stepKey="enterURLKey"/>
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <seeElement selector="{{AdminCategoryMessagesSection.SuccessMessage}}" stepKey="assertSuccess"/>
        <seeInTitle userInput="{{categoryEntity.name}}" stepKey="seeNewCategoryPageTitle"/>
        <seeElement selector="{{AdminCategorySidebarTreeSection.categoryInTree(categoryEntity.name)}}" stepKey="seeCategoryInTree"/>
    </actionGroup>

    <!-- Go to create new root or sub category page -->
    <actionGroup name="goToCreateCategoryPage">
        <annotations>
            <description>Goes to the Category grid page. Clicks the Add Subcategory button.</description>
        </annotations>
        <arguments>
            <argument name="selector" defaultValue="AdminCategorySidebarActionSection.AddSubcategoryButton"/>
        </arguments>

        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="amOnAdminCategoryPage"/>
        <scrollToTopOfPage stepKey="scrollToTopOfPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <click selector="{{selector}}" stepKey="clickOnAddCategory"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="New Category" stepKey="seeCategoryPageTitle"/>
    </actionGroup>

    <!-- Go to admin category page by id -->
    <actionGroup name="goToAdminCategoryPageById">
        <annotations>
            <description>Goes to the Category edit page for a specified Category ID.</description>
        </annotations>
        <arguments>
            <argument name="id" type="string"/>
        </arguments>

        <amOnPage url="{{AdminCategoryEditPage.url(id)}}" stepKey="amOnAdminCategoryPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="{{id}}" stepKey="seeCategoryPageTitle"/>
    </actionGroup>

    <!-- Fill category fields -->
    <actionGroup name="fillCategoryForm">
        <annotations>
            <description>Requires navigation to the Subcategory creation/edit page. Fills the Subcategory Name. Fills the Search Engine Optimization.</description>
        </annotations>
        <arguments>
            <argument name="categoryEntity" defaultValue="_defaultCategory"/>
        </arguments>

        <fillField selector="{{AdminCategoryBasicFieldSection.CategoryNameInput}}" userInput="{{categoryEntity.name}}" stepKey="enterCategoryName"/>
        <click selector="{{AdminCategorySEOSection.SectionHeader}}" stepKey="openSEO"/>
        <fillField selector="{{AdminCategorySEOSection.UrlKeyInput}}" userInput="{{categoryEntity.name_lwr}}" stepKey="enterURLKey"/>
    </actionGroup>

    <!--
    NOTICE: saveCategoryForm is deprecated.
            Please use SaveCategoryFormActionGroup instead.
    -->
    <actionGroup name="saveCategoryForm">
        <annotations>
            <description>DEPRECATED. Use AdminSaveCategoryFormActionGroup instead. Requires navigation to the Category creation/edit page. Checks that the url contains the AdminCategoryPage url. Saves the Category.</description>
        </annotations>

        <seeInCurrentUrl url="{{AdminCategoryPage.url}}" stepKey="seeOnCategoryPage"/>
        <click selector="{{AdminMainActionsSection.save}}" stepKey="saveCategory"/>
        <seeElement selector="{{AdminMessagesSection.success}}" stepKey="assertSuccess"/>
    </actionGroup>

    <!--Upload image for category -->
    <actionGroup name="addCategoryImage">
        <annotations>
            <description>Requires navigation to the Category creation/edit page. Adds the provided image to a Category. Validates that the Image exists.</description>
        </annotations>
        <arguments>
            <argument name="image" defaultValue="ProductImage"/>
        </arguments>

        <conditionalClick selector="{{AdminCategoryContentSection.sectionHeader}}" dependentSelector="{{AdminCategoryContentSection.uploadButton}}" visible="false" stepKey="openContentSection"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AdminCategoryContentSection.uploadButton}}" stepKey="seeImageSectionIsReady"/>
        <attachFile selector="{{AdminCategoryContentSection.uploadImageFile}}" userInput="{{image.file}}" stepKey="uploadFile"/>
        <waitForAjaxLoad time="30" stepKey="waitForAjaxUpload"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading"/>
        <grabTextFrom selector="{{AdminCategoryContentSection.imageFileName}}" stepKey="grabCategoryFileName"/>
        <assertRegExp stepKey="assertEquals" message="pass">
            <expectedResult type="string">/magento-logo(_[0-9]+)*?\.png$/</expectedResult>
            <actualResult type="variable">grabCategoryFileName</actualResult>
        </assertRegExp>
    </actionGroup>

    <!-- Remove image from category -->
    <actionGroup name="removeCategoryImage">
        <annotations>
            <description>Requires navigation to the Category creation/edit page. Removes the current Category image. Validates that the Image does not exist.</description>
        </annotations>

        <conditionalClick selector="{{AdminCategoryContentSection.sectionHeader}}" dependentSelector="{{AdminCategoryContentSection.uploadButton}}" visible="false" stepKey="openContentSection"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AdminCategoryContentSection.uploadButton}}" stepKey="seeImageSectionIsReady"/>
        <click selector="{{AdminCategoryContentSection.removeImageButton}}" stepKey="clickRemoveImage"/>
        <waitForAjaxLoad time="30" stepKey="waitForAjaxUpload"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading"/>
        <dontSee selector="{{AdminCategoryContentSection.imageFileName}}" stepKey="dontSeeImage"/>
    </actionGroup>

    <actionGroup name="checkCategoryImageInAdmin">
        <annotations>
            <description>Requires navigation to the Category creation/edit page. Click on the Upload button. Validates that the Image exists.</description>
        </annotations>
        <arguments>
            <argument name="image" defaultValue="ProductImage"/>
        </arguments>

        <conditionalClick selector="{{AdminCategoryContentSection.sectionHeader}}" dependentSelector="{{AdminCategoryContentSection.uploadButton}}" visible="false" stepKey="openContentSection"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AdminCategoryContentSection.uploadButton}}" stepKey="seeImageSectionIsReady"/>
        <grabTextFrom selector="{{AdminCategoryContentSection.imageFileName}}" stepKey="grabCategoryFileName"/>
        <assertRegExp stepKey="assertEquals" message="pass">
            <expectedResult type="string">/magento-logo(_[0-9]+)*?\.png$/</expectedResult>
            <actualResult type="variable">grabCategoryFileName</actualResult>
        </assertRegExp>
    </actionGroup>

    <!--
    NOTICE: navigateToMediaGallery is deprecated.
            Please use NavigateToMediaGalleryActionGroup instead.
    -->
    <actionGroup name="navigateToMediaGallery">
        <annotations>
            <description>Navigates to the category page and Opens the Media Gallery.</description>
        </annotations>

        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="amOnAdminCategoryPage"/>
        <waitForElementVisible selector="{{AdminCategoryContentSection.sectionHeader}}" stepKey="waitForContentSection"/>
        <conditionalClick selector="{{AdminCategoryContentSection.sectionHeader}}" dependentSelector="{{AdminCategoryContentSection.uploadButton}}" visible="false" stepKey="openContentSection"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <waitForElementVisible selector="{{AdminCategoryContentSection.selectFromGalleryButton}}" stepKey="waitForSelectFromGalleryButton"/>
        <click selector="{{AdminCategoryContentSection.selectFromGalleryButton}}" stepKey="clickSelectFromGalleryButton"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear"/>
    </actionGroup>

    <!--Actions to check if a category exists on StoreFront-->
    <actionGroup name="CheckCategoryOnStorefront">
        <annotations>
            <description>Navigates to the category page on the storefront and asserts that the title is correct for page and browser.</description>
        </annotations>
        <arguments>
            <argument name="categoryEntity" defaultValue="_defaultCategory"/>
        </arguments>

        <amOnPage url="/{{categoryEntity.name_lwr}}.html" stepKey="goToCategoryFrontPage"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <see selector="{{StorefrontCategoryMainSection.CategoryTitle}}" userInput="{{categoryEntity.name_lwr}}" stepKey="assertCategoryOnStorefront"/>
        <seeInTitle userInput="{{categoryEntity.name}}" stepKey="seeCategoryNameInTitle"/>
    </actionGroup>

    <!--
    NOTICE: DeleteCategory is deprecated.
            Please use DeleteCategoryActionGroup instead.
    -->
    <actionGroup name="DeleteCategory">
        <annotations>
            <description>Navigates to the category page and deletes the specified category.</description>
        </annotations>
        <arguments>
            <argument name="categoryEntity" defaultValue="_defaultCategory"/>
        </arguments>

        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="goToCategoryPage"/>
        <waitForPageLoad time="60" stepKey="waitForCategoryPageLoad"/>
        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(categoryEntity.name)}}" stepKey="clickCategoryLink"/>
        <click selector="{{AdminCategoryMainActionsSection.DeleteButton}}" stepKey="clickDelete"/>
        <waitForElementVisible selector="{{AdminCategoryModalSection.message}}" stepKey="waitForConfirmationModal"/>
        <see selector="{{AdminCategoryModalSection.message}}" userInput="Are you sure you want to delete this category?" stepKey="seeDeleteConfirmationMessage"/>
        <click selector="{{AdminCategoryModalSection.ok}}" stepKey="confirmDelete"/>
        <waitForPageLoad time="60" stepKey="waitForDeleteToFinish"/>
        <see selector="You deleted the category." stepKey="seeDeleteSuccess"/>
        <click selector="{{AdminCategorySidebarTreeSection.expandAll}}" stepKey="expandToSeeAllCategories"/>
        <dontSee selector="{{AdminCategorySidebarTreeSection.categoryInTree(categoryEntity.name)}}" stepKey="dontSeeCategoryInTree"/>
    </actionGroup>
    <actionGroup name="AdminDeleteCategoryByName" extends="DeleteCategory">
        <arguments>
            <argument name="categoryName" type="string" defaultValue="category1"/>
        </arguments>
        <remove keyForRemoval="clickCategoryLink"/>
        <remove keyForRemoval="dontSeeCategoryInTree"/>
        <remove keyForRemoval="expandToSeeAllCategories"/>
        <conditionalClick selector="{{AdminCategorySidebarTreeSection.expandAll}}" dependentSelector="{{AdminCategorySidebarTreeSection.categoryByName(categoryName)}}" visible="false" stepKey="expandCategories" after="waitForCategoryPageLoad"/>
        <click selector="{{AdminCategorySidebarTreeSection.categoryByName(categoryName)}}" stepKey="clickCategory" after="expandCategories"/>
        <conditionalClick selector="{{AdminCategorySidebarTreeSection.expandAll}}" dependentSelector="{{AdminCategorySidebarTreeSection.categoryByName(categoryName)}}" visible="false" stepKey="expandCategoriesToSeeAll" after="seeDeleteSuccess"/>
        <dontSee selector="{{AdminCategorySidebarTreeSection.categoryByName(categoryName)}}" stepKey="dontSeeCategory" after="expandCategoriesToSeeAll"/>
    </actionGroup>

    <!-- Actions to fill out a new category from the product page-->
    <!-- The action assumes that you are already on an admin product configuration page -->
    <actionGroup name="FillNewProductCategory" >
        <annotations>
            <description>Actions to fill out a new category from the product page with specified category and parent category names.</description>
        </annotations>
        <arguments>
            <argument name="categoryName" defaultValue="Test Category" type="string"/>
            <argument name="parentCategoryName" defaultValue="default" type="string"/>
        </arguments>

        <!-- Click on new Category -->
        <click stepKey="clickNewCategory" selector="{{AdminProductCategoryCreationSection.newCategory}}"/>
        <waitForPageLoad stepKey="waitForFieldSet"/>
        <fillField stepKey="fillCategoryName" selector="{{AdminProductCategoryCreationSection.nameInput}}" userInput="{{categoryName}}"/>

        <!-- Search and select a parent category for the product -->
        <click stepKey="clickParentCategory" selector="{{AdminProductCategoryCreationSection.parentCategory}}"/>
        <waitForPageLoad stepKey="waitForDropDownVisible"/>
        <fillField stepKey="searchForParent" userInput="{{parentCategoryName}}" selector="{{AdminProductCategoryCreationSection.parentSearch}}"/>
        <waitForPageLoad stepKey="waitForFieldResults"/>
        <click stepKey="clickParent" selector="{{AdminProductCategoryCreationSection.parentSearchResult}}"/>
        <click stepKey="createCategory" selector="{{AdminProductCategoryCreationSection.createCategory}}"/>
        <waitForPageLoad stepKey="waitForCategoryCreated"/>
    </actionGroup>

    <!-- Actions to delete the category last made -->
    <actionGroup name="DeleteMostRecentCategory">
        <annotations>
            <description>Actions to delete the category last made (the last category on the list).</description>
        </annotations>

        <amOnPage url="/{{AdminCategoryPage.url}}" stepKey="goToCategoryFrontPage"/>
        <waitForPageLoad stepKey="waitForCategoryPageLoad"/>
        <click stepKey="goToCreateCategory" selector="{{AdminCategorySidebarTreeSection.lastCreatedCategory}}"/>
        <waitForPageLoad stepKey="waitForCreatedCategoryPageLoad"/>
        <click stepKey="clickDeleteCategory" selector="{{AdminCategoryMainActionsSection.DeleteButton}}"/>
        <waitForPageLoad stepKey="waitForModalVisible"/>
        <click stepKey="clickOkToDelete" selector="{{AdminCategoryModalSection.ok}}"/>
        <waitForPageLoad stepKey="waitForModalNotVisible"/>
    </actionGroup>

    <!-- Actions to check if a certain category is present on the page -->
    <actionGroup name="CategoryPresent" >
        <annotations>
            <description>Navigates to category page, asserts category is there. Navigates to storefront category page and asserts category is there. This action group will not work categories where name does NOT equal SEO.</description>
        </annotations>
        <arguments>
            <argument name="categoryName" defaultValue="Test Category" type="string"/>
        </arguments>

        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="goToCategoryAdminPage"/>
        <waitForPageLoad stepKey="waitForCategoryAdminPageLoad"/>
        <see userInput="{{categoryName}}" stepKey="assertCategoryOnAdminPage" selector="{{AdminCategorySidebarTreeSection.treeContainer}}"/>
        <amOnPage url="/{{categoryName}}.html" stepKey="goToCustomerFrontPage"/>
        <see userInput="{{categoryName}}" stepKey="assertCategoryNameOnStorefront" selector="{{StorefrontCategoryMainSection.CategoryTitle}}"/>
        <waitForPageLoad stepKey="waitForCustomerCategoryPageLoad"/>
    </actionGroup>

    <!--Check that name field is required-->
    <actionGroup name="CheckCategoryNameIsRequiredField">
        <annotations>
            <description>Navigates to category page, attempts to add subcategory without name. Expects required field prompt.</description>
        </annotations>

        <seeInCurrentUrl url="{{AdminCategoryPage.url}}" stepKey="seeOnCategoryPage"/>
        <click selector="{{AdminCategorySidebarActionSection.AddSubcategoryButton}}" stepKey="clickOnAddSubCategory"/>
        <clearField selector="{{AdminCategoryBasicFieldSection.CategoryNameInput}}" stepKey="makeNameFieldEmpty"/>
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <seeInCurrentUrl url="{{AdminCategoryPage.url}}add" stepKey="seeBackOnCreateCategoryPage"/>
        <see selector="{{AdminCategoryBasicFieldSection.FieldError('uid')}}" userInput="This is a required field." stepKey="seeErrorMessage"/>
    </actionGroup>

    <actionGroup name="switchCategoryStoreView">
        <annotations>
            <description>Navigates to category page, selects a category and changes store view to specified store.</description>
        </annotations>
        <arguments>
            <argument name="Store"/>
            <argument name="CatName"/>
        </arguments>

        <amOnPage url="{{AdminCategoryPage.page}}" stepKey="amOnCategoryPage"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(CatName)}}" stepKey="navigateToCreatedCategory"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <scrollToTopOfPage stepKey="scrollToToggle"/>
        <click selector="{{AdminCategoryMainActionsSection.CategoryStoreViewDropdownToggle}}" stepKey="openStoreViewDropDown"/>
        <click selector="{{AdminCategoryMainActionsSection.CategoryStoreViewOption(Store)}}" stepKey="selectStoreView"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner2"/>
        <click selector="{{AdminCategoryMainActionsSection.CategoryStoreViewModalAccept}}" stepKey="selectStoreViewAccept"/>
        <waitForPageLoad stepKey="waitForStoreViewChangeLoad"/>
    </actionGroup>

    <actionGroup name="switchCategoryToAllStoreView">
        <annotations>
            <description>Navigates to category page, selects a category and changes store view to all stores.</description>
        </annotations>
        <arguments>
            <argument name="CatName"/>
        </arguments>

        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(CatName)}}" stepKey="navigateToCreatedCategory"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner1"/>
        <scrollToTopOfPage stepKey="scrollToToggle"/>
        <click selector="{{AdminCategoryMainActionsSection.CategoryStoreViewDropdownToggle}}" stepKey="openStoreViewDropDown"/>
        <click selector="{{AdminCategoryMainActionsSection.allStoreViews}}" stepKey="clickStoreViewByName"/>
        <see selector="{{AdminCategoryMainActionsSection.storeSwitcher}}" userInput="All Store Views" stepKey="seeAllStoreView"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner2"/>
        <click selector="{{AdminCategoryMainActionsSection.CategoryStoreViewModalAccept}}" stepKey="selectStoreViewAccept"/>
        <waitForPageLoad stepKey="waitForStoreViewChangeLoad"/>
    </actionGroup>

    <!--
    NOTICE: navigateToCreatedCategory is deprecated.
            Please use NavigateToCreatedCategoryActionGroup instead.
    -->
    <actionGroup name="navigateToCreatedCategory">
        <annotations>
            <description>Navigates to category page, selects a category by specified category.</description>
        </annotations>
        <arguments>
            <argument name="Category"/>
        </arguments>

        <amOnPage url="{{AdminCategoryPage.page}}" stepKey="amOnCategoryPage"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <click selector="{{AdminCategorySidebarTreeSection.expandAll}}" stepKey="expandAll"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(Category.Name)}}" stepKey="navigateToCreatedCategory"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
    </actionGroup>

    <actionGroup name="ChangeSeoUrlKey">
        <annotations>
            <description>Requires navigation to category creation/edit. Updates the Search Engine Optimization.</description>
        </annotations>
        <arguments>
            <argument name="value" type="string"/>
        </arguments>

        <conditionalClick selector="{{AdminCategorySEOSection.SectionHeader}}" dependentSelector="{{AdminCategorySEOSection.sectionBody}}" visible="false" stepKey="openSeoSection"/>
        <fillField selector="{{AdminCategorySEOSection.UrlKeyInput}}" userInput="{{value}}" stepKey="enterURLKey"/>
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <seeElement selector="{{AdminCategoryMessagesSection.SuccessMessage}}" stepKey="assertSuccessMessage"/>
    </actionGroup>

    <actionGroup name="ChangeSeoUrlKeyForSubCategory">
        <annotations>
            <description>Requires navigation to subcategory creation/edit. Updates the Search Engine Optimization.</description>
        </annotations>
        <arguments>
            <argument name="value" type="string"/>
        </arguments>

        <conditionalClick selector="{{AdminCategorySEOSection.SectionHeader}}" dependentSelector="{{AdminCategorySEOSection.sectionBody}}" visible="false" stepKey="openSeoSection"/>
        <uncheckOption selector="{{AdminCategorySEOSection.UrlKeyDefaultValueCheckbox}}" stepKey="uncheckDefaultValue"/>
        <fillField selector="{{AdminCategorySEOSection.UrlKeyInput}}" userInput="{{value}}" stepKey="enterURLKey"/>
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <seeElement selector="{{AdminCategoryMessagesSection.SuccessMessage}}" stepKey="assertSuccessMessage"/>
    </actionGroup>

    <actionGroup name="OpenCategoryFromCategoryTree">
        <annotations>
            <description>Navigates to category page, selects a category by specified category. Replicates actionGroup:navigateToCreatedCategory.</description>
        </annotations>
        <arguments>
            <argument name="category" type="string"/>
        </arguments>

        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="openAdminCategoryIndexPage"/>
        <waitForPageLoad stepKey="waitForCategoryPageToLoad"/>
        <click selector="{{AdminCategorySidebarTreeSection.expandAll}}" stepKey="clickOnExpandTree"/>
        <waitForPageLoad stepKey="waitForCategoryToLoad"/>
        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(category)}}" stepKey="selectCategory"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <waitForElementVisible selector="{{AdminCategoryContentSection.categoryPageTitle}}" stepKey="waitForCategoryTitle"/>
    </actionGroup>

    <actionGroup name="AdminAssignProductToCategory">
        <annotations>
            <description>Navigates to existing product page. Changes the category and saves the product.</description>
        </annotations>
        <arguments>
            <argument name="productId" type="string"/>
            <argument name="categoryName" type="string"/>
        </arguments>

        <amOnPage url="{{AdminProductEditPage.url(productId)}}" stepKey="amOnPage"/>
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[{{categoryName}}]" stepKey="selectCategory"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="clickOnSaveButton"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You saved the product." stepKey="seeSaveProductMessage"/>
    </actionGroup>

    <actionGroup name="FillCategoryNameAndUrlKeyAndSave">
        <annotations>
            <description>Requires navigation to subcategory creation/edit. Fills the name, and sets the Search Engine Optimization for the category.</description>
        </annotations>
        <arguments>
            <argument name="categoryName" type="string"/>
            <argument name="categoryUrlKey" type="string"/>
        </arguments>

        <fillField selector="{{AdminCategoryBasicFieldSection.CategoryNameInput}}" userInput="{{categoryName}}" stepKey="enterCategoryName"/>
        <scrollTo selector="{{AdminCategorySEOSection.SectionHeader}}" stepKey="scrollToSearchEngineOptimization"/>
        <conditionalClick selector="{{AdminCategorySEOSection.SectionHeader}}" dependentSelector="{{AdminCategorySEOSection.sectionBody}}" visible="false" stepKey="openSEO"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <fillField selector="{{AdminCategorySEOSection.UrlKeyInput}}" userInput="{{categoryUrlKey}}" stepKey="enterURLKey"/>
        <scrollToTopOfPage stepKey="scrollToTheTopOfPage"/>
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
    </actionGroup>

    <actionGroup name="AdminCategoryAssignProduct">
        <annotations>
            <description>Requires navigation to category creation/edit page. Assign products to category - using "Products in Category" tab.</description>
        </annotations>
        <arguments>
            <argument name="productSku" type="string"/>
        </arguments>

        <conditionalClick selector="{{AdminCategoryBasicFieldSection.productsInCategory}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="false" stepKey="clickOnProductInCategory"/>
        <click selector="{{AdminDataGridHeaderSection.clearFilters}}" stepKey="clickOnResetFilter"/>
        <fillField selector="{{AdminCategoryContentSection.productTableColumnSku}}" userInput="{{productSku}}" stepKey="fillSkuFilter"/>
        <click selector="{{AdminDataGridHeaderSection.applyFilters}}" stepKey="clickSearchButton"/>
        <click selector="{{AdminCategoryContentSection.productTableRow}}" stepKey="selectProductFromTableRow"/>
    </actionGroup>

    <actionGroup name="DeleteDefaultCategoryChildren" deprecated="Use deleteData action for categories created via api. StorefrontCatalogNavigationMenuUIDesktopTest will be refactored in 2.4 to reflect this change.">
        <annotations>
            <description>Deletes all children categories of Default Root Category.</description>
        </annotations>

        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="navigateToAdminCategoryPage"/>
        <executeInSelenium function="function ($webdriver) use ($I) {
            $children = $webdriver->findElements(\Facebook\WebDriver\WebDriverBy::xpath('//ul[contains(@class, \'x-tree-node-ct\')]/li[@class=\'x-tree-node\' and contains(.,
            \'{{DefaultCategory.name}}\')]/ul[contains(@class, \'x-tree-node-ct\')]/li//a'));
            while (!empty($children)) {
                $I->click('//ul[contains(@class, \'x-tree-node-ct\')]/li[@class=\'x-tree-node\' and contains(.,
            \'{{DefaultCategory.name}}\')]/ul[contains(@class, \'x-tree-node-ct\')]/li//a');
                $I->waitForPageLoad(30);
                $I->click('#delete');
                $I->waitForElementVisible('aside.confirm .modal-footer button.action-accept');
                $I->click('aside.confirm .modal-footer button.action-accept');
                $I->waitForPageLoad(30);
                $I->waitForElementVisible('#messages div.message-success', 30);
                $I->see('You deleted the category.', '#messages div.message-success');
                $children = $webdriver->findElements(\Facebook\WebDriver\WebDriverBy::xpath('//ul[contains(@class, \'x-tree-node-ct\')]/li[@class=\'x-tree-node\' and contains(.,
            \'{{DefaultCategory.name}}\')]/ul[contains(@class, \'x-tree-node-ct\')]/li//a'));
            }
        }" stepKey="deleteAllChildCategories"/>
    </actionGroup>
</actionGroups>
