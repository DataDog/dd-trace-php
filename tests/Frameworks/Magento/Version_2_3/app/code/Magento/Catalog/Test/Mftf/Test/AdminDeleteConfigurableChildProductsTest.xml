<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminDeleteConfigurableChildProductsTest">
        <annotations>
            <stories value="Configurable Product"/>
            <title value="Configurable Product should not be visible on storefront after child products are deleted"/>
            <description value="Login as admin, delete configurable child product and verify product displays out of stock in store front"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13684"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!--Set Display Out Of Stock Product -->
            <magentoCLI stepKey="setDisplayOutOfStockProduct" command="config:set cataloginventory/options/show_out_of_stock 0 "/>
            <!--Login as Admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminPanel"/>
            <!--Create Default Category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <!-- Create an attribute with two options to be used in the first child product -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <!-- Add the attribute just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <!-- Get the first option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <!-- Get the second option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <!-- Create Configurable product -->
            <createData entity="BaseConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>
             <!--Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <!-- Create the configurable product -->
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>
            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>
        </before>
        <after>
            <!--Delete Created Data-->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteAttribute"/>
            <actionGroup ref="logout" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>
        <!--Open Product in Store Front Page -->
        <amOnPage url="$$createConfigProduct.sku$$.html" stepKey="openProductInStoreFront"/>
        <waitForPageLoad stepKey="waitForProductToLoad"/>
        <!--Verify Product is visible and In Stock -->
        <seeElement selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="seeCategoryInFrontPage"/>
        <see selector="{{StorefrontProductInfoMainSection.productName}}" userInput="$$createConfigProduct.name$$" stepKey="seeProductNameInStoreFront"/>
        <see selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="$$createConfigProduct.price$$" stepKey="seeProductPriceInStoreFront"/>
        <see selector="{{StorefrontProductInfoMainSection.productSku}}" userInput="$$createConfigProduct.sku$$" stepKey="seeProductSkuInStoreFront"/>
        <see selector="{{StorefrontProductInfoMainSection.productStockStatus}}" userInput="In Stock" stepKey="seeProductStatusInStoreFront"/>
        <see selector="{{StorefrontProductInfoMainSection.productAttributeTitle1}}" userInput="$$createConfigProductAttribute.default_value$$" stepKey="seeProductAttributeLabel"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.productAttributeOptions1}}" stepKey="seeProductAttributeOptions"/>
        <!-- Delete Child products -->
        <actionGroup ref="deleteProductBySku" stepKey="deleteFirstChildProduct">
            <argument name="sku" value="$$createConfigChildProduct1.sku$$"/>
        </actionGroup>
        <actionGroup ref="deleteProductBySku" stepKey="deleteSecondChildProduct">
            <argument name="sku" value="$$createConfigChildProduct2.sku$$"/>
        </actionGroup>
        <!--Verify product is not visible in category store front page -->
        <amOnPage url="$$createCategory.name$$.html" stepKey="openCategoryStoreFrontPage"/>
        <waitForPageLoad stepKey="waitForCategoryPageToLoad"/>
        <seeElement selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="seeCategoryInStoreFrontPage"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="clickOnCategory"/>
        <dontSee selector="{{StorefrontCategoryMainSection.productName}}" userInput="$$createConfigProduct.name$$" stepKey="dontSeeProductInCategoryPage"/>
        <!--Open Product Store Front Page and Verify Product is Out Of Stock -->
        <amOnPage url="$$createConfigProduct.sku$$.html" stepKey="openProductInStoreFront1"/>
        <waitForPageLoad stepKey="waitForProductToLoad1"/>
        <seeElement selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="seeCategoryInFrontPage1"/>
        <see selector="{{StorefrontProductInfoMainSection.productName}}" userInput="$$createConfigProduct.name$$" stepKey="seeProductNameInStoreFront1"/>
        <dontSee selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="$$createConfigProduct.price$$" stepKey="dontSeeProductPriceInStoreFront"/>
        <see selector="{{StorefrontProductInfoMainSection.productSku}}" userInput="$$createConfigProduct.sku$$" stepKey="seeProductSkuInStoreFront1"/>
        <see selector="{{StorefrontProductInfoMainSection.productStockStatus}}" userInput="OUT OF STOCK" stepKey="seeProductStatusInStoreFront1"/>
        <dontSee selector="{{StorefrontProductInfoMainSection.productAttributeTitle1}}" userInput="$$createConfigProductAttribute.default_value$$" stepKey="dontSeeProductAttributeLabel"/>
        <dontSeeElement selector="{{StorefrontProductInfoMainSection.productAttributeOptions1}}" stepKey="dontSeeProductAttributeOptions"/>
    </test>
</tests>
