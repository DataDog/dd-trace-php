<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CreateProductAttributeEntityTextFieldTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Product Attributes"/>
            <title value="Admin should be able to create a TextField product attribute"/>
            <description value="Admin should be able to create a TextField product attribute"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-10894"/>
            <group value="Catalog"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
                <argument name="ProductAttribute" value="{{textProductAttribute.attribute_code}}"/>
            </actionGroup>
            <click stepKey="clickDelete" selector="{{AttributePropertiesSection.DeleteAttribute}}"/>
            <click stepKey="clickOk" selector="{{AttributeDeleteModalSection.confirm}}"/>
            <waitForPageLoad stepKey="waitForDeletion"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Navigate to Stores > Attributes > Product.-->
        <amOnPage url="{{AdminProductAttributeGridPage.url}}" stepKey="goToProductAttributes"/>

        <!--Create new Product Attribute as TextField, with code and default value.-->
        <actionGroup ref="createProductAttributeWithTextField" stepKey="createAttribute">
            <argument name="attribute" value="textProductAttribute"/>
        </actionGroup>

        <!--Navigate to Product Attribute.-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
            <argument name="ProductAttribute" value="{{textProductAttribute.attribute_code}}"/>
        </actionGroup>

        <!--Perform appropriate assertions against textProductAttribute entity-->
        <seeInField stepKey="assertLabel" selector="{{AttributePropertiesSection.DefaultLabel}}" userInput="{{textProductAttribute.attribute_code}}"/>
        <seeOptionIsSelected stepKey="assertInputType" selector="{{AttributePropertiesSection.InputType}}" userInput="{{textProductAttribute.frontend_input}}"/>
        <seeOptionIsSelected stepKey="assertRequired" selector="{{AttributePropertiesSection.ValueRequired}}" userInput="{{textProductAttribute.is_required_admin}}"/>
        <seeInField stepKey="assertAttrCode" selector="{{AdvancedAttributePropertiesSection.AttributeCode}}" userInput="{{textProductAttribute.attribute_code}}"/>
        <seeInField stepKey="assertDefaultValue" selector="{{AdvancedAttributePropertiesSection.DefaultValueText}}" userInput="{{textProductAttribute.default_value}}"/>

        <!--Go to New Product page, add Attribute and check values-->
        <amOnPage url="{{AdminProductCreatePage.url('4', 'simple')}}" stepKey="goToCreateSimpleProductPage"/>
        <actionGroup ref="addProductAttributeInProductModal" stepKey="addAttributeToProduct">
            <argument name="attributeCode" value="{{textProductAttribute.attribute_code}}"/>
        </actionGroup>
        <click stepKey="openAttributes" selector="{{AdminProductAttributesSection.sectionHeader}}"/>
        <waitForElementVisible selector="{{AdminProductAttributesSection.attributeTextInputByCode(textProductAttribute.attribute_code)}}" stepKey="waitforLabel"/>
        <seeInField stepKey="checkDefaultValue" selector="{{AdminProductAttributesSection.attributeTextInputByCode(textProductAttribute.attribute_code)}}" userInput="{{textProductAttribute.default_value}}"/>
        <see stepKey="checkLabel" selector="{{AdminProductAttributesSection.attributeLabelByCode(textProductAttribute.attribute_code)}}" userInput="{{textProductAttribute.attribute_code}}"/>
    </test>

    <test name="CreateProductAttributeEntityDateTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Product Attributes"/>
            <title value="Admin should be able to create a Date product attribute"/>
            <description value="Admin should be able to create a Date product attribute"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-10895"/>
            <group value="Catalog"/>
            <skip>
                <issueId value="MC-13817"/>
            </skip>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
                <argument name="ProductAttribute" value="{{dateProductAttribute.attribute_code}}"/>
            </actionGroup>
            <click stepKey="clickDelete" selector="{{AttributePropertiesSection.DeleteAttribute}}"/>
            <click stepKey="clickOk" selector="{{AttributeDeleteModalSection.confirm}}"/>
            <waitForPageLoad stepKey="waitForDeletion"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Generate date for use as default value, needs to be MM/d/YYYY -->
        <generateDate date="now" format="m/j/Y" stepKey="generateDefaultDate"/>

        <!--Navigate to Stores > Attributes > Product.-->
        <amOnPage url="{{AdminProductAttributeGridPage.url}}" stepKey="goToProductAttributes"/>

        <!--Create new Product Attribute as TextField, with code and default value.-->
        <actionGroup ref="createProductAttributeWithDateField" stepKey="createAttribute">
            <argument name="attribute" value="dateProductAttribute"/>
            <argument name="date" value="{$generateDefaultDate}"/>
        </actionGroup>

        <!--Navigate to Product Attribute.-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
            <argument name="ProductAttribute" value="{{dateProductAttribute.attribute_code}}"/>
        </actionGroup>

        <!--Perform appropriate assertions against textProductAttribute entity-->
        <seeInField stepKey="assertLabel" selector="{{AttributePropertiesSection.DefaultLabel}}" userInput="{{dateProductAttribute.attribute_code}}"/>
        <seeOptionIsSelected stepKey="assertInputType" selector="{{AttributePropertiesSection.InputType}}" userInput="{{dateProductAttribute.frontend_input}}"/>
        <seeOptionIsSelected stepKey="assertRequired" selector="{{AttributePropertiesSection.ValueRequired}}" userInput="{{dateProductAttribute.is_required_admin}}"/>
        <seeInField stepKey="assertAttrCode" selector="{{AdvancedAttributePropertiesSection.AttributeCode}}" userInput="{{dateProductAttribute.attribute_code}}"/>
        <seeInField stepKey="assertDefaultValue" selector="{{AdvancedAttributePropertiesSection.DefaultValueDate}}" userInput="{$generateDefaultDate}"/>

        <!--Go to New Product page, add Attribute and check values-->
        <amOnPage url="{{AdminProductCreatePage.url('4', 'simple')}}" stepKey="goToCreateSimpleProductPage"/>
        <actionGroup ref="addProductAttributeInProductModal" stepKey="addAttributeToProduct">
            <argument name="attributeCode" value="{{dateProductAttribute.attribute_code}}"/>
        </actionGroup>
        <click stepKey="openAttributes" selector="{{AdminProductAttributesSection.sectionHeader}}"/>
        <waitForElementVisible selector="{{AdminProductAttributesSection.attributeTextInputByCode(dateProductAttribute.attribute_code)}}" stepKey="waitforLabel"/>
        <seeInField stepKey="checkDefaultValue" selector="{{AdminProductAttributesSection.attributeTextInputByCode(dateProductAttribute.attribute_code)}}" userInput="{$generateDefaultDate}"/>
        <see stepKey="checkLabel" selector="{{AdminProductAttributesSection.attributeLabelByCode(dateProductAttribute.attribute_code)}}" userInput="{{dateProductAttribute.attribute_code}}"/>
    </test>

    <test name="CreateProductAttributeEntityPriceTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Product Attributes"/>
            <title value="Admin should be able to create a Price product attribute"/>
            <description value="Admin should be able to create a Price product attribute"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-10897"/>
            <group value="Catalog"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
                <argument name="ProductAttribute" value="{{priceProductAttribute.attribute_code}}"/>
            </actionGroup>
            <click stepKey="clickDelete" selector="{{AttributePropertiesSection.DeleteAttribute}}"/>
            <click stepKey="clickOk" selector="{{AttributeDeleteModalSection.confirm}}"/>
            <waitForPageLoad stepKey="waitForDeletion"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Navigate to Stores > Attributes > Product.-->
        <amOnPage url="{{AdminProductAttributeGridPage.url}}" stepKey="goToProductAttributes"/>

        <!--Create new Product Attribute with Price-->
        <actionGroup ref="createProductAttribute" stepKey="createAttribute">
            <argument name="attribute" value="priceProductAttribute"/>
        </actionGroup>

        <!--Navigate to Product Attribute.-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
            <argument name="ProductAttribute" value="{{priceProductAttribute.attribute_code}}"/>
        </actionGroup>

        <!--Perform appropriate assertions against priceProductAttribute entity-->
        <seeInField stepKey="assertLabel" selector="{{AttributePropertiesSection.DefaultLabel}}" userInput="{{priceProductAttribute.attribute_code}}"/>
        <seeOptionIsSelected stepKey="assertInputType" selector="{{AttributePropertiesSection.InputType}}" userInput="{{priceProductAttribute.frontend_input}}"/>
        <seeOptionIsSelected stepKey="assertRequired" selector="{{AttributePropertiesSection.ValueRequired}}" userInput="{{priceProductAttribute.is_required_admin}}"/>
        <seeInField stepKey="assertAttrCode" selector="{{AdvancedAttributePropertiesSection.AttributeCode}}" userInput="{{priceProductAttribute.attribute_code}}"/>

        <!--Go to New Product page, add Attribute and check values-->
        <amOnPage url="{{AdminProductCreatePage.url('4', 'simple')}}" stepKey="goToCreateSimpleProductPage"/>
        <actionGroup ref="addProductAttributeInProductModal" stepKey="addAttributeToProduct">
            <argument name="attributeCode" value="{{priceProductAttribute.attribute_code}}"/>
        </actionGroup>
        <click stepKey="openAttributes" selector="{{AdminProductAttributesSection.sectionHeader}}"/>
        <waitForElementVisible selector="{{AdminProductAttributesSection.attributeTextInputByCode(priceProductAttribute.attribute_code)}}" stepKey="waitforLabel"/>
        <see stepKey="checkLabel" selector="{{AdminProductAttributesSection.attributeLabelByCode(priceProductAttribute.attribute_code)}}" userInput="{{priceProductAttribute.attribute_code}}"/>
    </test>

    <test name="CreateProductAttributeEntityDropdownTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Product Attributes"/>
            <title value="Admin should be able to create a Dropdown product attribute"/>
            <description value="Admin should be able to create a Dropdown product attribute"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-10896"/>
            <group value="Catalog"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
                <argument name="ProductAttribute" value="{{dropdownProductAttribute.attribute_code}}"/>
            </actionGroup>
            <click stepKey="clickDelete" selector="{{AttributePropertiesSection.DeleteAttribute}}"/>
            <click stepKey="clickOk" selector="{{AttributeDeleteModalSection.confirm}}"/>
            <waitForPageLoad stepKey="waitForDeletion"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Navigate to Stores > Attributes > Product.-->
        <amOnPage url="{{AdminProductAttributeGridPage.url}}" stepKey="goToProductAttributes"/>

        <!--Create new Product Attribute as TextField, with code and default value.-->
        <actionGroup ref="createProductAttribute" stepKey="createAttribute">
            <argument name="attribute" value="dropdownProductAttribute"/>
        </actionGroup>

        <!--Navigate to Product Attribute, add Product Options and Save - 1-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage1">
            <argument name="ProductAttribute" value="{{dropdownProductAttribute.attribute_code}}"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOption" stepKey="createOption1">
            <argument name="adminName" value="{{dropdownProductAttribute.option1_admin}}"/>
            <argument name="frontName" value="{{dropdownProductAttribute.option1_frontend}}"/>
            <argument name="row" value="1"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOption" stepKey="createOption2">
            <argument name="adminName" value="{{dropdownProductAttribute.option2_admin}}"/>
            <argument name="frontName" value="{{dropdownProductAttribute.option2_frontend}}"/>
            <argument name="row" value="2"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOptionAsDefault" stepKey="createOption3">
            <argument name="adminName" value="{{dropdownProductAttribute.option3_admin}}"/>
            <argument name="frontName" value="{{dropdownProductAttribute.option3_frontend}}"/>
            <argument name="row" value="3"/>
        </actionGroup>
        <click stepKey="saveAttribute" selector="{{AttributePropertiesSection.Save}}"/>

        <!--Perform appropriate assertions against dropdownProductAttribute entity-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPageForAssertions">
            <argument name="ProductAttribute" value="{{dropdownProductAttribute.attribute_code}}"/>
        </actionGroup>
        <seeInField stepKey="assertLabel" selector="{{AttributePropertiesSection.DefaultLabel}}" userInput="{{dropdownProductAttribute.attribute_code}}"/>
        <seeOptionIsSelected stepKey="assertInputType" selector="{{AttributePropertiesSection.InputType}}" userInput="{{dropdownProductAttribute.frontend_input_admin}}"/>
        <seeOptionIsSelected stepKey="assertRequired" selector="{{AttributePropertiesSection.ValueRequired}}" userInput="{{dropdownProductAttribute.is_required_admin}}"/>
        <seeInField stepKey="assertAttrCode" selector="{{AdvancedAttributePropertiesSection.AttributeCode}}" userInput="{{dropdownProductAttribute.attribute_code}}"/>

        <!--Assert options are in order and with correct attributes-->
        <seeInField stepKey="seeOption1Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('1')}}" userInput="{{dropdownProductAttribute.option1_admin}}"/>
        <seeInField stepKey="seeOption1StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('1')}}" userInput="{{dropdownProductAttribute.option1_frontend}}"/>
        <dontSeeCheckboxIsChecked stepKey="dontSeeOption1Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('1')}}"/>
        <seeInField stepKey="seeOption2Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('2')}}" userInput="{{dropdownProductAttribute.option2_admin}}"/>
        <seeInField stepKey="seeOption2StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('2')}}" userInput="{{dropdownProductAttribute.option2_frontend}}"/>
        <dontSeeCheckboxIsChecked stepKey="dontSeeOption2Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('2')}}"/>
        <seeInField stepKey="seeOption3Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('3')}}" userInput="{{dropdownProductAttribute.option3_admin}}"/>
        <seeInField stepKey="seeOption3StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('3')}}" userInput="{{dropdownProductAttribute.option3_frontend}}"/>
        <seeCheckboxIsChecked stepKey="seeOption3Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('3')}}"/>

        <!--Go to New Product page, add Attribute and check dropdown values-->
        <amOnPage url="{{AdminProductCreatePage.url('4', 'simple')}}" stepKey="goToCreateSimpleProductPage"/>
        <actionGroup ref="addProductAttributeInProductModal" stepKey="addAttributeToProduct">
            <argument name="attributeCode" value="{{dropdownProductAttribute.attribute_code}}"/>
        </actionGroup>
        <click stepKey="openAttributes" selector="{{AdminProductAttributesSection.sectionHeader}}"/>
        <waitForElementVisible selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttribute.attribute_code)}}" stepKey="waitforLabel"/>
        <seeOptionIsSelected selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttribute.attribute_code)}}" userInput="{{dropdownProductAttribute.option3_admin}}" stepKey="seeDefaultIsCorrect"/>
        <see stepKey="seeOption1Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttribute.attribute_code)}}" userInput="{{dropdownProductAttribute.option1_admin}}"/>
        <see stepKey="seeOption2Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttribute.attribute_code)}}" userInput="{{dropdownProductAttribute.option2_admin}}"/>
        <see stepKey="seeOption3Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttribute.attribute_code)}}" userInput="{{dropdownProductAttribute.option3_admin}}"/>
    </test>

    <test name="CreateProductAttributeEntityDropdownWithSingleQuoteTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Product Attributes"/>
            <title value="Admin should be able to create a Dropdown product attribute containing a single quote"/>
            <description value="Admin should be able to create a Dropdown product attribute containing a single quote"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-10898"/>
            <group value="Catalog"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
                <argument name="ProductAttribute" value="{{dropdownProductAttributeWithQuote.attribute_code}}"/>
            </actionGroup>
            <click stepKey="clickDelete" selector="{{AttributePropertiesSection.DeleteAttribute}}"/>
            <click stepKey="clickOk" selector="{{AttributeDeleteModalSection.confirm}}"/>
            <waitForPageLoad stepKey="waitForDeletion"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Navigate to Stores > Attributes > Product.-->
        <amOnPage url="{{AdminProductAttributeGridPage.url}}" stepKey="goToProductAttributes"/>

        <!--Create new Product Attribute as TextField, with code and default value.-->
        <actionGroup ref="createProductAttribute" stepKey="createAttribute">
            <argument name="attribute" value="dropdownProductAttributeWithQuote"/>
        </actionGroup>

        <!--Navigate to Product Attribute, add Product Option and Save - 1-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage1">
            <argument name="ProductAttribute" value="{{dropdownProductAttributeWithQuote.attribute_code}}"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOptionAsDefault" stepKey="createOption1">
            <argument name="adminName" value="{{dropdownProductAttributeWithQuote.option1_admin}}"/>
            <argument name="frontName" value="{{dropdownProductAttributeWithQuote.option1_frontend}}"/>
            <argument name="row" value="1"/>
        </actionGroup>
        <click stepKey="saveAttribute" selector="{{AttributePropertiesSection.Save}}"/>

        <!--Perform appropriate assertions against dropdownProductAttribute entity-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPageForAssertions">
            <argument name="ProductAttribute" value="{{dropdownProductAttributeWithQuote.attribute_code}}"/>
        </actionGroup>
        <seeInField stepKey="assertLabel" selector="{{AttributePropertiesSection.DefaultLabel}}" userInput="{{dropdownProductAttributeWithQuote.attribute_code}}"/>
        <seeOptionIsSelected stepKey="assertInputType" selector="{{AttributePropertiesSection.InputType}}" userInput="{{dropdownProductAttributeWithQuote.frontend_input_admin}}"/>
        <seeOptionIsSelected stepKey="assertRequired" selector="{{AttributePropertiesSection.ValueRequired}}" userInput="{{dropdownProductAttributeWithQuote.is_required_admin}}"/>
        <seeInField stepKey="assertAttrCode" selector="{{AdvancedAttributePropertiesSection.AttributeCode}}" userInput="{{dropdownProductAttributeWithQuote.attribute_code}}"/>

        <!--Assert options are in order and with correct attributes-->
        <seeInField stepKey="seeOption1Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('1')}}" userInput="{{dropdownProductAttributeWithQuote.option1_admin}}"/>
        <seeInField stepKey="seeOption1StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('1')}}" userInput="{{dropdownProductAttributeWithQuote.option1_frontend}}"/>
        <seeCheckboxIsChecked stepKey="seeOption1Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('1')}}"/>

        <!--Go to New Product page, add Attribute and check dropdown values-->
        <amOnPage url="{{AdminProductCreatePage.url('4', 'simple')}}" stepKey="goToCreateSimpleProductPage"/>
        <actionGroup ref="addProductAttributeInProductModal" stepKey="addAttributeToProduct">
            <argument name="attributeCode" value="{{dropdownProductAttributeWithQuote.attribute_code}}"/>
        </actionGroup>
        <click stepKey="openAttributes" selector="{{AdminProductAttributesSection.sectionHeader}}"/>
        <waitForElementVisible selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttributeWithQuote.attribute_code)}}" stepKey="waitforLabel"/>
        <seeOptionIsSelected selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttributeWithQuote.attribute_code)}}" userInput="{{dropdownProductAttributeWithQuote.option1_admin}}" stepKey="seeDefaultIsCorrect"/>
        <see stepKey="seeOption1Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(dropdownProductAttributeWithQuote.attribute_code)}}" userInput="{{dropdownProductAttributeWithQuote.option1_admin}}"/>
    </test>

    <test name="CreateProductAttributeEntityMultiSelectTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Product Attributes"/>
            <title value="Admin should be able to create a MultiSelect product attribute"/>
            <description value="Admin should be able to create a MultiSelect product attribute"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-10888"/>
            <group value="Catalog"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage">
                <argument name="ProductAttribute" value="{{multiselectProductAttribute.attribute_code}}"/>
            </actionGroup>
            <click stepKey="clickDelete" selector="{{AttributePropertiesSection.DeleteAttribute}}"/>
            <click stepKey="clickOk" selector="{{AttributeDeleteModalSection.confirm}}"/>
            <waitForPageLoad stepKey="waitForDeletion"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Navigate to Stores > Attributes > Product.-->
        <amOnPage url="{{AdminProductAttributeGridPage.url}}" stepKey="goToProductAttributes"/>

        <!--Create new Product Attribute as TextField, with code and default value.-->
        <actionGroup ref="createProductAttribute" stepKey="createAttribute">
            <argument name="attribute" value="multiselectProductAttribute"/>
        </actionGroup>

        <!--Navigate to Product Attribute, add Product Options and Save - 1-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPage1">
            <argument name="ProductAttribute" value="{{multiselectProductAttribute.attribute_code}}"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOption" stepKey="createOption1">
            <argument name="adminName" value="{{multiselectProductAttribute.option1_admin}}"/>
            <argument name="frontName" value="{{multiselectProductAttribute.option1_frontend}}"/>
            <argument name="row" value="1"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOption" stepKey="createOption2">
            <argument name="adminName" value="{{multiselectProductAttribute.option2_admin}}"/>
            <argument name="frontName" value="{{multiselectProductAttribute.option2_frontend}}"/>
            <argument name="row" value="2"/>
        </actionGroup>
        <actionGroup ref="createAttributeDropdownNthOptionAsDefault" stepKey="createOption3">
            <argument name="adminName" value="{{multiselectProductAttribute.option3_admin}}"/>
            <argument name="frontName" value="{{multiselectProductAttribute.option3_frontend}}"/>
            <argument name="row" value="3"/>
        </actionGroup>
        <click stepKey="saveAttribute" selector="{{AttributePropertiesSection.Save}}"/>

        <!--Perform appropriate assertions against multiselectProductAttribute entity-->
        <actionGroup ref="navigateToEditProductAttribute" stepKey="goToEditPageForAssertions">
            <argument name="ProductAttribute" value="{{multiselectProductAttribute.attribute_code}}"/>
        </actionGroup>
        <seeInField stepKey="assertLabel" selector="{{AttributePropertiesSection.DefaultLabel}}" userInput="{{multiselectProductAttribute.attribute_code}}"/>
        <seeOptionIsSelected stepKey="assertInputType" selector="{{AttributePropertiesSection.InputType}}" userInput="{{multiselectProductAttribute.frontend_input_admin}}"/>
        <seeOptionIsSelected stepKey="assertRequired" selector="{{AttributePropertiesSection.ValueRequired}}" userInput="{{multiselectProductAttribute.is_required_admin}}"/>
        <seeInField stepKey="assertAttrCode" selector="{{AdvancedAttributePropertiesSection.AttributeCode}}" userInput="{{multiselectProductAttribute.attribute_code}}"/>

        <!--Assert options are in order and with correct attributes-->
        <seeInField stepKey="seeOption1Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('1')}}" userInput="{{multiselectProductAttribute.option1_admin}}"/>
        <seeInField stepKey="seeOption1StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('1')}}" userInput="{{multiselectProductAttribute.option1_frontend}}"/>
        <dontSeeCheckboxIsChecked stepKey="dontSeeOption1Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('1')}}"/>
        <seeInField stepKey="seeOption2Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('2')}}" userInput="{{multiselectProductAttribute.option2_admin}}"/>
        <seeInField stepKey="seeOption2StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('2')}}" userInput="{{multiselectProductAttribute.option2_frontend}}"/>
        <dontSeeCheckboxIsChecked stepKey="dontSeeOption2Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('2')}}"/>
        <seeInField stepKey="seeOption3Admin" selector="{{AttributePropertiesSection.dropdownNthOptionAdmin('3')}}" userInput="{{multiselectProductAttribute.option3_admin}}"/>
        <seeInField stepKey="seeOption3StoreView" selector="{{AttributePropertiesSection.dropdownNthOptionDefaultStoreView('3')}}" userInput="{{multiselectProductAttribute.option3_frontend}}"/>
        <seeCheckboxIsChecked stepKey="seeOption3Default" selector="{{AttributePropertiesSection.dropdownNthOptionIsDefault('3')}}"/>

        <!--Go to New Product page, add Attribute and check multiselect values-->
        <amOnPage url="{{AdminProductCreatePage.url('4', 'simple')}}" stepKey="goToCreateSimpleProductPage"/>
        <actionGroup ref="addProductAttributeInProductModal" stepKey="addAttributeToProduct">
            <argument name="attributeCode" value="{{multiselectProductAttribute.attribute_code}}"/>
        </actionGroup>
        <click stepKey="openAttributes" selector="{{AdminProductAttributesSection.sectionHeader}}"/>
        <waitForElementVisible selector="{{AdminProductAttributesSection.attributeDropdownByCode(multiselectProductAttribute.attribute_code)}}" stepKey="waitforLabel"/>
        <seeOptionIsSelected selector="{{AdminProductAttributesSection.attributeDropdownByCode(multiselectProductAttribute.attribute_code)}}" userInput="{{multiselectProductAttribute.option3_admin}}" stepKey="seeDefaultIsCorrect"/>
        <see stepKey="seeOption1Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(multiselectProductAttribute.attribute_code)}}" userInput="{{multiselectProductAttribute.option1_admin}}"/>
        <see stepKey="seeOption2Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(multiselectProductAttribute.attribute_code)}}" userInput="{{multiselectProductAttribute.option2_admin}}"/>
        <see stepKey="seeOption3Available" selector="{{AdminProductAttributesSection.attributeDropdownByCode(multiselectProductAttribute.attribute_code)}}" userInput="{{multiselectProductAttribute.option3_admin}}"/>
    </test>
</tests>
