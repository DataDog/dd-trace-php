<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateConfigurableProductWithImagesTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="Create configurable product"/>
            <title value="Create configurable product with images"/>
            <description value="Admin should be able to create configurable product with images"/>
            <testCaseId value="MC-13713"/>
            <severity value="CRITICAL"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!-- Create first attribute with 2 options -->
            <createData entity="productAttributeWithTwoOptionsNotVisible" stepKey="createFirstConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOptionOne">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOptionTwo">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            </createData>

            <!-- Create second attribute with 2 options -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createSecondConfigProductAttribute"/>
            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOptionThree">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption4" stepKey="createConfigProductAttributeOptionFour">
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </createData>

            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
                <requiredEntity createDataKey="createSecondConfigProductAttribute"/>
            </createData>

            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!-- Delete configurable product -->
            <actionGroup ref="deleteProductUsingProductGrid" stepKey="deleteProduct">
                <argument name="product" value="ApiConfigurableProduct"/>
            </actionGroup>

            <!-- Delete created data -->
            <deleteData createDataKey="createFirstConfigProductAttribute" stepKey="deleteFirstConfigProductAttribute"/>
            <deleteData createDataKey="createSecondConfigProductAttribute" stepKey="deleteSecondConfigProductAttribute"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <!-- Log out -->
            <actionGroup ref="logout" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!--Create configurable product -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="amOnProductGridPage"/>
        <waitForPageLoad stepKey="waitForProductGridPageLoad"/>
        <actionGroup ref="goToCreateProductPage" stepKey="createConfigurableProduct">
            <argument name="product" value="ApiConfigurableProduct"/>
        </actionGroup>

        <!-- Fill configurable product values -->
        <actionGroup ref="fillMainProductForm" stepKey="fillConfigurableProductValues">
            <argument name="product" value="ApiConfigurableProduct"/>
        </actionGroup>

        <!-- Add configurable product to category -->
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$createCategory.name$$]" stepKey="fillCategory" after="fillConfigurableProductValues"/>

        <!-- Add image to product -->
        <actionGroup ref="addProductImage" stepKey="addImageForProduct">
            <argument name="image" value="MagentoLogo"/>
        </actionGroup>

        <!-- Create product configurations -->
        <click selector="{{AdminProductFormConfigurationsSection.createConfigurations}}" stepKey="clickCreateConfigurations" after="addImageForProduct"/>
        <waitForElementVisible selector="{{AdminCreateProductConfigurationsPanel.createNewAttribute}}" time="30" stepKey="waitForConfigurationModalOpen" after="clickCreateConfigurations"/>

         <!-- Show 100 attributes per page -->
        <actionGroup ref="adminDataGridSelectPerPage" stepKey="selectNumberOfAttributesPerPage">
            <argument name="perPage" value="100"/>
        </actionGroup>

        <!--Add attributes and select all options -->
        <click selector="{{AdminCreateProductConfigurationsPanel.attributeRowByAttributeCode($$createFirstConfigProductAttribute.attribute_code$$)}}" stepKey="clickOnFirstAttributeCheckbox"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.attributeRowByAttributeCode($$createSecondConfigProductAttribute.attribute_code$$)}}" stepKey="clickOnSecondAttributeCheckbox"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="clickOnNextButton1"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.selectAllByAttribute($$createFirstConfigProductAttribute.default_frontend_label$$)}}" stepKey="clickOnSelectAllInFirstAttribute"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.selectAllByAttribute($$createSecondConfigProductAttribute.default_frontend_label$$)}}" stepKey="clickOnSelectAllInSecondAttribute"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="clickOnNextButton2"/>

        <!-- Add images to first product attribute options -->
        <actionGroup ref="addUniqueImageToConfigurableProductOption" stepKey="addImageToConfigurableProductOptionOne">
            <argument name="image" value="MagentoLogo"/>
            <argument name="frontend_label" value="$$createFirstConfigProductAttribute.default_frontend_label$$"/>
            <argument name="label" value="$$createConfigProductAttributeOptionOne.option[store_labels][1][label]$$"/>
        </actionGroup>
        <actionGroup ref="addUniqueImageToConfigurableProductOption" stepKey="addImageToConfigurableProductOptionTwo">
            <argument name="image" value="TestImageNew"/>
            <argument name="frontend_label" value="$$createFirstConfigProductAttribute.default_frontend_label$$"/>
            <argument name="label" value="$$createConfigProductAttributeOptionTwo.option[store_labels][1][label]$$"/>
        </actionGroup>

        <!-- Add price to second product attribute options -->
        <actionGroup ref="addUniquePriceToConfigurableProductOption" stepKey="addPriceToConfigurableProductOptionThree">
            <argument name="frontend_label" value="$$createSecondConfigProductAttribute.default_frontend_label$$"/>
            <argument name="label" value="$$createConfigProductAttributeOptionThree.option[store_labels][1][label]$$"/>
            <argument name="price" value="{{virtualProductWithRequiredFields.price}}"/>
        </actionGroup>
        <actionGroup ref="addUniquePriceToConfigurableProductOption" stepKey="addPriceToConfigurableProductOptionFour">
            <argument name="frontend_label" value="$$createSecondConfigProductAttribute.default_frontend_label$$"/>
            <argument name="label" value="$$createConfigProductAttributeOptionFour.option[store_labels][1][label]$$"/>
            <argument name="price" value="{{virtualProductWithRequiredFields.price}}"/>
        </actionGroup>

        <!-- Add quantity to product attribute options -->
        <click selector="{{AdminCreateProductConfigurationsPanel.applySingleQuantityToEachSkus}}" stepKey="clickOnApplySingleQuantityToEachSku"/>
        <fillField selector="{{AdminCreateProductConfigurationsPanel.quantity}}" userInput="100" stepKey="enterAttributeQuantity"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="clickOnNextButton3"/>
        <click selector="{{AdminCreateProductConfigurationsPanel.next}}" stepKey="clickOnNextButton4"/>

        <!-- Save product -->
        <actionGroup ref="saveConfigurableProductAddToCurrentAttributeSet" stepKey="saveProduct"/>

        <!--Run re-index task-->
        <magentoCLI command="indexer:reindex" stepKey="reindex"/>

        <!-- Assert configurable product in category -->
        <amOnPage url="$$createCategory.name$$.html" stepKey="amOnCategoryPage"/>
        <waitForPageLoad stepKey="waitForCategoryPageLoad"/>
        <actionGroup ref="StorefrontCheckCategoryConfigurableProduct" stepKey="assertConfigurableProductInCategory">
            <argument name="product" value="ApiConfigurableProduct"/>
            <argument name="optionProduct" value="virtualProductWithRequiredFields"/>
        </actionGroup>

        <!-- Assert product image in storefront product page -->
        <amOnPage url="{{ApiConfigurableProduct.urlKey}}.html" stepKey="amOnProductPage"/>
        <actionGroup ref="assertProductImageStorefrontProductPage" stepKey="assertProductImageStorefrontProductPage">
            <argument name="product" value="ApiConfigurableProduct"/>
            <argument name="image" value="MagentoLogo"/>
        </actionGroup>

        <!-- Assert product options images in storefront product page -->
        <actionGroup ref="assertOptionImageInStorefrontProductPage" stepKey="assertFirstOptionImageInStorefrontProductPage">
            <argument name="product" value="ApiConfigurableProduct"/>
            <argument name="label" value="$$createConfigProductAttributeOptionOne.option[store_labels][1][label]$$"/>
            <argument name="image" value="MagentoLogo"/>
        </actionGroup>
        <actionGroup ref="assertOptionImageInStorefrontProductPage" stepKey="assertSecondOptionImageInStorefrontProductPage">
            <argument name="product" value="ApiConfigurableProduct"/>
            <argument name="label" value="$$createConfigProductAttributeOptionTwo.option[store_labels][1][label]$$"/>
            <argument name="image" value="TestImageNew"/>
        </actionGroup>
    </test>
</tests>
