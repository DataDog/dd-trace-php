<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontConfigurableProductChildSearchTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="View configurable product details in storefront"/>
            <title value="Guest customer should be able to search configurable product by attributes of child products"/>
            <description value="Guest customer should be able to search configurable product by attributes of child products"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-249"/>
            <group value="ConfigurableProduct"/>
            <group value="SearchEngineMysql"/>
        </annotations>
        <before>
            <!-- TODO: This should be converted to an actionGroup once MQE-993 is fixed. -->
            <!-- Create the category -->
            <createData entity="ApiCategory" stepKey="createCategory"/>

            <!-- Create the configurable product and add it to the category -->
            <createData entity="ApiConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create an attribute with two options to be used in the first child product -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Create an attribute with two options to be used in the second child product -->
            <createData entity="productAttributeMultiselectTwoOptions" stepKey="createConfigProductAttributeMultiSelect"/>
            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOption1Multiselect">
                <requiredEntity createDataKey="createConfigProductAttributeMultiSelect"/>
            </createData>
            <createData entity="productAttributeOption4" stepKey="createConfigProductAttributeOption2Multiselect">
                <requiredEntity createDataKey="createConfigProductAttributeMultiSelect"/>
            </createData>

            <!-- Add the attribute we just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the second attribute we just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet2">
                <requiredEntity createDataKey="createConfigProductAttributeMultiSelect"/>
            </createData>

            <!-- Get the first option of the attribute we created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the first option of the second attribute we created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttributeMultiSelect"/>
            </getData>

            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOneHidden" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>
            <updateData entity="ApiSimpleProductUpdateDescription" stepKey="updateSimpleProduct1" createDataKey="createConfigChildProduct1"/>

            <!-- Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwoHidden" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttributeMultiSelect"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>

            <!-- Create the configurable product -->
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>

            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>

            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>

            <!-- Create an attribute with two options to be used in the first child product (in the UI) -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttributeSelect"/>
            <createData entity="productAttributeOption5" stepKey="createConfigProductAttributeSelectOption1">
                <requiredEntity createDataKey="createConfigProductAttributeSelect"/>
            </createData>
            <createData entity="productAttributeOption6" stepKey="createConfigProductAttributeSelectOption2">
                <requiredEntity createDataKey="createConfigProductAttributeSelect"/>
            </createData>

            <!-- Add the attribute we just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet3">
                <requiredEntity createDataKey="createConfigProductAttributeSelect"/>
            </createData>

            <actionGroup ref="LoginAsAdmin" stepKey="login"/>

            <!-- Go to the product page for the first product -->
            <amOnPage stepKey="goToProductGrid" url="{{ProductCatalogPage.url}}"/>
            <waitForPageLoad stepKey="waitForProductGridLoad"/>
            <actionGroup stepKey="searchForSimpleProduct" ref="filterProductGridBySku2">
                <argument name="sku" value="$$createConfigChildProduct1.sku$$"/>
            </actionGroup>
            <actionGroup stepKey="openProductEditPage" ref="openProducForEditByClickingRowXColumnYInProductGrid"/>

            <!-- Edit the attribute for the first simple product -->
            <selectOption stepKey="editSelectAttribute" selector="{{ModifyAttributes.nthExistingAttribute($$createConfigProductAttributeSelect.default_frontend_label$$)}}" userInput="$$createConfigProductAttributeSelectOption1.option[store_labels][0][label]$$"/>
            <scrollToTopOfPage stepKey="scrollToTop"/>
            <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
            <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccess"/>
        </before>

        <after>
            <actionGroup ref="logout" stepKey="adminLogout"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteConfigChildProduct2"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>
            <deleteData createDataKey="createConfigProductAttributeMultiSelect" stepKey="deleteConfigProductAttributeMultiSelect"/>
            <deleteData createDataKey="createConfigProductAttributeSelect" stepKey="deleteConfigProductAttributeSelect"/>
            <deleteData createDataKey="createCategory" stepKey="deleteApiCategory"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Quick search the storefront for the first attribute option -->
        <amOnPage stepKey="goToStoreFront" url="{{StorefrontHomePage.url}}"/>
        <waitForPageLoad stepKey="waitForStorefront"/>
        <submitForm selector="#search_mini_form" parameterArray="['q' => $$createConfigProductAttributeSelectOption1.option[store_labels][0][label]$$]" stepKey="searchStorefront1" />
        <seeElement stepKey="seeProduct1" selector="{{StorefrontCategoryProductSection.ProductTitleByName('$$createConfigProduct.name$$')}}"/>

        <!-- Quick search the storefront for the second attribute option -->
        <submitForm selector="#search_mini_form" parameterArray="['q' => $$createConfigProductAttributeOption1Multiselect.option[store_labels][0][label]$$]" stepKey="searchStorefront2" />
        <seeElement stepKey="seeProduct2" selector="{{StorefrontCategoryProductSection.ProductTitleByName('$$createConfigProduct.name$$')}}"/>

        <!-- Quick search the storefront for the first product description -->
        <submitForm selector="#search_mini_form" parameterArray="['q' => $$createConfigChildProduct1.custom_attributes[short_description]$$]" stepKey="searchStorefront3" />
        <seeElement stepKey="seeProduct3" selector="{{StorefrontCategoryProductSection.ProductTitleByName('$$createConfigProduct.name$$')}}"/>
    </test>
</tests>
