<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontVerifyConfigurableProductLayeredNavigationTest">
        <annotations>
            <stories value="Create configurable product"/>
            <title value="Out of stock configurable attribute option doesn't show in Layered Navigation"/>
            <description value=" Login as admin and verify out of stock configurable attribute option doesn't show in Layered Navigation"/>
            <testCaseId value="MC-13734"/>
            <severity value="CRITICAL"/>
            <group value="ConfigurableProduct"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <!-- Login as Admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminPanel"/>

            <!-- Create Default Category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>

            <!-- Create an attribute with three options -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the attribute just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Get the first option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the second option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the third option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="3" stepKey="getConfigAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Create Configurable product -->
            <createData entity="BaseConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>

            <!--Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>

            <!--Create a simple product and give it the attribute with the Third option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
            </createData>

            <!-- Create the configurable product -->
            <createData entity="ConfigurableProductThreeOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
            </createData>

            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>

            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>

            <!-- Add the third simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild3">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct3"/>
            </createData>
        </before>
        <after>
            <!-- Delete Created Data -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteConfigChildProduct2"/>
            <deleteData createDataKey="createConfigChildProduct3" stepKey="deleteConfigChildProduct3"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteAttribute"/>
            <actionGroup ref="logout" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Open Product Index Page and Filter First Child product -->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndex"/>
        <waitForPageLoad stepKey="waitForProductIndexPageToLoad"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterProduct">
            <argument name="product" value="ApiSimpleOne"/>
        </actionGroup>

        <!-- Change the First Child Product stock status as 'Out Of Stock'-->
        <click selector="{{AdminProductGridFilterSection.nthRow('1')}}" stepKey="selectFirstRow"/>
        <waitForPageLoad stepKey="waitForProductPageToLoad"/>
        <scrollTo selector="{{AdminProductFormSection.productQuantity}}" stepKey="scrollToProductQuantity"/>
        <selectOption selector="{{AdminProductFormSection.productStockStatus}}" userInput="Out of Stock" stepKey="disableProduct"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}"  stepKey="clickOnSaveButton"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the product." stepKey="messageYouSavedTheProductIsShown"/>

        <!--Run re-index task-->
        <magentoCLI command="indexer:reindex" stepKey="reindex"/>

        <!--Open Category in Store Front and select product attribute option from sidebar -->
        <actionGroup ref="SelectStorefrontSideBarAttributeOption" stepKey="selectStorefrontProductAttributeOption">
            <argument name="categoryName" value="$$createCategory.name$$"/>
            <argument name="attributeDefaultLabel" value="$$createConfigProductAttribute.default_value$$"/>
        </actionGroup>

        <!--Assert Out Of Stock product is not visible in Storefront Page -->
        <dontSee selector="{{StorefrontCategorySidebarSection.filterOption}}" userInput="$$getConfigAttributeOption1.label$$" stepKey="dontSeeOption1"/>
        <see selector="{{StorefrontCategorySidebarSection.filterOption}}" userInput="$$getConfigAttributeOption2.label$$" stepKey="seeOption2"/>
        <see selector="{{StorefrontCategorySidebarSection.filterOption}}" userInput="$$getConfigAttributeOption3.label$$" stepKey="seeOption3"/>
    </test>
</tests>
