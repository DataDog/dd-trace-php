<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontConfigurableProductCategoryViewChildOnlyTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="View configurable product child in storefront"/>
            <title value="DEPRECATED It should be possible to only view the child product of a configurable product"/>
            <description value="Create configurable product, add to category such that only child variation is visible in category"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-5832"/>
            <group value="ConfigurableProduct"/>
            <skip>
                <issueId value="DEPRECATED">Use StorefrontShouldSeeOnlyConfigurableProductChildAssignedToSeparateCategoryTest instead</issueId>
            </skip>
        </annotations>
        <before>
            <!-- Create the category -->
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiCategory" stepKey="secondCategory"/>

            <!-- Create an attribute with two options to be used in the first child product -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the attribute we just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Get the first option of the attribute we created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the second option of the attribute we created -->
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Create the configurable product and add it to the category -->
            <createData entity="ApiConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>

            <!-- Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>

            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>

            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>

            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>
        </before>

        <after>
            <actionGroup ref="logout" stepKey="adminLogout"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteConfigChildProduct2"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>
            <deleteData createDataKey="createCategory" stepKey="deleteApiCategory"/>
            <deleteData createDataKey="secondCategory" stepKey="deleteSecondCategory"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </after>

        <actionGroup ref="LoginAsAdmin" stepKey="login"/>

        <!-- Go to the product page for the first product -->
        <amOnPage stepKey="goToProductGrid" url="{{ProductCatalogPage.url}}"/>
        <waitForPageLoad stepKey="waitForProductGridLoad"/>
        <actionGroup stepKey="searchForSimpleProduct" ref="filterProductGridBySku2">
            <argument name="sku" value="$$createConfigChildProduct1.sku$$"/>
        </actionGroup>
        <actionGroup stepKey="openProductEditPage" ref="openProducForEditByClickingRowXColumnYInProductGrid"/>
        <!-- Edit the visibility the first simple product -->
        <selectOption selector="{{AdminProductFormSection.visibility}}" userInput="Catalog, Search" stepKey="selectVisibilityCatalogSearch"/>
        <!--Add to category-->
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$secondCategory.name$$]" stepKey="addProductToCategory"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccess"/>

        <!-- Go to storefront to view child product -->
        <amOnPage stepKey="goToStoreFront" url="{{StorefrontHomePage.url}}"/>
        <waitForPageLoad stepKey="waitForStorefront"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$secondCategory.name$$)}}" stepKey="goToCategoryStorefront"/>
        <waitForPageLoad stepKey="waitForStorefrontCategory"/>
        <seeElement selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createConfigChildProduct1.name$$)}}" stepKey="seeChildProductInCategory"/>
        <dontSeeElement selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createConfigChildProduct2.name$$)}}" stepKey="dontSeeOtherChildProduct"/>
        <dontSeeElement selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createConfigProduct.name$$)}}" stepKey="dontSeeParentProduct"/>
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createConfigChildProduct1.name$$)}}" stepKey="clickProductName"/>
        <waitForPageLoad stepKey="waitForProductPageLoad"/>
        <seeInCurrentUrl url="$$createConfigChildProduct1.custom_attributes[url_key]$$" stepKey="seeProductPageIsAccessible"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.productName($$createConfigChildProduct1.name$$)}}" stepKey="seeProductNameOnProductPage"/>
    </test>
</tests>
