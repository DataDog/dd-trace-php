<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCancelTheCreatedOrderWithBankTransferPaymentMethodTest">
        <annotations>
            <group value="Sales"/>
            <stories value="Cancel Created Order"/>
            <title value="Cancel the created order with bank transfer payment method"/>
            <description value="Created an order with bank transfer payment method and cancel the order"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-16068"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

            <!-- Enable Bank Transfer payment -->
            <magentoCLI command="config:set {{EnablePaymentBankTransferConfigData.path}} {{EnablePaymentBankTransferConfigData.value}}" stepKey="enableBankTransferPayment"/>

            <!--Set default flat rate shipping method settings-->
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRate"/>

            <!--Create simple customer-->
            <createData entity="Simple_US_Customer_CA" stepKey="simpleCustomer"/>

            <!-- Create Simple Product -->
            <createData entity="SimpleProduct2" stepKey="simpleProduct">
                <field key="price">10.00</field>
            </createData>
        </before>
        <after>
            <magentoCLI command="config:set {{DisablePaymentBankTransferConfigData.path}} {{DisablePaymentBankTransferConfigData.value}}" stepKey="disableBankTransferPayment"/>
            <deleteData createDataKey="simpleCustomer" stepKey="deleteSimpleCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Create new customer order-->
        <actionGroup ref="navigateToNewOrderPageExistingCustomer" stepKey="navigateToNewOrderWithExistingCustomer">
            <argument name="customer" value="$$simpleCustomer$$"/>
        </actionGroup>

        <!--Add Simple product to order-->
        <actionGroup ref="addSimpleProductToOrder" stepKey="addSimpleProductToTheOrder">
            <argument name="product" value="$$simpleProduct$$"/>
        </actionGroup>

        <!--Select FlatRate shipping method-->
        <actionGroup ref="AdminSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRateShippingMethod"/>

        <!-- Select bank Transfer payment method -->
        <waitForElementVisible selector="{{AdminOrderFormPaymentSection.paymentBlock}}" stepKey="waitForPaymentOptions"/>
        <conditionalClick selector="{{AdminOrderFormPaymentSection.bankTransferOption}}" dependentSelector="{{AdminOrderFormPaymentSection.bankTransferOption}}" visible="true" stepKey="checkBankTransferOption"/>

        <!-- Submit order -->
        <click selector="{{AdminOrderFormActionSection.SubmitOrder}}" stepKey="submitOrder"/>

        <!-- Verify order information -->
        <actionGroup ref="verifyCreatedOrderInformation" stepKey="verifyCreatedOrderInformation"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderId"/>

        <!-- Cancel the Order -->
        <actionGroup ref="cancelPendingOrder" stepKey="cancelPendingOrder"/>

        <!--Log in to Storefront as Customer  -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="signUp">
            <argument name="Customer" value="$$simpleCustomer$$"/>
        </actionGroup>

        <!-- Assert OrderId and status in frontend order grid -->
        <click selector="{{StorefrontCustomerSidebarSection.sidebarCurrentTab('My Orders')}}" stepKey="clickOnMyOrders"/>
        <waitForPageLoad stepKey="waitForOrderDetailsToLoad"/>
        <seeElement selector="{{StorefrontCustomerOrderViewSection.orderStatusInGrid('$orderId', 'Canceled')}}" stepKey="seeOrderStatusInGrid"/>
    </test>
</tests>
