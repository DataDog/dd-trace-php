<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CreateInvoiceWithCashOnDeliveryPaymentMethodTest">
        <annotations>
            <stories value="Create Invoice for Offline Payment Methods"/>
            <title value="Create invoice with cash on delivery payment method test"/>
            <description value="Create invoice with cash on delivery payment method"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-15869"/>
            <group value="sales"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!-- Login as admin -->
            <actionGroup ref="LoginAsAdmin" stepKey="LoginAsAdmin"/>

            <!-- Create customer -->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <!-- Create simple product -->
            <createData entity="SimpleProduct2" stepKey="createSimpleProduct">
                <field key="price">100</field>
            </createData>

            <!-- Enable payment method -->
            <magentoCLI command="config:set {{CashOnDeliveryEnableConfigData.path}} {{CashOnDeliveryEnableConfigData.value}}" stepKey="enablePaymentMethod"/>
        </before>
        <after>
            <!-- Disable payment method -->
            <magentoCLI command="config:set {{CashOnDeliveryDisabledConfigData.path}} {{CashOnDeliveryDisabledConfigData.value}}" stepKey="disablePaymentMethod"/>

            <!-- Logout customer -->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogoutStorefront"/>

            <!-- Delete customer -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>

            <!-- Delete product -->
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>

            <!-- Log out -->
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!-- Create order -->
        <actionGroup ref="navigateToNewOrderPageExistingCustomer" stepKey="goToCreateOrderPage">
            <argument name="customer" value="$$createCustomer$$"/>
        </actionGroup>

        <!-- Add product to order -->
        <actionGroup ref="AddSimpleProductWithQtyToOrderActionGroup" stepKey="addProductToOrder">
            <argument name="product" value="$$createSimpleProduct$$"/>
            <argument name="productQty" value="2"/>
        </actionGroup>

        <!-- Select shipping method -->
        <click selector="{{AdminInvoicePaymentShippingSection.getShippingMethodAndRates}}" stepKey="openShippingMethod"/>
        <waitForPageLoad stepKey="waitForShippingMethods"/>
        <click selector="{{AdminInvoicePaymentShippingSection.shippingMethod}}" stepKey="chooseShippingMethod"/>
        <waitForPageLoad stepKey="waitForShippingMethodLoad"/>

        <!-- Select cash on delivery payment method -->
        <actionGroup ref="SelectCashOnDeliveryPaymentMethodActionGroup" stepKey="selectPaymentMethod"/>

        <!-- Submit order -->
        <actionGroup ref="AdminSubmitOrderActionGroup" stepKey="submitOrder"/>

        <!-- Grab order id -->
        <grabTextFrom selector="|Order # (\d+)|" stepKey="getOrderId"/>

        <!-- Open created order -->
        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="goToOrdersPage"/>
        <waitForPageLoad stepKey="waitForOrdersPageLoad"/>
        <actionGroup ref="filterOrderGridById" stepKey="filterOrdersGridById">
            <argument name="orderId" value="$getOrderId"/>
        </actionGroup>
        <click selector="{{AdminDataGridTableSection.firstRow}}" stepKey="clickCreatedOrderInGrid"/>

        <!-- Go to invoice tab and fill data -->
        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoiceAction"/>
        <fillField selector="{{AdminOrderInvoiceViewSection.invoiceQty}}" userInput="1" stepKey="fillInvoiceQuantity"/>
        <click selector="{{AdminOrderInvoiceViewSection.updateInvoiceBtn}}" stepKey="clickUpdateQtyInvoiceBtn"/>
        <fillField selector="{{AdminInvoiceTotalSection.invoiceComment}}" userInput="comment" stepKey="writeComment"/>
        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="clickSubmitInvoice"/>

        <!-- Assert invoice with shipment success message -->
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The invoice has been created." stepKey="seeSuccessMessage"/>

        <!-- Login as customer -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefrontAccount">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForCustomerLogin"/>

        <!-- Open My Account > My Orders -->
        <amOnPage stepKey="goToMyAccountPage" url="{{StorefrontCustomerDashboardPage.url}}"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="StorefrontCustomerGoToSidebarMenu" stepKey="goToSidebarMenu">
            <argument name="menu" value="My Orders"/>
        </actionGroup>

        <!-- Assert invoiced amount on frontend -->
        <click selector="{{StorefrontCustomerOrderSection.viewOrder}}" stepKey="clickViewOrder"/>
        <click selector="{{StorefrontOrderInvoicesSection.invoiceTab}}" stepKey="clickInvoiceTabOnStorefront"/>
        <see selector="{{StorefrontOrderInvoicesSection.grandTotalPrice}}" userInput="$110.00" stepKey="seePrice"/>
    </test>
</tests>
