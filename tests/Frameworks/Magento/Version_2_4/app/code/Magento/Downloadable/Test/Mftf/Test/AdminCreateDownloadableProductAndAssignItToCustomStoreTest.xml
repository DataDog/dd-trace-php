<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateDownloadableProductAndAssignItToCustomStoreTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Create Downloadable Product"/>
            <title value="Create downloadable product and assign it to custom store test"/>
            <description value="Admin should be able to create downloadable and assign it to custom website"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14516"/>
            <group value="Downloadable"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <magentoCLI stepKey="addDownloadableDomain" command="downloadable:domains:add static.magento.com"/>
            <!-- Create category -->
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>

            <!-- Login as admin -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>
        </before>
        <after>
            <magentoCLI stepKey="removeDownloadableDomain" command="downloadable:domains:remove static.magento.com"/>
            <!-- Delete category -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <!-- Delete created downloadable product -->
            <actionGroup ref="DeleteProductUsingProductGridActionGroup" stepKey="deleteProduct">
                <argument name="product" value="DownloadableProduct"/>
            </actionGroup>
            <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="clearFilters"/>

            <!-- Delete store view -->
            <actionGroup ref="AdminDeleteStoreViewActionGroup" stepKey="deleteCreatedStoreView"/>
            <magentoCron groups="index" stepKey="reindex"/>

            <!-- Log out -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Create store view -->
        <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createStoreView"/>
        <magentoCron groups="index" stepKey="reindex"/>

        <!-- Create Downloadable product -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="amOnProductGridPage"/>
        <actionGroup ref="GoToSpecifiedCreateProductPageActionGroup" stepKey="createProduct">
            <argument name="productType" value="downloadable"/>
        </actionGroup>

        <!-- Fill downloadable product values -->
        <actionGroup ref="FillMainProductFormNoWeightActionGroup" stepKey="fillDownloadableProductForm">
            <argument name="product" value="DownloadableProduct"/>
        </actionGroup>

        <!-- Add downloadable product to category -->
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$createCategory.name$$]" stepKey="fillCategory"/>

        <!-- Fill downloadable link information before the creation link -->
        <actionGroup ref="AdminAddDownloadableLinkInformationActionGroup" stepKey="addDownloadableLinkInformation"/>

        <!-- Links can be purchased separately -->
        <checkOption selector="{{AdminProductDownloadableSection.isLinksPurchasedSeparately}}" stepKey="checkOptionPurchaseSeparately"/>

        <!-- Add downloadable link -->
        <actionGroup ref="AddDownloadableProductLinkWithMaxDownloadsActionGroup" stepKey="addDownloadableProductLink">
            <argument name="link" value="downloadableLinkWithMaxDownloads"/>
        </actionGroup>

        <!-- Save product -->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>

        <!-- Switch default store view on store view created below -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="amOnStorefrontPage"/>
        <actionGroup ref="StorefrontSwitchStoreViewActionGroup" stepKey="SwitchStoreView">
            <argument name="storeView" value="customStore"/>
        </actionGroup>

        <!-- Assert product in custom store -->
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPageActionGroup" stepKey="AssertProductInStorefrontProductPage">
            <argument name="product" value="DownloadableProduct"/>
        </actionGroup>

        <!-- See product link in storefront product page in custom store -->
        <scrollTo selector="{{StorefrontDownloadableProductSection.downloadableLinkBlock}}" stepKey="scrollToLinksInStorefront"/>
        <seeElement stepKey="seeDownloadableLink" selector="{{StorefrontDownloadableProductSection.downloadableLinkLabel(downloadableLinkWithMaxDownloads.title)}}"/>
    </test>
</tests>
