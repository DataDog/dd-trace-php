<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminConfigurableProductWithTierPriceWithTaxTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="Create configurable product"/>
            <title value="Create configurable product with tier price and check excluding tax item price"/>
            <description value="Create configurable product with tier price and check excluding tax item price"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-37863"/>
            <group value="ConfigurableProduct"/>
        </annotations>
        <before>
            <createData entity="productAttributeWithTwoOptionsNotVisible" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOptionOne">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOptionTwo">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOptionOne">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOptionTwo">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <createData entity="ApiSimpleOne" stepKey="createFirstSimpleProduct">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOptionOne"/>
            </createData>
            <createData entity="ApiSimpleTwo" stepKey="createSecondSimpleProduct">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOptionTwo"/>
            </createData>

            <createData entity="tierProductPrice" stepKey="addTierPrice">
                <requiredEntity createDataKey="createFirstSimpleProduct" />
            </createData>

            <createData entity="CustomerEntityOne" stepKey="createCustomer"/>
            <createData entity="SimpleTaxRule" stepKey="createTaxRule"/>

            <magentoCLI command="config:set tax/display/type 3" stepKey="enableShowIncludingExcludingTax"/>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogOut"/>
            <actionGroup ref="DeleteProductUsingProductGridActionGroup" stepKey="deleteProduct">
                <argument name="product" value="ApiConfigurableProduct"/>
            </actionGroup>
            <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="clearFilters"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>

            <deleteData createDataKey="createFirstSimpleProduct" stepKey="deleteFirstSimpleProduct"/>
            <deleteData createDataKey="createSecondSimpleProduct" stepKey="deleteSecondSimpleProduct"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createTaxRule" stepKey="deleteTaxRule"/>

            <magentoCLI command="config:set tax/display/type 0" stepKey="disableShowIncludingExcludingTax"/>
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Create configurable product -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="amOnProductGridPage"/>
        <actionGroup ref="GoToCreateProductPageActionGroup" stepKey="createConfigurableProduct">
            <argument name="product" value="ApiConfigurableProduct"/>
        </actionGroup>

        <!-- Fill configurable product values -->
        <actionGroup ref="FillMainProductFormActionGroup" stepKey="fillConfigurableProductValues">
            <argument name="product" value="ApiConfigurableProduct"/>
        </actionGroup>

        <!-- Create product configurations and add attribute and select all options -->
        <actionGroup ref="GenerateConfigurationsByAttributeCodeActionGroup" stepKey="generateConfigurationsByAttributeCode">
            <argument name="attributeCode" value="$$createConfigProductAttribute.attribute_code$$"/>
        </actionGroup>

        <!-- Add associated products to configurations grid -->
        <actionGroup ref="AddProductToConfigurationsGridActionGroup" stepKey="addFirstSimpleProduct">
            <argument name="sku" value="$$createFirstSimpleProduct.sku$$"/>
            <argument name="name" value="$$createConfigProductAttributeOptionOne.option[store_labels][1][label]$$"/>
        </actionGroup>
        <actionGroup ref="AddProductToConfigurationsGridActionGroup" stepKey="addSecondSimpleProduct">
            <argument name="sku" value="$$createSecondSimpleProduct.sku$$"/>
            <argument name="name" value="$$createConfigProductAttributeOptionTwo.option[store_labels][1][label]$$"/>
        </actionGroup>

        <!-- Save configurable product -->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveConfigurableProduct"/>

        <!--Login customer on storefront-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginCustomer">
            <argument name="Customer" value="$$createCustomer$$" />
        </actionGroup>

        <!-- Assert product tier price on product page -->
        <amOnPage url="{{ApiConfigurableProduct.urlKey}}.html" stepKey="amOnProductPage"/>
        <waitForPageLoad stepKey="waitForProductPageLoad"/>
        <selectOption userInput="$$createConfigProductAttributeOptionOne.option[store_labels][1][label]$$"
                      selector="{{StorefrontProductInfoMainSection.productAttributeOptionsSelectButton}}"
                      stepKey="selectOption"/>

        <!-- Assert tier price excluding including price item -->
        <actionGroup ref="AssertStorefrontProductDetailPageTierPriceActionGroup" stepKey="assertProductTierPriceExcludingIncludingTax">
            <argument name="tierProductPriceDiscountQuantity" value="2"/>
            <argument name="productPriceWithAppliedTierPriceDiscount" value="97.43  ${{tierProductPrice.price}}"/>
            <argument name="productSavedPricePercent" value="27"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertExcludingTierPriceActionGroup" stepKey="assertTierPriceExcludingPrice">
            <argument name="excludingPrice" value="${{tierProductPrice.price}}" />
        </actionGroup>
    </test>
</tests>
