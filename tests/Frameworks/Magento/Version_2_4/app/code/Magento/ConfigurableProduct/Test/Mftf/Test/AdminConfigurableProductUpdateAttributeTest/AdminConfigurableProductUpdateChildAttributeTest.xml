<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminConfigurableProductUpdateChildAttributeTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="Edit a configurable product in admin"/>
            <title value="Admin should be able to update existing attributes of child products of a configurable product"/>
            <description value="Admin should be able to update existing attributes of child products of a configurable product"/>
            <severity value="AVERAGE"/>
            <testCaseId value="MC-288"/>
            <group value="ConfigurableProduct"/>
        </annotations>

        <before>

            <!-- TODO: This should be converted to an actionGroup once MQE-993 is fixed. -->
            <!-- Create the category the product will be a part of -->
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>

            <!-- Create the two attributes the product will have -->
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the product to the default set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Get the two attributes -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Create the two children product -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>

            <!-- Create the two configurable product with both children -->
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>

            <!-- login -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
        </before>

        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>

            <!-- Delete everything that was created in the before block -->
            <deleteData createDataKey="createCategory" stepKey="deleteCatagory"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteConfigChildProduct2"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Find the product that we just created using the product grid -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="visitAdminProductPage"/>
        <conditionalClick selector="{{AdminProductGridFilterSection.clearFilters}}" dependentSelector="{{AdminProductGridFilterSection.clearFilters}}" visible="true" stepKey="clickClearFiltersInitial"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="findCreatedProduct">
            <argument name="product" value="$$createConfigProduct$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForProductFilterLoad"/>
        <actionGroup ref="OpenEditProductOnBackendActionGroup" stepKey="openProduct">
            <argument name="product" value="$$createConfigProduct$$"/>
        </actionGroup>

        <!-- Open the wizard for editing configurations and fill out a new attribute -->
        <click stepKey="clickEditConfig" selector="{{AdminProductFormConfigurationsSection.createConfigurations}}"/>
        <waitForPageLoad stepKey="waitForEditConfig"/>
        <click stepKey="clickNextWizard" selector="{{AdminCreateProductConfigurationsPanel.next}}"/>
        <waitForElementVisible selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}" stepKey="waitCreateNewValueAppears"/>
        <click stepKey="createNewValue" selector="{{AdminCreateProductConfigurationsPanel.createNewValue}}"/>
        <fillField stepKey="fillNewAttribute" selector="{{AdminCreateProductConfigurationsPanel.attributeName}}" userInput="simple"/>
        <click stepKey="confirmNewAttribute" selector="{{AdminCreateProductConfigurationsPanel.saveAttribute}}"/>
        <click stepKey="clickNextWizard2" selector="{{AdminCreateProductConfigurationsPanel.next}}"/>

        <!-- Give the product a price and quantity -->
        <click stepKey="click" selector="{{AdminCreateProductConfigurationsPanel.applySingleQuantityToEachSkus}}"/>
        <fillField stepKey="fillProductQuantity" selector="{{AdminCreateProductConfigurationsPanel.quantity}}" userInput="{{_defaultProduct.quantity}}"/>
        <click stepKey="clickNextWizard3" selector="{{AdminCreateProductConfigurationsPanel.next}}"/>
        <click stepKey="clickGenerateProducts" selector="{{AdminCreateProductConfigurationsPanel.next}}"/>

        <!-- Save the product -->
        <waitForPageLoad stepKey="waitForGeneration"/>
        <click stepKey="saveProductAttribute" selector="{{AdminProductFormActionSection.saveButton}}"/>
        <see stepKey="assertSuccess" selector="{{AdminProductMessagesSection.successMessage}}" userInput="You saved the product."/>

        <!-- Check to make sure the created product has appeared on the configurable product storefront -->
        <amOnPage url="/{{ApiConfigurableProduct.urlKey}}2.html" stepKey="goToConfigProductPage"/>
        <waitForPageLoad stepKey="waitForStorefront"/>
        <selectOption stepKey="clickFirstAttribute" selector="{{ModifyAttributes.nthExistingAttribute($$createConfigProductAttribute.default_frontend_label$$)}}" userInput="simple"/>
        <waitForPageLoad stepKey="waitForPageExecution"/>
        <see stepKey="checkPrice" selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="0.00"/>
        <waitForPageLoad stepKey="waitForStoreFrontProductPageLoad"/>

        <!-- Find the simple product that we just created using the product grid and delete it -->
        <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="findCreatedProduct2">
            <argument name="sku" value="{{ApiConfigurableProduct.sku}}2-simple"/>
        </actionGroup>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilters"/>
    </test>
</tests>
