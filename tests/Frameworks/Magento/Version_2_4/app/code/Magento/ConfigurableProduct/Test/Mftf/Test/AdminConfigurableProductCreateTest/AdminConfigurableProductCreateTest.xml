<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminConfigurableProductCreateTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="Create, Read, Update, Delete"/>
            <title value="admin should be able to create a configurable product with attributes"/>
            <description value="admin should be able to create a configurable product with attributes"/>
            <severity value="BLOCKER"/>
            <testCaseId value="MC-84"/>
            <group value="ConfigurableProduct"/>
            <group value="cloud_smoke"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin1"/>
        </before>

        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="openProductIndexPage"/>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearGridFiltersConfigurable"/>
            <actionGroup ref="AdminGridFilterFillInputFieldActionGroup" stepKey="addSkuFilterConfigurable">
                <argument name="filterInputName" value="sku"/>
                <argument name="filterValue" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterFillSelectFieldActionGroup" stepKey="addTypeFilterConfigurable">
                <argument name="filterName" value="type_id"/>
                <argument name="filterValue" value="Configurable Product"/>
            </actionGroup>
            <actionGroup ref="AdminClickSearchInGridActionGroup" stepKey="applyGridFilterConfigurable"/>
            <actionGroup ref="DeleteProductsIfTheyExistActionGroup" stepKey="deleteConfigurableProduct">
                <argument name="sku" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearGridFiltersVirtual"/>
            <actionGroup ref="AdminGridFilterFillInputFieldActionGroup" stepKey="addSkuFilterVirtual">
                <argument name="filterInputName" value="sku"/>
                <argument name="filterValue" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminClickSearchInGridActionGroup" stepKey="applyGridFilterVirtual"/>
            <actionGroup ref="DeleteProductsIfTheyExistActionGroup" stepKey="deleteVirtualProducts">
                <argument name="sku" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGrid"/>
            <actionGroup ref="AdminDeleteProductAttributeByLabelActionGroup" stepKey="deleteProductAttribute">
                <argument name="productAttributeLabel" value="{{colorProductAttribute.default_label}}"/>
            </actionGroup>
            <!-- Reindex after deleting product attribute -->
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>

        <!-- Create a configurable product via the UI -->
        <actionGroup ref="CreateConfigurableProductActionGroup" stepKey="createProduct">
            <argument name="product" value="_defaultProduct"/>
            <argument name="category" value="$$createCategory$$"/>
        </actionGroup>

        <!-- assert color configurations on the admin create product page -->
        <dontSee selector="{{AdminProductFormConfigurationsSection.variationLabel}}" stepKey="seeLabelNotVisible"/>
        <seeNumberOfElements selector="{{AdminProductFormConfigurationsSection.currentVariationsRows}}" userInput="3" stepKey="seeNumberOfRows"/>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeAttributeName1InField">
            <argument name="attribute" value="name_container"/>
            <argument name="value" value="{{colorProductAttribute1.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeAttributeName2InField">
            <argument name="attribute" value="name_container"/>
            <argument name="value" value="{{colorProductAttribute2.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeAttributeName3InField">
            <argument name="attribute" value="name_container"/>
            <argument name="value" value="{{colorProductAttribute3.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeAttributeSku1InField">
            <argument name="attribute" value="sku_container"/>
            <argument name="value" value="{{colorProductAttribute1.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeAttributeSku2InField">
            <argument name="attribute" value="sku_container"/>
            <argument name="value" value="{{colorProductAttribute2.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeAttributeSku3InField">
            <argument name="attribute" value="sku_container"/>
            <argument name="value" value="{{colorProductAttribute3.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeUniquePrice1InField">
            <argument name="attribute" value="price_container"/>
            <argument name="value" value="{{colorProductAttribute1.price}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeUniquePrice2InField">
            <argument name="attribute" value="price_container"/>
            <argument name="value" value="{{colorProductAttribute2.price}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeUniquePrice3InField">
            <argument name="attribute" value="price_container"/>
            <argument name="value" value="{{colorProductAttribute3.price}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminChildProductDataOnParentProductEditPageActionGroup" stepKey="seeQuantityInField">
            <argument name="attribute" value="quantity_container"/>
            <argument name="value" value="{{colorProductAttribute.attribute_quantity}}"/>
        </actionGroup>

        <!-- assert storefront category list page -->
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="amOnStorefront"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForPageLoad3"/>
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="clickOnCategoryName">
            <argument name="categoryName" value="$$createCategory.name$$"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForPageLoad4"/>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="assertProductPresent">
            <argument name="productName" value="{{_defaultProduct.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="assertProductPricePresent">
            <argument name="productName" value="{{_defaultProduct.name}}"/>
            <argument name="productPrice" value="{{colorProductAttribute1.price}}"/>
        </actionGroup>

        <!-- assert storefront product details page -->
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="clickOnProductName"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForPageLoad5"/>
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPageActionGroup" stepKey="assertProductNameTitle">
            <argument name="product" value="_defaultProduct"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="assertProductName"/>
        <actionGroup ref="StorefrontAssertProductPriceOnProductPageActionGroup" stepKey="assertProductPrice">
            <argument name="productPrice" value="{{colorProductAttribute1.price}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="assertProductSku"/>
        <actionGroup ref="AssertStorefrontProductAttributeLabelVisibleActionGroup" stepKey="seeColorAttributeName1">
            <argument name="productAttributeLabel" value="{{colorProductAttribute.default_label}}"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductAttributeOptionVisibleActionGroup" stepKey="seeInDropDown1">
            <argument name="productAttributeOption" value="{{colorProductAttribute1.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductAttributeOptionVisibleActionGroup" stepKey="seeInDropDown2">
            <argument name="productAttributeOption" value="{{colorProductAttribute2.name}}"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductAttributeOptionVisibleActionGroup" stepKey="seeInDropDown3">
            <argument name="productAttributeOption" value="{{colorProductAttribute3.name}}"/>
        </actionGroup>
    </test>
</tests>
