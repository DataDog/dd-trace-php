<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateAndEditConfigurableProductSettingsTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="Create/Edit configurable product in Admin"/>
            <title value="Admin should be able to set/edit other product information when creating/editing a configurable product"/>
            <description value="Admin should be able to set/edit other product information when creating/editing a configurable product"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-3240"/>
            <group value="Catalog"/>
        </annotations>
        <before>
            <!-- Login as admin -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!-- Log out -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>

        <!-- Create a configurable product -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndexPage"/>
        <actionGroup ref="GoToCreateProductPageActionGroup" stepKey="createConfigurableProduct">
            <argument name="product" value="BaseConfigurableProduct"/>
        </actionGroup>

        <!-- Fill configurable product values -->
        <actionGroup ref="FillMainProductFormActionGroup" stepKey="fillConfigurableProductValues">
            <argument name="product" value="BaseConfigurableProduct"/>
        </actionGroup>

        <!-- Set Design settings for the product -->
        <actionGroup ref="AdminSetProductDesignSettingsActionGroup" stepKey="setProductDesignSettings"/>

        <!-- Set Gift Options settings for the product -->
        <actionGroup ref="AdminSwitchProductGiftMessageStatusActionGroup" stepKey="enableGiftMessageSettings">
            <argument name="status" value="1"/>
        </actionGroup>

        <!-- Save product form -->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="clickSaveButton"/>

        <!-- Open product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openStorefrontProductPage">
            <argument name="productUrl" value="{{BaseConfigurableProduct.urlKey}}"/>
        </actionGroup>

        <!-- Assert product design settings "left bar is present at product page with 2 columns" -->
        <seeElement selector="{{StorefrontProductPageDesignSection.layoutTwoColumnsLeft}}" stepKey="seeDesign"/>

        <!-- Assert Gift Option product settings is present -->
        <actionGroup ref="StorefrontAddProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="BaseConfigurableProduct"/>
            <argument name="productCount" value="1"/>
        </actionGroup>
        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="openShoppingCart"/>
        <actionGroup ref="StorefrontAssertGiftMessageFieldsActionGroup" stepKey="assertGiftMessageFieldsArePresent"/>

        <!-- Open created product -->
        <actionGroup ref="SearchForProductOnBackendActionGroup" stepKey="searchForCreatedProduct">
            <argument name="product" value="BaseConfigurableProduct"/>
        </actionGroup>
        <actionGroup ref="OpenEditProductOnBackendActionGroup" stepKey="openProduct">
            <argument name="product" value="BaseConfigurableProduct"/>
        </actionGroup>

        <!-- Edit product Search Engine Optimization settings -->
        <actionGroup ref="AdminChangeProductSEOSettingsActionGroup" stepKey="editProductSEOSettings">
            <argument name="productName" value="ApiConfigurableProduct.name"/>
        </actionGroup>

        <!-- Edit Design settings for the product -->
        <actionGroup ref="AdminSetProductDesignSettingsActionGroup" stepKey="editProductDesignSettings">
            <argument name="designSettings" value="simpleLumaDesignEmpty"/>
        </actionGroup>

        <!-- Edit Gift Option product settings -->
        <actionGroup ref="AdminSwitchProductGiftMessageStatusActionGroup" stepKey="disableGiftMessageSettings"/>

        <!-- Save product form -->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="clickSaveProduct"/>

        <!-- Verify Url Key after changing -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage">
            <argument name="productUrl" value="{{ApiConfigurableProduct.urlKey}}"/>
        </actionGroup>

        <!-- Assert product design settings "Layout empty" -->
        <seeElement selector="{{StorefrontProductPageDesignSection.layoutEmpty}}" stepKey="seeNewDesignChanges"/>

        <!-- Assert Gift Option product settings -->
        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="openCart"/>
        <dontSeeElement selector="{{StorefrontProductCartGiftOptionSection.giftOptions}}" stepKey="dontSeeGiftOptionBtn"/>

        <!-- Delete created configurable product -->
        <actionGroup ref="DeleteProductUsingProductGridActionGroup" stepKey="deleteProduct">
            <argument name="product" value="BaseConfigurableProduct"/>
        </actionGroup>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="clearFilters"/>
    </test>
</tests>
