<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="NewProductsListWidgetConfigurableProductTest" extends="NewProductsListWidgetTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="New products list widget"/>
            <title value="Admin should be able to set Configurable Product as new so that it shows up in the Catalog New Products List Widget"/>
            <description value="Admin should be able to set Configurable Product as new so that it shows up in the Catalog New Products List Widget"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-120"/>
            <group value="ConfigurableProduct"/>
            <group value="WYSIWYGDisabled"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>
        </before>

        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteConfigChildProduct2"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- A Cms page containing the New Products Widget gets created here via extends -->

        <!-- Modify the Configurable Product that we created in the before block -->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="amOnEditPage">
            <argument name="productId" value="$$createConfigProduct.id$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForEditPage"/>
        <actionGroup ref="AdminSetProductAsNewDateActionGroup" stepKey="fillProductNewFrom">
            <argument name="fromDate" value="01/1/2000"/>
            <argument name="toDate" value="01/1/2099"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillProductNewTo"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveProduct"/>

        <!-- If PageCache is enabled, Cache clearing happens here, via merge -->

        <!-- Check for product on the CMS page with the New Products widget -->
        <actionGroup ref="StorefrontGoToCMSPageActionGroup" stepKey="amOnCmsPage">
            <argument name="identifier" value="{{_newDefaultCmsPage.identifier}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForCmsPage"/>
        <actionGroup ref="AssertStorefrontProductIsShownOnCmsPageActionGroup" stepKey="seeProductName">
            <argument name="cmsTitle" value="{{_newDefaultCmsPage.title}}"/>
            <argument name="productName" value="$$createConfigProduct.name$$"/>
        </actionGroup>
    </test>
</tests>
