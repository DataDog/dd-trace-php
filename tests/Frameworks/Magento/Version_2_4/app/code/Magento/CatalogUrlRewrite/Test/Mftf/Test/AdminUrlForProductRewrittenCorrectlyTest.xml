<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminUrlForProductRewrittenCorrectlyTest">
        <annotations>
            <features value="CatalogUrlRewrite"/>
            <stories value="Url rewrites"/>
            <title value="Check that URL for product rewritten correctly"/>
            <description value="Check that URL for product rewritten correctly"/>
            <severity value="MAJOR"/>
            <testCaseId value="MAGETWO-97224"/>
            <useCaseId value="MAGETWO-64191"/>
            <group value="CatalogUrlRewrite"/>
        </annotations>

        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!--Create product-->
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
        </before>
        <after>
            <!--Delete created data-->
            <deleteData createDataKey="createProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>

            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!--Open Created product-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="amOnEditPage">
            <argument name="productId" value="$$createProduct.id$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForEditPage"/>

        <!--Switch to Default Store view-->
        <actionGroup ref="SwitchToTheNewStoreViewActionGroup" stepKey="selectSecondStoreView">
            <argument name="storeViewName" value="Default Store View"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForStoreViewLoad"/>

        <!--Set use default url-->
        <click selector="{{AdminProductSEOSection.sectionHeader}}" stepKey="clickOnSearchEngineOptimization"/>
        <waitForElementVisible selector="{{AdminProductSEOSection.useDefaultUrl}}" stepKey="waitForUseDefaultUrlCheckbox"/>
        <click selector="{{AdminProductSEOSection.useDefaultUrl}}" stepKey="clickUseDefaultUrlCheckbox"/>
        <fillField selector="{{AdminProductSEOSection.urlKeyInput}}" userInput="$$createProduct.sku$$-new" stepKey="changeUrlKey"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>

        <!--Select product and go toUpdate Attribute page-->
        <actionGroup ref="AdminProductCatalogPageOpenActionGroup" stepKey="goToCatalogPageChangingView"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterBundleProductOptionsDownToName">
            <argument name="product" value="ApiSimpleProduct"/>
        </actionGroup>
        <click selector="{{AdminProductFiltersSection.allCheckbox}}" stepKey="ClickOnSelectAllCheckBoxChangingView"/>
        <click selector="{{AdminProductGridSection.bulkActionDropdown}}" stepKey="clickActionDropdown"/>
        <click selector="{{AdminProductGridSection.bulkActionOption('Update attributes')}}" stepKey="clickBulkUpdate"/>
        <waitForPageLoad stepKey="waitForUpdateAttributesPageLoad"/>
        <seeInCurrentUrl url="{{ProductAttributesEditPage.url}}" stepKey="seeInUrlAttributeUpdatePage"/>
        <click selector="{{AdminUpdateAttributesWebsiteSection.website}}" stepKey="clickWebsiteTab"/>
        <waitForAjaxLoad stepKey="waitForLoadWebSiteTab"/>
        <click selector="{{AdminUpdateAttributesWebsiteSection.addProductToWebsite}}" stepKey="checkAddProductToWebsiteCheckbox"/>
        <click selector="{{AdminUpdateAttributesSection.saveButton}}" stepKey="clickSave"/>
        <see selector="{{AdminProductMessagesSection.successMessage}}" userInput="Message is added to queue" stepKey="seeSaveSuccess"/>

        <!-- Start message queue -->
        <actionGroup ref="CliConsumerStartActionGroup" stepKey="startMessageQueueConsumer">
            <argument name="consumerName" value="{{AdminProductAttributeWebsiteUpdateConsumerData.consumerName}}"/>
            <argument name="maxMessages" value="{{AdminProductAttributeWebsiteUpdateConsumerData.messageLimit}}"/>
        </actionGroup>
        <!-- Run cron -->
        <magentoCLI command="cron:run --group=index" stepKey="runCron"/>

        <!--Got to Store front product page and check url-->
        <amOnPage url="{{StorefrontProductPage.url($$createProduct.custom_attributes[url_key]$$-new)}}" stepKey="navigateToSimpleProductPage"/>
        <seeInCurrentUrl url="{{StorefrontProductPage.url($$createProduct.custom_attributes[url_key]$$-new)}}" stepKey="seeProductNewUrl"/>
    </test>
</tests>
