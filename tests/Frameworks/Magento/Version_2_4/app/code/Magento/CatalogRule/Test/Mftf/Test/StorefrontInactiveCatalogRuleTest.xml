<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontInactiveCatalogRuleTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Customer view catalog price rule"/>
            <title value="Customer should not see the catalog price rule promotion if status is inactive"/>
            <description value="Customer should not see the catalog price rule promotion if status is inactive"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-79"/>
            <group value="catalogRule"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminPanel"/>

            <actionGroup ref="AdminOpenNewCatalogPriceRuleFormPageActionGroup" stepKey="startCreatingFirstPriceRule"/>
            <actionGroup ref="AdminCatalogPriceRuleFillMainInfoActionGroup" stepKey="fillMainInfoForFirstPriceRule">
                <argument name="active" value="0"/>
                <argument name="groups" value="'NOT LOGGED IN'"/>
            </actionGroup>
            <actionGroup ref="AdminCatalogPriceRuleFillActionsActionGroup" stepKey="fillActionsForThirdPriceRule"/>
            <actionGroup ref="AdminCatalogPriceRuleSaveAndApplyActionGroup" stepKey="saveAndApplyFirstPriceRule"/>
            <comment userInput="Adding the comment to replace CliIndexerReindexActionGroup action group ('indexer:reindex' commands) for preserving Backward Compatibility" stepKey="reindex"/>
        </before>

        <after>
            <deleteData createDataKey="createProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <actionGroup ref="RemoveCatalogPriceRuleActionGroup" stepKey="deleteCatalogPriceRule">
                <argument name="ruleName" value="{{_defaultCatalogRule.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>

        <!-- Verify price is not discounted on category page -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="openCategoryPageOnFrontend">
            <argument name="category" value="$$createCategory$$"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForCategoryPageLoaded"/>
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="seeProductPriceOnCategoryPage">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="productPrice" value="$$createProduct.price$$"/>
        </actionGroup>

        <!-- Verify price is not discounted on the product page -->
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="openProductPageOnFrontend">
            <argument name="product" value="$createProduct$"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForProductPageLoaded"/>
        <actionGroup ref="StorefrontAssertProductPriceOnProductPageActionGroup" stepKey="seePriceOnProductPage">
            <argument name="productPrice" value="$createProduct.price$"/>
        </actionGroup>

        <!-- Verify price is not discounted in the cart -->
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addToCartFromStorefrontProductPage">
            <argument name="productName" value="$createProduct.name$"/>
        </actionGroup>
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="openCartPage" />
        <waitForElementVisible selector="{{CheckoutCartSummarySection.subtotal}}" stepKey="waitForSubtotalAppears"/>
        <actionGroup ref="AssertStorefrontCheckoutPaymentSummarySubtotalActionGroup" stepKey="seeProductPriceOnCartPage">
            <argument name="orderSubtotal" value="$createProduct.price$"/>
        </actionGroup>
    </test>
</tests>
