<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminDeleteCatalogPriceRuleTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Delete Catalog Price Rule"/>
            <title value="Admin should be able to delete catalog price rule"/>
            <description value="Admin should be able to delete catalog price rule"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-160"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <magentoCron stepKey="runCronIndex" groups="index"/>
            <!-- Login to Admin page -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!-- Create a configurable product -->
            <actionGroup ref="CreateConfigurableProductActionGroup" stepKey="createConfigurableProduct">
                <argument name="product" value="_defaultProduct"/>
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteConfigurableProduct">
                <argument name="sku" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearGridFiltersVirtual"/>
            <actionGroup ref="AdminGridFilterFillInputFieldActionGroup" stepKey="addSkuFilterVirtual">
                <argument name="filterInputName" value="sku"/>
                <argument name="filterValue" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminClickSearchInGridActionGroup" stepKey="applyGridFilterVirtual"/>
            <actionGroup ref="DeleteProductsIfTheyExistActionGroup" stepKey="deleteVirtualProducts">
                <argument name="sku" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearProductsGridFilters"/>
            <actionGroup ref="AdminDeleteProductAttributeByLabelActionGroup" stepKey="deleteProductAttribute">
                <argument name="productAttributeLabel" value="{{colorProductAttribute.default_label}}"/>
            </actionGroup>
            <actionGroup ref="AdminOpenCatalogPriceRulePageActionGroup" stepKey="goToCatalogRuleGridPage"/>
            <helper class="Magento\CatalogRule\Test\Mftf\Helper\CatalogPriceRuleHelper" method="deleteAllCatalogPriceRules" stepKey="deleteAllCatalogPriceRules">
                <argument name="firstNotEmptyRow">{{AdminCatalogPriceRuleGrid.firstNotEmptyRow}}</argument>
                <argument name="modalAcceptButton">{{AdminConfirmationModalSection.ok}}</argument>
                <argument name="deleteButton">{{AdminNewCatalogPriceRule.delete}}</argument>
                <argument name="successMessageContainer">{{AdminMessagesSection.success}}</argument>
                <argument name="successMessage">You deleted the rule.</argument>
            </helper>
            <!-- Reindex after deleting product attribute -->
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <comment userInput="BIC workaround" stepKey="waitForCatalogRuleGridPageLoaded"/>
            <actionGroup ref="ClearFiltersAdminDataGridActionGroup" stepKey="clearCatalogRuleGridFilters"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Create a catalog price rule -->
        <actionGroup ref="NewCatalogPriceRuleByUIActionGroup" stepKey="createNewPriceRule"/>
        <actionGroup ref="SelectNotLoggedInCustomerGroupActionGroup" stepKey="selectNotLoggedInCustomerGroup"/>
        <click selector="{{AdminNewCatalogPriceRule.saveAndApply}}" stepKey="saveAndApply"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the rule." stepKey="assertSuccess"/>

        <!-- Verify that category page shows the discount -->
        <amOnPage url="$$createCategory.custom_attributes[url_key]$$.html" stepKey="goToCategoryPage1"/>
        <see selector="{{StorefrontCategoryProductSection.ProductTitleByName(ApiSimpleProduct.name)}}" userInput="$$createSimpleProduct.name$$" stepKey="seeSimpleProduct1"/>
        <see selector="{{StorefrontCategoryProductSection.ProductPriceByName(ApiSimpleProduct.name)}}" userInput="$110.70" stepKey="seeSimpleProductDiscount1"/>
        <see selector="{{StorefrontCategoryProductSection.ProductTitleByName(_defaultProduct.name)}}" userInput="{{_defaultProduct.name}}" stepKey="seeConfigurableProduct1"/>
        <see selector="{{StorefrontCategoryProductSection.ProductPriceByName(_defaultProduct.name)}}" userInput="$0.90" stepKey="seeConfigurableProductDiscount1"/>

        <!-- Verify that the simple product page shows the discount -->
        <amOnPage url="$$createSimpleProduct.custom_attributes[url_key]$$.html" stepKey="goToSimpleProductPage1"/>
        <actionGroup ref="AssertStorefrontProductInfoMainProductNameActionGroup" stepKey="seeCorrectName1">
            <argument name="value" value="$$createSimpleProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductSkuOnProductPageActionGroup" stepKey="seeCorrectSku1">
            <argument name="productSku" value="$$createSimpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="$110.70" stepKey="seeCorrectPrice1"/>

        <!-- Verify that the configurable product page the catalog price rule discount -->
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="goToConfigurableProductPage1"/>
        <actionGroup ref="AssertStorefrontProductInfoMainProductNameActionGroup" stepKey="seeCorrectName2">
            <argument name="value" value="{{_defaultProduct.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductSkuOnProductPageActionGroup" stepKey="seeCorrectSku2">
            <argument name="productSku" value="{{_defaultProduct.sku}}"/>
        </actionGroup>
        <see selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="$0.90" stepKey="seeCorrectPrice2"/>

        <!-- Delete the rule -->
        <actionGroup ref="AdminOpenCatalogPriceRulePageActionGroup" stepKey="goToPriceRulePage"/>
        <actionGroup ref="deleteEntitySecondaryGrid" stepKey="deletePriceRule">
            <argument name="name" value="{{_defaultCatalogRule.name}}"/>
            <argument name="searchInput" value="{{AdminSecondaryGridSection.catalogRuleIdentifierSearch}}"/>
        </actionGroup>

        <!-- Apply and flush the cache -->
        <click selector="{{AdminCatalogPriceRuleGrid.applyRules}}" stepKey="clickApplyRules"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
            <argument name="indices" value="catalog_product_price"/>
        </actionGroup>
        <comment userInput="Adding the comment to replace CliCacheFlushActionGroup action group ('cache:flush' command) for preserving Backward Compatibility" stepKey="flushCache"/>

        <!-- Verify that category page shows the original prices -->
        <amOnPage url="$$createCategory.custom_attributes[url_key]$$.html" stepKey="goToCategoryPage2"/>
        <see selector="{{StorefrontCategoryProductSection.ProductTitleByName(ApiSimpleProduct.name)}}" userInput="$$createSimpleProduct.name$$" stepKey="seeSimpleProduct2"/>
        <see selector="{{StorefrontCategoryProductSection.ProductPriceByName(ApiSimpleProduct.name)}}" userInput="$123.00" stepKey="seeSimpleProductDiscount2"/>
        <see selector="{{StorefrontCategoryProductSection.ProductTitleByName(_defaultProduct.name)}}" userInput="{{_defaultProduct.name}}" stepKey="seeConfigurableProduct2"/>
        <see selector="{{StorefrontCategoryProductSection.ProductPriceByName(_defaultProduct.name)}}" userInput="$1.00" stepKey="seeConfigurableProductDiscount2"/>

        <!-- Verify that the simple product page shows the original price -->
        <amOnPage url="$$createSimpleProduct.custom_attributes[url_key]$$.html" stepKey="goToSimpleProductPage2"/>
        <actionGroup ref="AssertStorefrontProductInfoMainProductNameActionGroup" stepKey="seeCorrectName3">
            <argument name="value" value="$$createSimpleProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductSkuOnProductPageActionGroup" stepKey="seeCorrectSku3">
            <argument name="productSku" value="$$createSimpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="$123.00" stepKey="seeCorrectPrice3"/>

        <!-- Verify that the configurable product page shows the original price -->
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="goToConfigurableProductPage2"/>
        <actionGroup ref="AssertStorefrontProductInfoMainProductNameActionGroup" stepKey="seeCorrectName4">
            <argument name="value" value="{{_defaultProduct.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductSkuOnProductPageActionGroup" stepKey="seeCorrectSku4">
            <argument name="productSku" value="{{_defaultProduct.sku}}"/>
        </actionGroup>
        <see selector="{{StorefrontProductInfoMainSection.productPrice}}" userInput="$1.00" stepKey="seeCorrectPrice4"/>
    </test>
</tests>
