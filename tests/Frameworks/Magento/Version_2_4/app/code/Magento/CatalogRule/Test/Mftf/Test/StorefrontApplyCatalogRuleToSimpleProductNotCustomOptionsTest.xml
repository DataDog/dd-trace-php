<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontApplyCatalogRuleAsPercentageToSimpleProductNotCustomOptionsTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Apply catalog price rule"/>
            <title value="Catalog rule should not apply for custom option"/>
            <description value="Admin should be able to apply the catalog price rule to simple product. Custom options should not be affected"/>
            <severity value="CRITICAL"/>
            <testCaseId value="AC-6859"/>
            <useCaseId value="ACP2E-1206"/>
            <group value="catalogRule"/>
            <group value="catalog"/>
        </annotations>
        <before>
            <!-- Create category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>

            <!-- Create Simple Product -->
            <createData entity="_defaultProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
                <field key="price">56.78</field>
            </createData>

            <!-- Update all products to have custom options -->
            <updateData createDataKey="createProduct" entity="productWithFixedOptions" stepKey="updateProductWithOptions"/>

            <!-- Login as Admin -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!-- Clear all catalog price rules and reindex before test -->
            <actionGroup ref="AdminCatalogPriceRuleDeleteAllActionGroup" stepKey="deleteAllCatalogRulesBeforeTest"/>
            <magentoCron groups="index" stepKey="fixInvalidatedIndicesBeforeTest"/>
        </before>
        <after>
            <!-- Delete products and category -->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <!-- Delete the catalog price rule -->
            <actionGroup ref="AdminCatalogPriceRuleDeleteAllActionGroup" stepKey="deleteAllCatalogRulesAfterTest"/>
            <magentoCron groups="index" stepKey="fixInvalidatedIndicesAfter"/>
            <!-- Logout -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>
        <!-- Begin creating a new catalog price rule -->
        <actionGroup ref="AdminOpenNewCatalogPriceRuleFormPageActionGroup" stepKey="openNewCatalogPriceRulePage"/>
        <actionGroup ref="AdminCatalogPriceRuleFillMainInfoActionGroup" stepKey="fillMainInfoForCatalogPriceRule">
            <argument name="groups" value="'NOT LOGGED IN'"/>
        </actionGroup>
        <actionGroup ref="AdminFillCatalogRuleConditionActionGroup" stepKey="fillConditionsForCatalogPriceRule">
            <argument name="conditionValue" value="$createCategory.id$"/>
        </actionGroup>
        <actionGroup ref="AdminCatalogPriceRuleFillActionsActionGroup" stepKey="fillActionsForCatalogPriceRule">
            <argument name="apply" value="by_percent"/>
            <argument name="discountAmount" value="12.3"/>
        </actionGroup>
        <actionGroup ref="AdminCatalogPriceRuleSaveAndApplyActionGroup" stepKey="saveAndApplyCatalogPriceRule"/>

        <!-- Navigate to category on store front -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="goToStorefrontCategoryPage">
            <argument name="category" value="$createCategory$"/>
        </actionGroup>

        <!-- Check product name on store front category page -->
        <actionGroup ref="AssertProductDetailsOnStorefrontActionGroup" stepKey="assertStorefrontProductName">
            <argument name="productInfo" value="$createProduct.name$"/>
            <argument name="productNumber" value="1"/>
        </actionGroup>

        <!-- Check product price on store front category page -->
        <actionGroup ref="AssertProductDetailsOnStorefrontActionGroup" stepKey="assertStorefrontProductPrice">
            <argument name="productInfo" value="$49.80"/>
            <argument name="productNumber" value="1"/>
        </actionGroup>

        <!-- Check product regular price on store front category page -->
        <actionGroup ref="AssertProductDetailsOnStorefrontActionGroup" stepKey="assertStorefrontProductRegularPrice">
            <argument name="productInfo" value="$56.78"/>
            <argument name="productNumber" value="1"/>
        </actionGroup>

        <!-- Navigate to product on store front -->
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="goToProductPage">
            <argument name="productUrlKey" value="$createProduct.custom_attributes[url_key]$"/>
        </actionGroup>

        <!-- Assert regular and special price after selecting ProductOptionValueDropdown1 -->
        <actionGroup ref="StorefrontSelectCustomOptionRadioAndAssertPricesActionGroup" stepKey="storefrontSelectCustomOptionAndAssertPrices">
            <argument name="customOption" value="ProductOptionRadioButton2"/>
            <argument name="customOptionValue" value="ProductOptionValueRadioButtons1"/>
            <argument name="productPrice" value="$156.77"/>
            <argument name="productFinalPrice" value="$149.79"/>
        </actionGroup>

        <!-- Add product 1 to cart -->
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addToCartFromStorefrontProductPage">
            <argument name="productName" value="$createProduct.name$"/>
        </actionGroup>

        <!-- Assert sub total on mini shopping cart -->
        <actionGroup ref="AssertSubTotalOnStorefrontMiniCartActionGroup" stepKey="assertSubTotalOnStorefrontMiniCart">
            <argument name="subTotal" value="$149.79"/>
        </actionGroup>
    </test>
</tests>
