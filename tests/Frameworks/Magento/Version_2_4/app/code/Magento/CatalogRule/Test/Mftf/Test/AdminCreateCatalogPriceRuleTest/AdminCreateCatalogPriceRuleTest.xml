<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCatalogPriceRuleTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Create catalog price rule"/>
            <title value="Admin create and apply catalog price rule"/>
            <description value="Admin create and apply catalog price rule"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-26702"/>
            <group value="CatalogRule"/>
        </annotations>
        <before>
            <!--Login as admin -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>

            <!-- Create Simple Product 1 -->
            <createData entity="_defaultCategory" stepKey="createCategory1"/>
            <createData entity="_defaultProduct" stepKey="createProduct1">
                <requiredEntity createDataKey="createCategory1"/>
                <field key="price">100.00</field>
            </createData>

            <!-- Create Simple Product 2 -->
            <createData entity="SimpleSubCategory" stepKey="createCategory2"/>
            <createData entity="_defaultProduct" stepKey="createProduct2">
                <requiredEntity createDataKey="createCategory2"/>
                <field key="price">100.00</field>
            </createData>

            <magentoCron groups="index" stepKey="fixInvalidatedIndicesBeforeTest"/>
        </before>
        <after>
            <!-- Delete products and category -->
            <deleteData createDataKey="createProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="createCategory1" stepKey="deleteCategory1"/>

            <!-- Delete products and category -->
            <deleteData createDataKey="createProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="createCategory2" stepKey="deleteCategory2"/>

            <actionGroup ref="AdminCatalogPriceRuleDeleteAllActionGroup" stepKey="deleteAllCatalogPriceRule"/>
            <!-- Logout -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Goto Marketing > Catalog Price Rule -->
        <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToMarketingCatalogPriceRule">
            <argument name="menuUiId" value="magento-backend-marketing"/>
            <argument name="submenuUiId" value="magento-catalogrule-promo-catalog"/>
        </actionGroup>

        <click selector="{{AdminGridMainControls.add}}" stepKey="addNewRule"/>
        <waitForPageLoad stepKey="waitForIndividualRulePage"/>
        <!-- Add a new Catalog Price Rule -->
        <actionGroup ref="AdminCatalogPriceRuleFillMainInfoActionGroup" stepKey="fillMainInfoForFirstPriceRule">
            <argument name="name" value="TestCatalogPriceRule"/>
            <argument name="groups" value="'NOT LOGGED IN'"/>
        </actionGroup>
        <!-- Fill Conditions of Catalog Price Rule -->
        <actionGroup ref="AdminFillCatalogRuleConditionActionGroup" stepKey="createCatalogPriceRule">
            <argument name="conditionValue" value="$createCategory1.id$"/>
        </actionGroup>
        <!-- Fill Actions of Catalog Price Rule -->
        <actionGroup ref="AdminCatalogPriceRuleFillActionsActionGroup" stepKey="fillActionsForCatalogPriceRule"/>

        <actionGroup ref="AdminCatalogPriceRuleSaveAndApplyActionGroup" stepKey="saveAndApplyCatalogPriceRule"/>

        <!-- Go to storefront home page -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToHomepage"/>

        <!-- Navigate to category on store front -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="goToStorefrontCategoryPage1">
            <argument name="category" value="$createCategory1$"/>
        </actionGroup>

        <!-- Check product 1 price on store front category page -->
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="assertStorefrontProduct1Price">
            <argument name="productName" value="$createProduct1.name$"/>
            <argument name="productPrice" value="$90.00"/>
        </actionGroup>

        <!-- Check product 1 regular price on store front category page -->
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="assertStorefrontProduct1RegularPrice">
            <argument name="productName" value="$createProduct1.name$"/>
            <argument name="productPrice" value="$100.00"/>
        </actionGroup>

        <!-- Navigate to category2 on store front -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="goToStorefrontCategoryPage2">
            <argument name="category" value="$createCategory2$"/>
        </actionGroup>

        <!-- Check product 2 price on store front category page -->
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="assertStorefrontProduct2Price">
            <argument name="productName" value="$createProduct2.name$"/>
            <argument name="productPrice" value="$100.00"/>
        </actionGroup>

        <!-- Navigate to product 1 on store front on product page -->
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="goToProduct1Page">
            <argument name="productUrlKey" value="$createProduct1.custom_attributes[url_key]$"/>
        </actionGroup>

        <!-- Verify price for simple product 1 on product page -->
        <actionGroup ref="AssertStorefrontProductPricesActionGroup" stepKey="assertFirstSimpleProductPrices">
            <argument name="productPrice" value="$createProduct1.price$"/>
            <argument name="productFinalPrice" value="$90.00"/>
        </actionGroup>

        <!-- Navigate to product 2 on store front on product page -->
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="goToProduct2Page">
            <argument name="productUrlKey" value="$createProduct2.custom_attributes[url_key]$"/>
        </actionGroup>

        <!-- Verify price for simple product 2 on product page -->
        <actionGroup ref="AssertStorefrontProductPricesActionGroup" stepKey="assertSecondSimpleProductPrices">
            <argument name="productPrice" value="$createProduct2.price$"/>
            <argument name="productFinalPrice" value="$100.00"/>
        </actionGroup>

    </test>
</tests>
