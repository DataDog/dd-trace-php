<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCatalogPriceRuleForCustomerGroupTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Apply catalog price rule"/>
            <title value="Admin should be able to apply the catalog rule by customer group"/>
            <description value="Admin should be able to apply the catalog rule by customer group"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-71"/>
            <group value="CatalogRule"/>
        </annotations>

        <before>
            <!-- Create a simple product and a category-->
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCatalogPriceRuleDeleteAllActionGroup" stepKey="deleteAllCatalogPriceRule"/>
            <comment userInput="Adding the comment to replace AdminReindexAndFlushCache action group ('indexer:reindex', 'cache:flush' commands) for preserving Backward Compatibility" stepKey="reindexAndFlushCache"/>
        </before>

        <after>
            <!-- Delete the simple product and category -->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <actionGroup ref="AdminCatalogPriceRuleDeleteAllActionGroup" stepKey="deleteAllCatalogPriceRule"/>
            <actionGroup ref="DeleteCustomerByEmailActionGroup" stepKey="deleteCustomer">
                <argument name="email" value="{{CustomerEntityOne.email}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetGrid"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Create a catalog rule for the NOT LOGGED IN customer group -->
        <actionGroup ref="NewCatalogPriceRuleByUIActionGroup" stepKey="createNewPriceRule"/>
        <actionGroup ref="SelectNotLoggedInCustomerGroupActionGroup" stepKey="selectNotLoggedInCustomerGroup"/>
        <conditionalClick selector="{{AdminNewCatalogPriceRule.active}}" dependentSelector="{{AdminNewCatalogPriceRule.activeIsEnabled}}" visible="false" stepKey="enableActiveBtn"/>
        <click selector="{{AdminNewCatalogPriceRule.saveAndApply}}" stepKey="saveAndApply"/>

        <!--<click selector="{{AdminNewCatalogPriceRule.saveAndApply}}" stepKey="saveAndApply"/>-->
        <actionGroup ref="AssertMessageInAdminPanelActionGroup" stepKey="assertSuccess">
            <argument name="message" value="You saved the rule."/>
        </actionGroup>

        <comment userInput="Adding the comment to replace CliIndexerReindexActionGroup action group ('indexer:reindex' commands) for preserving Backward Compatibility" stepKey="reindex"/>
        <comment userInput="Adding the comment to replace CliCacheFlushActionGroup action group ('cache:flush' command) for preserving Backward Compatibility" stepKey="flushCache"/>

        <!-- As a NOT LOGGED IN user, go to the storefront category page and should see the discount -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="goToCategory1">
            <argument name="category" value="$createCategory$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="seeProduct1">
            <argument name="productName" value="$$createProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="seeDiscountedPrice1">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="productPrice" value="$110.70"/>
        </actionGroup>

        <!-- Create a user account -->
        <actionGroup ref="StorefrontOpenCustomerAccountCreatePageActionGroup" stepKey="openCreateAccountPage"/>
        <actionGroup ref="StorefrontFillCustomerAccountCreationFormActionGroup" stepKey="fillCreateAccountForm">
            <argument name="customer" value="CustomerEntityOne"/>
        </actionGroup>
        <actionGroup ref="StorefrontClickCreateAnAccountCustomerAccountCreationFormActionGroup" stepKey="submitCreateAccountForm"/>
        <actionGroup ref="AssertMessageCustomerCreateAccountActionGroup" stepKey="seeSuccessMessage">
            <argument name="messageType" value="success"/>
            <argument name="message" value="Thank you for registering with Main Website Store."/>
        </actionGroup>

        <!-- As a logged in user, go to the storefront category page and should NOT see discount -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="goToCategory2">
            <argument name="category" value="$createCategory$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="seeProduct2">
            <argument name="productName" value="$$createProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProductPriceOnCategoryPageActionGroup" stepKey="seeDiscountedPrice2">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="productPrice" value="$123.00"/>
        </actionGroup>
    </test>
</tests>
