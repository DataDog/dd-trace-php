<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontGuestCheckoutWithCouponAndZeroSubtotalTest">
        <annotations>
            <stories value="Checkout"/>
            <title value="Verify guest checkout with virtual product using coupon for not logged in customers with Zero Subtotal"/>
            <description value="Checkout with virtual product using coupon for not logged in customers with Zero Subtotal"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14710"/>
            <group value="mtf_migrated"/>
            <group value="guest_checkout"/>
        </annotations>

        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminPanel"/>
            <createData entity="VirtualProduct" stepKey="virtualProduct">
                <field key="price">50.00</field>
            </createData>
            <createData entity="SalesRuleNoCouponWithFixedDiscount" stepKey="createSalesRule"/>
        </before>
        <after>
            <deleteData createDataKey="virtualProduct" stepKey="deleteVirtualProduct"/>
            <deleteData createDataKey="createSalesRule" stepKey="deleteSalesRule"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!--Open Product page in StoreFront and assert product and price range -->
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPageByCustomAttributeUrlKeyActionGroup" stepKey="openVirtualProductPageAndVerifyProduct">
            <argument name="product" value="$$virtualProduct$$"/>
        </actionGroup>

        <!-- Add Product to the cart -->
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addProduct1ToTheCart">
            <argument name="productName" value="$$virtualProduct.name$$"/>
        </actionGroup>

        <!--Open View and edit -->
        <actionGroup ref="ClickViewAndEditCartFromMiniCartActionGroup" stepKey="clickMiniCart"/>

        <!-- Fill the Estimate Shipping and Tax section -->
        <actionGroup ref="CheckoutFillEstimateShippingAndTaxActionGroup" stepKey="fillEstimateShippingAndTaxFields"/>

        <!-- Assert Discount and proceed to checkout -->
        <comment userInput="Adding the comment to replace action for preserving Backward Compatibility" stepKey="waitForDiscountElement"/>
        <actionGroup ref="AssertStorefrontCartDiscountActionGroup" stepKey="seeDiscountTotal">
            <argument name="discount" value="50.00"/>
        </actionGroup>
        <actionGroup ref="StorefrontClickProceedToCheckoutActionGroup" stepKey="goToCheckout"/>
        <comment userInput="Adding the comment to replace waitForPageToLoad action for preserving Backward Compatibility" stepKey="waitForPageToLoad"/>

        <!--Fill Customer Information -->
        <fillField selector="{{CheckoutShippingSection.emailAddress}}" userInput="{{Simple_US_Customer.email}}" stepKey="enterEmail"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading" />
        <fillField selector="{{CheckoutPaymentSection.guestFirstName}}" userInput="{{Simple_US_Customer.firstname}}" stepKey="enterFirstName"/>
        <fillField selector="{{CheckoutPaymentSection.guestLastName}}" userInput="{{Simple_US_Customer.lastname}}" stepKey="enterLastName"/>
        <fillField selector="{{CheckoutPaymentSection.guestStreet}}" userInput="{{US_Address_TX.street[0]}}" stepKey="enterStreet"/>
        <fillField selector="{{CheckoutPaymentSection.guestCity}}" userInput="{{US_Address_TX.city}}" stepKey="enterCity"/>
        <selectOption selector="{{CheckoutPaymentSection.guestRegion}}" userInput="{{US_Address_TX.state}}" stepKey="selectRegion"/>
        <fillField selector="{{CheckoutPaymentSection.guestPostcode}}" userInput="{{US_Address_TX.postcode}}" stepKey="enterPostcode"/>
        <fillField selector="{{CheckoutPaymentSection.guestTelephone}}" userInput="{{US_Address_TX.telephone}}" stepKey="enterTelephone"/>
        <waitForElementVisible selector="{{CheckoutPaymentSection.update}}" stepKey="waitForUpdateButton"/>
        <click selector="{{CheckoutPaymentSection.update}}" stepKey="clickOnUpdateButton"/>

        <!-- Place order and Assert success message -->
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="clickOnPlaceOrder"/>

        <!-- Assert empty Mini Cart -->
        <seeElement selector="{{StorefrontMinicartSection.emptyMiniCart}}"  stepKey="assertEmptyCart" />
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumberWithoutLink}}" stepKey="orderId"/>

        <!-- Open Order Index Page -->
        <actionGroup ref="AdminOrdersPageOpenActionGroup" stepKey="goToOrders"/>

        <!-- Filter Order using orderId and assert order-->
        <actionGroup ref="FilterOrderGridByIdActionGroup" stepKey="filterOrderGridById">
            <argument name="orderId" value="$orderId"/>
        </actionGroup>
        <click selector="{{AdminOrdersGridSection.viewLink('$orderId')}}" stepKey="clickOnViewLink"/>
        <waitForPageLoad stepKey="waitForOrderPageToLoad"/>

        <!-- Assert order buttons -->
        <actionGroup ref="AdminAssertOrderAvailableButtonsActionGroup" stepKey="assertOrderButtons"/>

        <!-- Assert Grand Total -->
        <see selector="{{AdminOrderTotalSection.grandTotal}}" userInput="$0.00" stepKey="seeGrandTotal"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Pending" stepKey="seeOrderStatus"/>
    </test>
</tests>
