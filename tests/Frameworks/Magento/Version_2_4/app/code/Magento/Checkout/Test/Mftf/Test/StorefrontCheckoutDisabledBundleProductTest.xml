<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCheckoutDisabledBundleProductTest">
        <annotations>
            <features value="Checkout"/>
            <stories value="Disabled bundle product is preventing customer to checkout for the first attempt"/>
            <title value="Customer should be able to checkout if there is at least one available product in the cart"/>
            <description value="Customer should be able to checkout if there is at least one available product in the cart"/>
            <severity value="MINOR"/>
            <testCaseId value="MC-29105"/>
            <group value="checkout"/>
        </annotations>

        <before>
            <!-- Create category and simple product -->
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!-- Create bundle product -->
            <createData entity="ApiBundleProductPriceViewRange" stepKey="createBundleDynamicProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="DropDownBundleOption" stepKey="bundleOption">
                <requiredEntity createDataKey="createBundleDynamicProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="createNewBundleLink">
                <requiredEntity createDataKey="createBundleDynamicProduct"/>
                <requiredEntity createDataKey="bundleOption"/>
                <requiredEntity createDataKey="createSimpleProduct"/>
            </createData>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <comment userInput="Adding the comment to replace CliCacheFlushActionGroup action group ('cache:flush' command) for preserving Backward Compatibility" stepKey="flushCache"/>
        </before>
        <after>
            <!-- Delete category -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <!-- Delete bundle product data -->
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createBundleDynamicProduct" stepKey="deleteBundleProduct"/>
        </after>
        <!-- Add simple product to the cart -->
        <actionGroup ref="AddSimpleProductToCartActionGroup" stepKey="cartAddSimpleProductToCart">
            <argument name="product" value="$$createSimpleProduct$$"/>
            <argument name="productCount" value="1"/>
        </actionGroup>
        <!-- Go to bundle product page -->
        <amOnPage url="{{StorefrontProductPage.url($$createBundleDynamicProduct.custom_attributes[url_key]$$)}}" stepKey="navigateToProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <!-- Add bundle product to the cart -->
        <actionGroup ref="StorefrontSelectCustomizeAndAddToTheCartButtonActionGroup" stepKey="clickCustomizeAndAddToCart"/>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addProductToCart">
            <argument name="productName" value="$$createBundleDynamicProduct.name$$"/>
        </actionGroup>
        <!-- Login to admin panel -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        <!-- Find the first simple product that we just created using the product grid and go to its page-->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="visitAdminProductPage"/>
        <!-- Disabled bundle product from grid -->
        <actionGroup ref="ChangeStatusProductUsingProductGridActionGroup" stepKey="disabledProductFromGrid">
            <argument name="product" value="$$createBundleDynamicProduct$$"/>
            <argument name="status" value="Disable"/>
        </actionGroup>
        <closeTab stepKey="closeTab"/>
        <!-- Go to cart page-->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="openCartPage"/>
        <!-- Assert checkout button exists on the page-->
        <seeElement selector="{{CheckoutCartSummarySection.proceedToCheckout}}" stepKey="seeCheckoutButton"/>
        <!-- Assert no error message is not shown on the page-->
        <dontSee userInput="Some of the products are out of stock." stepKey="seeNoItemsInShoppingCart"/>
    </test>
</tests>
