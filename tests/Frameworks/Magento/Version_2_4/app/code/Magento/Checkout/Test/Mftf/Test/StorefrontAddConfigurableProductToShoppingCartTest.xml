<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontAddConfigurableProductToShoppingCartTest">
        <annotations>
            <stories value="Shopping Cart"/>
            <title value="Create configurable product with three options and add configurable product to the cart"/>
            <description value="Create configurable product with three options and add configurable product to the cart"/>
            <testCaseId value="MC-14716"/>
            <severity value="CRITICAL"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRate"/>
            <magentoCLI command="config:set {{EnableFlatRateDefaultPriceConfigData.path}} {{EnableFlatRateDefaultPriceConfigData.value}}" stepKey="enableFlatRatePrice"/>
            <magentoCLI command="config:set {{EnableFlatRateToAllAllowedCountriesConfigData.path}} {{EnableFlatRateToAllAllowedCountriesConfigData.value}}" stepKey="allowFlatRateToAllCountries"/>
            <createData entity="FreeShippinMethodDefault" stepKey="disableFreeShipping"/>

            <!-- Create Default Category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>

            <!-- Create an attribute with three options to be used in the first child product -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the attribute just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Get the first option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the second option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the third option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="3" stepKey="getConfigAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Create Configurable product -->
            <createData entity="BaseConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <field key="price">10.00</field>
            </createData>

            <!--Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <field key="price">20.00</field>
            </createData>

            <!--Create a simple product and give it the attribute with the Third option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
                <field key="price">30.00</field>
            </createData>

            <!-- Create the configurable product -->
            <createData entity="ConfigurableProductThreeOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
            </createData>

            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>

            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>

            <!-- Add the third simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild3">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct3"/>
            </createData>
            <comment userInput="Adding the comment to replace CliIndexerReindexActionGroup action group ('indexer:reindex' commands) for preserving Backward Compatibility" stepKey="reindex"/>
            <comment userInput="Adding the comment to replace CliCacheFlushActionGroup action group ('cache:flush' command) for preserving Backward Compatibility" stepKey="flushCache"/>
        </before>
        <after>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createConfigChildProduct3" stepKey="deleteSimpleProduct3"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteProductAttribute"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Add Configurable Product to the cart -->
        <actionGroup ref="StorefrontAddConfigurableProductToTheCartActionGroup" stepKey="addConfigurableProductToCart">
            <argument name="urlKey" value="$$createConfigProduct.custom_attributes[url_key]$$" />
            <argument name="productAttribute" value="$$createConfigProductAttribute.default_value$$"/>
            <argument name="productOption" value="$$getConfigAttributeOption2.label$$"/>
            <argument name="qty" value="2"/>
        </actionGroup>

        <!-- Select Mini Cart and select 'View And Edit Cart' -->
        <actionGroup ref="ClickViewAndEditCartFromMiniCartActionGroup" stepKey="selectViewAndEditCart"/>

        <!--Assert Shopping Cart Summary -->
        <actionGroup ref="AssertStorefrontShoppingCartSummaryWithShippingActionGroup" stepKey="AssertCartSummary" >
            <argument name="subtotal" value="$40.00"/>
            <argument name="shipping" value="10.00"/>
            <argument name="total" value="50.00"/>
        </actionGroup>

        <!--Assert Product Details In Checkout cart -->
        <actionGroup ref="AssertStorefrontCheckoutCartItemsActionGroup" stepKey="assertProductItemInCheckOutCart">
            <argument name="productName" value="$$createConfigProduct.name$$"/>
            <argument name="productSku" value="$$createConfigChildProduct2.sku$$"/>
            <argument name="productPrice" value="$$createConfigChildProduct2.price$$"/>
            <argument name="subtotal" value="$40.00" />
            <argument name="qty" value="2"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontElementVisibleActionGroup" stepKey="seeProductOptionInCart">
            <argument name="selector" value="{{CheckoutCartProductSection.productOptionLabel}}"/>
            <argument name="userInput" value="$$getConfigAttributeOption2.label$$"/>
        </actionGroup>

        <!-- Assert product details in Mini Cart -->
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="clickOnMiniCart"/>
        <actionGroup ref="AssertStorefrontMiniCartItemsActionGroup" stepKey="assertMiniCart">
            <argument name="productName" value="$$createConfigProduct.name$$"/>
            <argument name="productPrice" value="$$createConfigChildProduct2.price$$"/>
            <argument name="cartSubtotal" value="$40.00" />
            <argument name="qty" value="2"/>
        </actionGroup>
    </test>
</tests>
