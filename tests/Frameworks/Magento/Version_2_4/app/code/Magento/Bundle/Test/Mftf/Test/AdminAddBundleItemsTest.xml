<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminAddBundleItemsTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Create/Edit bundle product in Admin"/>
            <title value="Admin should be able to add/edit bundle items when creating/editing a bundle product"/>
            <description value="Admin should be able to add/edit bundle items when creating/editing a bundle product"/>
            <severity value="BLOCKER"/>
            <testCaseId value="MC-223"/>
            <group value="Bundle"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct0"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct3"/>
            <magentoCron stepKey="runCronIndex" groups="index"/>
            <actionGroup stepKey="loginToAdminPanel" ref="AdminLoginActionGroup"/>
        </before>
        <after>
            <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>
            <deleteData createDataKey="simpleProduct0" stepKey="deleteSimpleProduct0"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="simpleProduct3" stepKey="deleteSimpleProduct3"/>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteBundleProductBySku">
                <argument name="sku" value="{{BundleProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilters"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <actionGroup ref="AdminOpenCreateBundleProductPageActionGroup" stepKey="goToBundleProductCreationPage"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductCreatePageToLoad"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="conditionallyOpenSectionBundleItems"/>
        <actionGroup ref="AdminClickAddOptionOnBundleProductEditPageActionGroup" stepKey="clickAddOption3"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleOptions"/>
        <actionGroup ref="AdminFillBundleOptionTitleActionGroup" stepKey="fillOptionTitle">
            <argument name="optionTitle" value="{{BundleProduct.optionTitle1}}"/>
        </actionGroup>
        <actionGroup ref="AdminFillBundleOptionTypeActionGroup" stepKey="selectInputType"/>
        <actionGroup ref="AdminClickAddProductToOptionByOptionIndexActionGroup" stepKey="clickAddProductsToOption"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions">
            <argument name="product" value="$$simpleProduct0$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions2">
            <argument name="product" value="$$simpleProduct1$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow2"/>
        <actionGroup ref="AdminClickAddSelectedProductsOnAddProductsToOptionPanelActionGroup" stepKey="clickAddSelectedBundleProducts"/>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" stepKey="grabbedFirstBundleOptionQuantity"/>
        <assertEquals stepKey="assertFirstBundleOptionDefaultQuantity">
            <expectedResult type="string">1</expectedResult>
            <actualResult type="string">$grabbedFirstBundleOptionQuantity</actualResult>
        </assertEquals>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '1')}}" stepKey="grabbedSecondBundleOptionQuantity"/>
        <assertEquals stepKey="assertSecondBundleOptionDefaultQuantity">
            <expectedResult type="string">1</expectedResult>
            <actualResult type="string">$grabbedSecondBundleOptionQuantity</actualResult>
        </assertEquals>
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProductDefaultQty1">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="0"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProductDefaultQty2">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="1"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>
        <actionGroup ref="AncillaryPrepBundleProductActionGroup" stepKey="createBundledProductForTwoSimpleProducts">
            <argument name="bundleProduct" value="BundleProduct"/>
        </actionGroup>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButton"/>
        <actionGroup ref="AssertMessageInAdminPanelActionGroup" stepKey="messageYouSavedTheProductIsShown">
            <argument name="message" value="You saved the product."/>
        </actionGroup>

        <scrollToTopOfPage stepKey="scroll"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems2"/>
        <seeElement stepKey="LookingForBundleItemPresence" selector="{{AdminProductFormBundleSection.listedBundleItem}}"/>
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="GoToProductPage">
            <argument name="productUrlKey" value="{{BundleProduct.urlKey}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductPageToLoad"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="LookingForAbilityToAddOptions"/>

        <actionGroup ref="StorefrontSelectCustomizeAndAddToTheCartButtonActionGroup" stepKey="clickButtonToCustomize"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitCustomizationDropDown"/>
        <seeElement selector="{{StorefrontBundledSection.customizableBundleItemOption}}" stepKey="seeBundleItem"/>

        <actionGroup ref="AdminOpenCatalogProductPageActionGroup" stepKey="goToCatalogProductPage"/>
        <actionGroup ref="AdminClearFiltersActionGroup" stepKey="ClickOnButtonToRemoveFiltersIfPresent"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="WaitForClear"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterBundleProductOptionsDownToName">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>
        <actionGroup ref="OpenProductForEditByClickingRowXColumnYInProductGridActionGroup" stepKey="clickOnBundleProductToEdit"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="conditionallyOpenSectionBundleItemsToEdit"/>
        <actionGroup ref="AdminClickAddOptionOnBundleProductEditPageActionGroup" stepKey="clickAddOption"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleOptionsToAppear"/>
        <actionGroup ref="AdminFillBundleOptionTitleActionGroup" stepKey="fillNewestOptionTitle">
            <argument name="optionTitle" value="{{BundleProduct.optionTitle1}}_new"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="AdminFillBundleOptionTypeActionGroup" stepKey="selectNewInputType">
            <argument name="optionIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="AdminClickAddProductToOptionByOptionIndexActionGroup" stepKey="clickAddProductsToNewOption">
            <argument name="optionIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterNewBundleProductOptions">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectNewFirstGridRow"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterNewBundleProductOptions2">
            <argument name="product" value="$$simpleProduct3$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectNewFirstGridRow2"/>
        <actionGroup ref="AdminClickAddSelectedProductsOnAddProductsToOptionPanelActionGroup" stepKey="clickAddNewSelectedBundleProducts"/>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" stepKey="grabbedFirstBundleOptionQuantityAfterUserInput"/>
        <assertEquals stepKey="assertFirstBundleOptionDefaultQuantityAfterUserInput">
            <expectedResult type="string">{{BundleProduct.defaultQuantity}}</expectedResult>
            <actualResult type="string">$grabbedFirstBundleOptionQuantityAfterUserInput</actualResult>
        </assertEquals>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '1')}}" stepKey="grabbedSecondBundleOptionQuantityAfterUserInput"/>
        <assertEquals stepKey="assertSecondBundleOptionDefaultQuantityAfterUserInput">
            <expectedResult type="string">{{BundleProduct.defaultQuantity}}</expectedResult>
            <actualResult type="string">$grabbedSecondBundleOptionQuantityAfterUserInput</actualResult>
        </assertEquals>
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillNewProductDefaultQty1">
            <argument name="optionIndex" value="1"/>
            <argument name="productIndex" value="0"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillNewProductDefaultQty2">
            <argument name="optionIndex" value="1"/>
            <argument name="productIndex" value="1"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButtonAgain"/>
        <see userInput="You saved the product." stepKey="messageYouSavedTheProductIsShownAgain"/>
        <scrollToTopOfPage stepKey="scrollAgain"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="conditionallyOpenNewSectionBundleItems2"/>
        <see userInput="$$simpleProduct2.sku$$" selector="{{AdminProductFormBundleSection.bundleItem}}" stepKey="LookingForNewBundleItemPresence"/>

        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="GoToProductPageAgain">
            <argument name="productUrlKey" value="{{BundleProduct.urlKey}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductPageToLoadAgain"/>
        <actionGroup ref="StorefrontSelectCustomizeAndAddToTheCartButtonActionGroup" stepKey="LookingForAbilityToAddBothOptions"/>
        <actionGroup ref="StorefrontSelectCustomizeAndAddToTheCartButtonActionGroup" stepKey="clickButtonAgainToCustomize"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBothCustomizationDropDown"/>
        <seeElement selector="{{StorefrontBundledSection.customizableBundleItemOption2}}" stepKey="seeBundleItems"/>
    </test>
</tests>
