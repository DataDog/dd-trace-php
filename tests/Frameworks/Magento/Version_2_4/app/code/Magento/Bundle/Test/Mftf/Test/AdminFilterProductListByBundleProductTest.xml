<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminFilterProductListByBundleProductTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Admin list bundle products"/>
            <title value="Admin should be able to filter product list by type = Bundle Product"/>
            <description value="Admin should be able to filter product list by type = Bundle Product"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-214"/>
            <group value="Bundle"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
            <magentoCron stepKey="runCronIndex" groups="index"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
        </after>

        <!--Create bundle product-->
        <actionGroup ref="AdminOpenNewProductFormPageActionGroup" stepKey="goToBundleProductCreationPage">
            <argument name="attributeSetId" value="{{BundleProduct.set}}"/>
            <argument name="productType" value="{{BundleProduct.type}}"/>
        </actionGroup>

        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductCreationPage"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems"/>
        <click selector="{{AdminProductFormBundleSection.addOption}}" stepKey="clickAddOption3"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" stepKey="waitForBundleOptions"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" userInput="{{BundleProduct.optionTitle1}}" stepKey="fillOptionTitle"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundleOptionXInputType('0')}}" userInput="{{BundleProduct.optionInputType1}}" stepKey="selectInputType"/>
        <actionGroup ref="AdminClickAddProductToOptionActionGroup" stepKey="clickAddProductsToOption"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions">
            <argument name="product" value="$$simpleProduct1$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions2">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow2"/>
        <click selector="{{AdminAddProductsToOptionPanel.addSelectedProducts}}" stepKey="clickAddSelectedBundleProducts"/>
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProductDefaultQty1">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="0"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>

        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProductDefaultQty2">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="1"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>

        <!--Fill out ancillary data on bundle product-->
        <actionGroup ref="AncillaryPrepBundleProductActionGroup" stepKey="createBundledProductForTwoSimpleProducts"/>

        <!--Save the product-->
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButton"/>
        <seeElement selector="{{AdminCategoryMessagesSection.SuccessMessage}}" stepKey="messageYouSavedTheProductIsShown"/>

        <!--Apply Bundle Product Filter-->
        <!--Clear Filters-->
        <actionGroup ref="AdminClearFiltersActionGroup" stepKey="ClearFilters"/>

        <!--Setting filter-->
        <actionGroup ref="BundleProductFilter" stepKey="FilterForOnlyBundleProducts"/>

        <!--Testing application of filter-->
        <see selector="{{AdminProductFiltersSection.productType('0')}}" userInput="Bundle Product" stepKey="correcType0"/>
        <dontSeeElement selector="{{AdminProductFiltersSection.AllProductsNotOfBundleType}}" stepKey="checkingRowsForIncorrectType"/>
    </test>
</tests>
