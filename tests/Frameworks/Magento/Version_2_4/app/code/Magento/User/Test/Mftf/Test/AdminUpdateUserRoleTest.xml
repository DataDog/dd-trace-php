<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminUpdateUserRoleTest">
        <annotations>
            <features value="User"/>
            <stories value="Update User"/>
            <title value="Update admin user entity by changing user role"/>
            <description value="Change full access role for admin user to custom one with restricted permission (Sales)"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-27895"/>
            <group value="user"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!--Create New User-->
            <actionGroup ref="AdminOpenNewUserPageActionGroup" stepKey="goToNewUserPage"/>
            <actionGroup ref="AdminFillNewUserFormRequiredFieldsActionGroup" stepKey="fillNewUserForm"/>
            <actionGroup ref="AdminClickSaveButtonOnUserFormActionGroup" stepKey="saveNewUser"/>
            <!--Create New Role-->
            <actionGroup ref="AdminStartCreateUserRoleActionGroup" stepKey="startCreateUserRole">
                <argument name="roleName" value="{{roleSales.name}}"/>
                <argument name="userPassword" value="{{_ENV.MAGENTO_ADMIN_PASSWORD}}"/>
            </actionGroup>
            <actionGroup ref="AdminSaveUserRoleActionGroup" stepKey="saveNewRole"/>
        </before>
        <after>
            <!--Delete new User-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsSaleRoleUser"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsDefaultAdmin"/>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteNewUser">
                <argument name="user" value="AdminUserWithUpdatedUserRoleToSales"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearUsersGridFilter"/>
            <!--Delete new Role-->
            <actionGroup ref="AdminDeleteUserRoleActionGroup" stepKey="deleteCustomRole">
                <argument name="roleName" value="{{roleSales.rolename}}"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearRolesGridFilter"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsDefaultAdmin"/>
        </after>
        <!--Assign new role-->
        <actionGroup ref="AdminOpenUserEditPageActionGroup" stepKey="openUserEditPage">
            <argument name="user" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="AdminFillNewUserFormRequiredFieldsActionGroup" stepKey="fillUserForm">
            <argument name="user" value="AdminUserWithUpdatedUserRoleToSales"/>
        </actionGroup>
        <actionGroup ref="AdminClickSaveButtonOnUserFormActionGroup" stepKey="saveUser"/>
        <actionGroup ref="AssertMessageInAdminPanelActionGroup" stepKey="assertSuccessMessage">
            <argument name="message" value="You saved the user."/>
        </actionGroup>
        <actionGroup ref="AssertAdminUserIsInGridActionGroup" stepKey="seeUserInGrid">
            <argument name="user" value="AdminUserWithUpdatedUserRoleToSales"/>
        </actionGroup>
        <!--Login as restricted user-->
        <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsAdmin"/>
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsSaleRoleUser">
            <argument name="username" value="{{AdminUserWithUpdatedUserRoleToSales.username}}"/>
            <argument name="password" value="{{AdminUserWithUpdatedUserRoleToSales.password}}"/>
        </actionGroup>
        <actionGroup ref="AssertAdminSuccessLoginActionGroup" stepKey="seeSuccessLoginMessage"/>
        <actionGroup ref="AdminOpenAdminUsersPageActionGroup" stepKey="navigateToAdminUsersPage"/>
        <actionGroup ref="AssertUserRoleRestrictedAccessActionGroup" stepKey="seeErrorMessage"/>
    </test>
</tests>
