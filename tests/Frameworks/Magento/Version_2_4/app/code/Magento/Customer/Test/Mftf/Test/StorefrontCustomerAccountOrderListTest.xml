<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCustomerAccountOrderListTest">
        <annotations>
            <stories value="Frontend Customer Account Orders list"/>
            <title value="Verify that the list of Orders is displayed in the grid after changing the number of items on the page"/>
            <description value="Verify that the list of Orders is displayed in the grid after changing the number of items on the page."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-34953"/>
            <group value="customer"/>
        </annotations>

        <before>

            <!--Create Product via API-->
            <createData entity="SimpleProduct2" stepKey="Product"/>

            <!--Create Customer via API-->
            <createData entity="Simple_US_Customer" stepKey="Customer"/>

            <!--Create Orders via API-->
            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder1">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder2">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder3">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder4">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder5">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder6">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder7">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder8">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder9">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder10">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder11">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder12">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder13">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder14">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>

            <actionGroup ref="CreateCustomerOrderActionGroup" stepKey="createCustomerOrder15">
                <argument name="Customer" value="Customer"/>
                <argument name="Product" value="Product"/>
            </actionGroup>
            <!--Create Orders via API-->

        </before>

        <after>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>
            <deleteData createDataKey="Product" stepKey="deleteProduct"/>
            <deleteData createDataKey="Customer" stepKey="deleteCustomer"/>
        </after>

        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$Customer$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontCustomerGoToSidebarMenu" stepKey="goToSidebarMenu">
            <argument name="menu" value="My Orders"/>
        </actionGroup>

        <seeElement selector="{{StorefrontCustomerOrderSection.isMyOrdersSection}}" stepKey="waitOrderHistoryPage"/>

        <scrollTo selector="{{StorefrontCustomerOrderSection.currentPage}}" stepKey="scrollToBottomToolbarSection"/>

        <click selector="{{StorefrontCustomerOrderSection.pageNumber('2')}}" stepKey="clickOnPage2"/>

        <scrollTo selector="{{StorefrontCustomerOrderSection.perPage}}" stepKey="scrollToLimiter"/>

        <selectOption userInput="20" selector="{{StorefrontCustomerOrderSection.perPage}}" stepKey="selectLimitOnPage"/>

        <waitForPageLoad stepKey="waitForLoadPage"/>

        <seeElement selector="{{StorefrontCustomerOrderSection.isMyOrdersSection}}"
                    stepKey="seeElementOrderHistoryPage"/>

        <dontSee selector="{{StorefrontOrderInformationMainSection.emptyMessage}}"
                 userInput="You have placed no orders." stepKey="dontSeeEmptyMessage"/>

        <seeNumberOfElements selector="{{StorefrontCustomerOrderSection.rowsInColumn('id')}}" userInput="15"
                             stepKey="seeRowsCount"/>

    </test>
</tests>
