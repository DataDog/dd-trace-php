<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontResetCustomerPasswordSuccessTest">
        <annotations>
            <features value="Customer"/>
            <stories value="Customer Login"/>
            <title value="Forgot Password on Storefront validates customer email input"/>
            <description value="Forgot Password on Storefront validates customer email input"/>
            <severity value="BLOCKER"/>
            <testCaseId value="MC-13679"/>
            <group value="Customer"/>
            <group value="mtf_migrated"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{StorefrontCustomerCaptchaDisableConfigData.path}} {{StorefrontCustomerCaptchaDisableConfigData.value}}" stepKey="disableCaptcha"/>
            <magentoCLI command="config:set customer/password/password_reset_protection_type 3" stepKey="setProtectionOnEmail"/>
            <magentoCLI command="config:set customer/password/max_number_password_reset_requests 30" stepKey="increaseLimit"/>
            <magentoCLI command="config:set customer/password/min_time_between_password_reset_requests 0" stepKey="reduceTimeout"/>
            <createData stepKey="customer" entity="Simple_US_Customer"/>
        </before>
        <after>
            <!-- Preferred `Use system value` which is not available from CLI -->
            <magentoCLI command="config:set {{StorefrontCustomerCaptchaEnableConfigData.path}} {{StorefrontCustomerCaptchaEnableConfigData.value}}" stepKey="enableCaptcha"/>
            <magentoCLI command="config:set customer/password/password_reset_protection_type 1" stepKey="setDefaultProtection"/>
            <deleteData stepKey="deleteCustomer" createDataKey="customer" />
        </after>

        <actionGroup ref="StorefrontCustomerResetPasswordActionGroup" stepKey="resetPasswordFirstAttempt">
            <argument name="email" value="$$customer.email$$" />
        </actionGroup>
        <actionGroup ref="AssertCustomerResetPasswordActionGroup" stepKey="seePageWithSuccessMessage">
            <argument name="url" value="{{StorefrontCustomerSignInPage.url}}"/>
            <argument name="message" value="If there is an account associated with $$customer.email$$ you will receive an email with a link to reset your password."/>
        </actionGroup>
    </test>
</tests>
