<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="EndToEndB2CLoggedInUserTest">
        <before>
            <actionGroup ref="DeleteAllProductsUsingProductGridActionGroup" after="loginAsAdmin" stepKey="deleteAllProducts"/>

            <createData entity="ApiCategory" stepKey="createCategory"/>

            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct1">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryTestImage" stepKey="createSimpleProduct1Image">
                <requiredEntity createDataKey="createSimpleProduct1"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryMagentoLogo" stepKey="createSimpleProduct1Image1">
                <requiredEntity createDataKey="createSimpleProduct1"/>
            </createData>
            <updateData entity="ApiSimpleProductUpdateDescription" stepKey="updateSimpleProduct1" createDataKey="createSimpleProduct1"/>

            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct2">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryTestImage" stepKey="createSimpleProduct2Image">
                <requiredEntity createDataKey="createSimpleProduct2"/>
            </createData>
            <updateData entity="ApiSimpleProductUpdateDescription" stepKey="updateSimpleProduct2" createDataKey="createSimpleProduct2"/>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <!-- @TODO: Uncomment once MQE-679 is fixed -->
            <!--<deleteData createDataKey="createSimpleProduct1Image" stepKey="deleteSimpleProduct1Image"/>-->
            <!-- @TODO: Uncomment once MQE-679 is fixed -->
            <!--<deleteData createDataKey="createSimpleProduct1Image1" stepKey="deleteSimpleProduct1Image1"/>-->
            <deleteData createDataKey="createSimpleProduct1" stepKey="deleteSimpleProduct1"/>

            <!-- @TODO: Uncomment once MQE-679 is fixed -->
            <!--<deleteData createDataKey="createSimpleProduct2Image" stepKey="deleteSimpleProduct2Image"/>-->
            <deleteData createDataKey="createSimpleProduct2" stepKey="deleteSimpleProduct2"/>
        </after>

        <!-- Step 1: User browses catalog -->
        <comment userInput="Start of browsing catalog" stepKey="startOfBrowsingCatalog" after="endOfSigningUpUserAccount"/>
        <amOnPage url="{{StorefrontHomePage.url}}" stepKey="amOnHomePage" after="startOfBrowsingCatalog"/>
        <waitForPageLoad stepKey="homeWaitForPageLoad" after="amOnHomePage"/>
        <waitForElementVisible selector="{{StorefrontPanelHeaderSection.welcomeMessage}}" stepKey="homeWaitForWelcomeMessage" after="homeWaitForPageLoad"/>
        <see userInput="Welcome, John Doe!" selector="{{StorefrontPanelHeaderSection.welcomeMessage}}" stepKey="homeCheckWelcome" after="homeWaitForWelcomeMessage"/>

        <!-- Open Category -->
        <comment userInput="Open category" stepKey="commentOpenCategory" after="homeCheckWelcome"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="browseClickCategory" after="commentOpenCategory"/>
        <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="browseAssertCategory" after="browseClickCategory">
            <argument name="category" value="$$createCategory$$"/>
            <argument name="productCount" value="3"/>
        </actionGroup>
        <!-- Check simple product 1 in category -->
        <comment userInput="Check simple product 1 in category" stepKey="commentCheckSimpleProductInCategory" after="browseAssertCategory"/>
        <actionGroup ref="StorefrontCheckCategorySimpleProductActionGroup" stepKey="browseAssertCategoryProduct1" after="commentCheckSimpleProductInCategory">
            <argument name="product" value="$$createSimpleProduct1$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontCategoryProductSection.ProductImageByName($$createSimpleProduct1.name$$)}}" userInput="src" stepKey="browseGrabSimpleProduct1ImageSrc" after="browseAssertCategoryProduct1"/>
        <assertNotRegExp stepKey="browseAssertSimpleProduct1ImageNotDefault" after="browseGrabSimpleProduct1ImageSrc">
			<actualResult type="const">$browseGrabSimpleProduct1ImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/small_image\.jpg/'</expectedResult>
        </assertNotRegExp>
        <!-- Check simple product 2 in category -->
        <comment userInput="Check simple product 2 in category" stepKey="commentCheckSimpleProduct2InCategory" after="browseAssertSimpleProduct1ImageNotDefault"/>
        <actionGroup ref="StorefrontCheckCategorySimpleProductActionGroup" stepKey="browseAssertCategoryProduct2" after="commentCheckSimpleProduct2InCategory">
            <argument name="product" value="$$createSimpleProduct2$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontCategoryProductSection.ProductImageByName($$createSimpleProduct2.name$$)}}" userInput="src" stepKey="browseGrabSimpleProduct2ImageSrc" after="browseAssertCategoryProduct2"/>
        <assertNotRegExp stepKey="browseAssertSimpleProduct2ImageNotDefault" after="browseGrabSimpleProduct2ImageSrc">
			<actualResult type="const">$browseGrabSimpleProduct2ImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/small_image\.jpg/'</expectedResult>
        </assertNotRegExp>

        <!-- View Simple Product 1 -->
        <comment userInput="View simple product 1" stepKey="commentViewSimpleProduct1" after="browseAssertSimpleProduct2ImageNotDefault"/>
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct1.name$$)}}" stepKey="browseClickCategorySimpleProduct1View" after="commentViewSimpleProduct1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSimpleProduct1Viewloaded" after="browseClickCategorySimpleProduct1View"/>
        <actionGroup ref="StorefrontCheckSimpleProductActionGroup" stepKey="browseAssertProduct1Page" after="waitForSimpleProduct1Viewloaded">
            <argument name="product" value="$$createSimpleProduct1$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontProductInfoMainSection.productImage}}" userInput="src" stepKey="browseGrabSimpleProduct1PageImageSrc" after="browseAssertProduct1Page"/>
        <assertNotRegExp stepKey="browseAssertSimpleProduct1PageImageNotDefault" after="browseGrabSimpleProduct1PageImageSrc">
			<actualResult type="const">$browseGrabSimpleProduct1PageImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/image\.jpg/'</expectedResult>
        </assertNotRegExp>

        <!-- View Simple Product 2 -->
        <comment userInput="View simple product 2" stepKey="commentViewSimpleProduct2" after="browseAssertSimpleProduct1PageImageNotDefault"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="clickCategory1" after="commentViewSimpleProduct2"/>
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct2.name$$)}}" stepKey="browseClickCategorySimpleProduct2View" after="clickCategory1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSimpleProduct2ViewLoaded" after="browseClickCategorySimpleProduct2View"/>
        <actionGroup ref="StorefrontCheckSimpleProductActionGroup" stepKey="browseAssertProduct2Page" after="waitForSimpleProduct2ViewLoaded">
            <argument name="product" value="$$createSimpleProduct2$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontProductInfoMainSection.productImage}}" userInput="src" stepKey="browseGrabSimpleProduct2PageImageSrc" after="browseAssertProduct2Page"/>
        <assertNotRegExp stepKey="browseAssertSimpleProduct2PageImageNotDefault" after="browseGrabSimpleProduct2PageImageSrc">
			<actualResult type="const">$browseGrabSimpleProduct2PageImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/image\.jpg/'</expectedResult>
        </assertNotRegExp>
        <comment userInput="End of browsing catalog" stepKey="endOfBrowsingCatalog" after="browseAssertSimpleProduct2PageImageNotDefault"/>

        <!-- Step 4: User compares products -->
        <comment userInput="Start of comparing products" stepKey="startOfComparingProducts" after="endOfBrowsingCatalog"/>
        <!-- Add Simple Product 1 to comparison -->
        <comment userInput="Add simple product 1 to comparison" stepKey="commentAddSimpleProduct1ToComparison" after="startOfComparingProducts"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="compareClickCategory" after="commentAddSimpleProduct1ToComparison"/>
        <waitForLoadingMaskToDisappear stepKey="waitForCategoryloaded" after="compareClickCategory"/>
        <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="compareAssertCategory" after="waitForCategoryloaded">
            <argument name="category" value="$$createCategory$$"/>
            <argument name="productCount" value="3"/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckCategorySimpleProductActionGroup" stepKey="compareAssertSimpleProduct1" after="compareAssertCategory">
            <argument name="product" value="$$createSimpleProduct1$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontCategoryProductSection.ProductImageByName($$createSimpleProduct1.name$$)}}" userInput="src" stepKey="compareGrabSimpleProduct1ImageSrc" after="compareAssertSimpleProduct1"/>
        <assertNotRegExp stepKey="compareAssertSimpleProduct1ImageNotDefault" after="compareGrabSimpleProduct1ImageSrc">
			<actualResult type="const">$compareGrabSimpleProduct1ImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/small_image\.jpg/'</expectedResult>
        </assertNotRegExp>
        <click selector="{{StorefrontCategoryProductSection.ProductTitleByName($$createSimpleProduct1.name$$)}}" stepKey="compareClickSimpleProduct1" after="compareAssertSimpleProduct1ImageNotDefault"/>
        <waitForLoadingMaskToDisappear stepKey="waitForCompareSimpleProduct1loaded" after="compareClickSimpleProduct1"/>
        <actionGroup ref="StorefrontCheckSimpleProductActionGroup" stepKey="compareAssertProduct1Page" after="waitForCompareSimpleProduct1loaded">
            <argument name="product" value="$$createSimpleProduct1$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontProductInfoMainSection.productImage}}" userInput="src" stepKey="compareGrabSimpleProduct1PageImageSrc" after="compareAssertProduct1Page"/>
        <assertNotRegExp stepKey="compareAssertSimpleProduct2PageImageNotDefault" after="compareGrabSimpleProduct1PageImageSrc">
			<actualResult type="const">$compareGrabSimpleProduct1PageImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/image\.jpg/'</expectedResult>
        </assertNotRegExp>
        <actionGroup ref="StorefrontAddProductToCompareActionGroup" stepKey="compareAddSimpleProduct1ToCompare" after="compareAssertSimpleProduct2PageImageNotDefault">
            <argument name="productVar" value="$$createSimpleProduct1$$"/>
        </actionGroup>

        <!-- Add Simple Product 2 to comparison -->
        <comment userInput="Add simple product 2 to comparison" stepKey="commentAddSimpleProduct2ToComparison" after="compareAddSimpleProduct1ToCompare"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="compareClickCategory1" after="commentAddSimpleProduct2ToComparison"/>
        <waitForLoadingMaskToDisappear stepKey="waitForCompareCategory1loaded" after="compareClickCategory1"/>
        <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="compareAssertCategory1" after="waitForCompareCategory1loaded">
            <argument name="category" value="$$createCategory$$"/>
            <argument name="productCount" value="3"/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckCategorySimpleProductActionGroup" stepKey="compareAssertSimpleProduct2" after="compareAssertCategory1">
            <argument name="product" value="$$createSimpleProduct2$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontCategoryProductSection.ProductImageByName($$createSimpleProduct2.name$$)}}" userInput="src" stepKey="compareGrabSimpleProduct2ImageSrc" after="compareAssertSimpleProduct2"/>
        <assertNotRegExp stepKey="compareAssertSimpleProduct2ImageNotDefault" after="compareGrabSimpleProduct2ImageSrc">
			<actualResult type="const">$compareGrabSimpleProduct2ImageSrc</actualResult>
			<expectedResult type="const">'/placeholder\/small_image\.jpg/'</expectedResult>
        </assertNotRegExp>
        <actionGroup ref="StorefrontAddCategoryProductToCompareActionGroup" stepKey="compareAddSimpleProduct2ToCompare" after="compareAssertSimpleProduct2ImageNotDefault">
            <argument name="productVar" value="$$createSimpleProduct2$$"/>
        </actionGroup>

        <!-- Check products in comparison sidebar -->
        <!-- Check simple product 1 in comparison sidebar -->
        <comment userInput="Check simple product 1 in comparison sidebar" stepKey="commentCheckSimpleProduct1InComparisonSidebar" after="compareAddSimpleProduct2ToCompare"/>
        <actionGroup ref="StorefrontCheckCompareSidebarProductActionGroup" stepKey="compareSimpleProduct1InSidebar" after="commentCheckSimpleProduct1InComparisonSidebar">
            <argument name="productVar" value="$$createSimpleProduct1$$"/>
        </actionGroup>
        <!-- Check simple product2 in comparison sidebar -->
        <actionGroup ref="StorefrontCheckCompareSidebarProductActionGroup" stepKey="compareSimpleProduct2InSidebar" after="compareSimpleProduct1InSidebar">
            <argument name="productVar" value="$$createSimpleProduct2$$"/>
        </actionGroup>

        <!-- Check products on comparison page -->
        <!-- Check simple product 1 on comparison page -->
        <comment userInput="Check simple product 1 on comparison page" stepKey="commentCheckSimpleProduct1OnComparisonPage" after="compareSimpleProduct2InSidebar"/>
        <actionGroup ref="StorefrontOpenAndCheckComparisionActionGroup" stepKey="compareOpenComparePage" after="commentCheckSimpleProduct1OnComparisonPage"/>
        <actionGroup ref="StorefrontCheckCompareSimpleProductActionGroup" stepKey="compareAssertSimpleProduct1InComparison" after="compareOpenComparePage">
            <argument name="productVar" value="$$createSimpleProduct1$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontProductCompareMainSection.ProductImageByName($$createSimpleProduct1.name$$)}}" userInput="src" stepKey="compareGrabSimpleProduct1ImageSrcInComparison" after="compareAssertSimpleProduct1InComparison"/>
        <assertNotRegExp stepKey="compareAssertSimpleProduct1ImageNotDefaultInComparison" after="compareGrabSimpleProduct1ImageSrcInComparison">
			<actualResult type="const">$compareGrabSimpleProduct1ImageSrcInComparison</actualResult>
			<expectedResult type="const">'/placeholder\/small_image\.jpg/'</expectedResult>
        </assertNotRegExp>
        <!-- Check simple product2 on comparison page -->
        <actionGroup ref="StorefrontCheckCompareSimpleProductActionGroup" stepKey="compareAssertSimpleProduct2InComparison" after="compareAssertSimpleProduct1ImageNotDefaultInComparison">
            <argument name="productVar" value="$$createSimpleProduct2$$"/>
        </actionGroup>
        <!-- @TODO: Move Image check to action group after MQE-697 is fixed -->
        <grabAttributeFrom selector="{{StorefrontProductCompareMainSection.ProductImageByName($$createSimpleProduct2.name$$)}}" userInput="src" stepKey="compareGrabSimpleProduct2ImageSrcInComparison" after="compareAssertSimpleProduct2InComparison"/>
        <assertNotRegExp stepKey="compareAssertSimpleProduct2ImageNotDefaultInComparison" after="compareGrabSimpleProduct2ImageSrcInComparison">
			<actualResult type="const">$compareGrabSimpleProduct2ImageSrcInComparison</actualResult>
			<expectedResult type="const">'/placeholder\/small_image\.jpg/'</expectedResult>
        </assertNotRegExp>

        <!-- Clear comparison sidebar -->
        <comment userInput="Clear comparison sidebar" stepKey="commentClearComparisonSidebar" after="compareAssertSimpleProduct2ImageNotDefaultInComparison"/>
        <click selector="{{StorefrontHeaderSection.NavigationCategoryByName($$createCategory.name$$)}}" stepKey="compareClickCategoryBeforeClear" after="commentClearComparisonSidebar"/>
        <actionGroup ref="StorefrontCheckCategoryActionGroup" stepKey="compareAssertCategory2" after="compareClickCategoryBeforeClear">
            <argument name="category" value="$$createCategory$$"/>
            <argument name="productCount" value="3"/>
        </actionGroup>
        <actionGroup ref="StorefrontClearCompareActionGroup" stepKey="compareClearCompare" after="compareAssertCategory2"/>
        <comment userInput="End of Comparing Products" stepKey="endOfComparingProducts" after="compareClearCompare"/>
    </test>
</tests>
