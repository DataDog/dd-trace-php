<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminUpdateCategoryNameWithStoreViewTest">
        <annotations>
            <stories value="Update categories"/>
            <title value="Update category, with custom store view"/>
            <description value="Login as admin and update category name with custom Store View"/>
            <testCaseId value="MC-6061"/>
            <severity value="CRITICAL"/>
            <group value="Catalog"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminPanel"/>
            <createData entity="NewRootCategory" stepKey="rootCategory"/>
            <createData entity="SimpleRootSubCategory" stepKey="category">
                    <requiredEntity createDataKey="rootCategory"/>
            </createData>
        </before>
        <after>
            <actionGroup ref="DeleteCustomStoreActionGroup" stepKey="deleteCustomStore">
                <argument name="storeGroupName" value="customStore.name"/>
            </actionGroup>
            <magentoCron groups="index" stepKey="reindex"/>
            <deleteData createDataKey="rootCategory" stepKey="deleteRootCategory"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!--Create Custom Store -->
        <actionGroup ref="CreateCustomStoreActionGroup" stepKey="createCustomStore">
            <argument name="website" value="{{_defaultWebsite.name}}"/>
            <argument name="store" value="{{customStore.name}}"/>
            <argument name="rootCategory" value="$$rootCategory.name$$"/>
        </actionGroup>

        <!--Create Store View-->
        <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createStoreView">
            <argument name="StoreGroup" value="customStore"/>
            <argument name="customStore" value="customStore"/>
        </actionGroup>
        <magentoCron groups="index" stepKey="reindex"/>

        <!--Verify created SubCategory is present on Store Front -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToHomepage"/>
        <actionGroup ref="StorefrontSwitchStoreActionGroup" stepKey="seeCustomStore">
            <argument name="storeName" value="{{customStore.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="goToCategoryPage">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertCategoryNameIsShownInMenuActionGroup" stepKey="seeCatergoryInStoreFront">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>

        <!--Open Category Page-->
        <actionGroup ref="AdminOpenCategoryPageActionGroup" stepKey="openAdminCategoryIndexPage"/>
        <!--Update Category-->
        <actionGroup ref="AdminExpandCategoryTreeActionGroup" stepKey="expandCategoryTree"/>
        <actionGroup ref="AdminCategoriesOpenCategoryActionGroup" stepKey="openCategory">
            <argument name="category" value="$$category$$"/>
        </actionGroup>
        <actionGroup ref="AdminChangeCategoryNameActionGroup" stepKey="updateCategoryName"/>
        <actionGroup ref="AdminSaveCategoryActionGroup" stepKey="saveCategory"/>
        <actionGroup ref="AssertAdminCategorySaveSuccessMessageActionGroup" stepKey="assertSuccessMessage"/>

        <!--Verify the Category is not present in Store Front-->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="openHomepage"/>
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openCategoryPage">
            <argument name="categoryName" value="{{_defaultCategory.name}}"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertCategoryNameIsNotShownInMenuActionGroup" stepKey="doNotSeeOldCategoryNameInStoreFront">
            <argument name="categoryName" value="{{SimpleRootSubCategory.name}}"/>
        </actionGroup>

        <!--Verify the Updated Category is present in Store Front-->
        <actionGroup ref="StorefrontAssertCategoryNameIsShownInMenuActionGroup" stepKey="seeUpdatedCatergoryNameInStoreFront">
            <argument name="categoryName" value="{{_defaultCategory.name}}"/>
        </actionGroup>
    </test>
</tests>
