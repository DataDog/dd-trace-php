<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminBackorderAllowedAddProductToCartTest">
        <annotations>
            <stories value="Manage products"/>
            <title value="Add Product to Cart, Backorder Allowed"/>
            <description value="Customer should be able to add products to cart when that products quantity is zero"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-11063"/>
            <group value="mtf_migrated"/>
        </annotations>

        <before>
            <!-- Create a product that is "In Stock" but has quantity zero -->
            <createData entity="SimpleProductInStockQuantityZero" stepKey="createProduct"/>

            <!-- Configure Magento to show out of stock products and to allow backorders -->
            <magentoCLI command="config:set {{CatalogInventoryOptionsShowOutOfStockEnable.path}} {{CatalogInventoryOptionsShowOutOfStockEnable.value}}" stepKey="setConfigShowOutOfStockTrue"/>
            <magentoCLI command="config:set {{CatalogInventoryItemOptionsBackordersEnable.path}} {{CatalogInventoryItemOptionsBackordersEnable.value}}" stepKey="setConfigAllowBackordersTrue"/>
        </before>

        <after>
            <!-- Set Magento back to default configuration -->
            <magentoCLI command="config:set {{CatalogInventoryOptionsShowOutOfStockDisable.path}} {{CatalogInventoryOptionsShowOutOfStockDisable.value}}" stepKey="setConfigShowOutOfStockFalse"/>
            <magentoCLI command="config:set {{CatalogInventoryItemOptionsBackordersDisable.path}} {{CatalogInventoryItemOptionsBackordersDisable.value}}" stepKey="setConfigAllowBackordersFalse"/>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
        </after>

        <!-- Go to the storefront and add the product to the cart -->
        <actionGroup ref="AddSimpleProductToCartActionGroup" stepKey="gotoAndAddProductToCart">
            <argument name="product" value="$$createProduct$$"/>
        </actionGroup>

        <!-- Go to the cart page and verify we see the product -->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="gotoCart"/>
        <actionGroup ref="AssertStorefrontCheckoutCartItemsActionGroup" stepKey="assertProductItemInCheckOutCart">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="productSku" value="$$createProduct.sku$$"/>
            <argument name="productPrice" value="$$createProduct.price$$"/>
            <argument name="subtotal" value="$$createProduct.price$$" />
            <argument name="qty" value="1"/>
        </actionGroup>
    </test>
</tests>
