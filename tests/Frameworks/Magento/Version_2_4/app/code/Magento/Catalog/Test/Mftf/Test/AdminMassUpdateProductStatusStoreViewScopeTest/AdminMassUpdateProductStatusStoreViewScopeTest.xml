<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminMassUpdateProductStatusStoreViewScopeTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Mass update product status"/>
            <title value="Admin should be able to mass update product statuses in store view scope"/>
            <description value="Admin should be able to mass update product statuses in store view scope"/>
            <severity value="AVERAGE"/>
            <testCaseId value="MC-28538"/>
            <group value="Catalog"/>
            <group value="Product Attributes"/>
            <group value="SearchEngine"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <actionGroup ref="AdminCreateWebsiteActionGroup" stepKey="createAdditionalWebsite">
                <argument name="newWebsiteName" value="{{customWebsite.name}}"/>
                <argument name="websiteCode" value="{{customWebsite.code}}"/>
            </actionGroup>
            <actionGroup ref="AdminCreateNewStoreGroupActionGroup" stepKey="createNewStore">
                <argument name="website" value="{{customWebsite.name}}"/>
                <argument name="storeGroupName" value="{{customStoreGroup.name}}"/>
                <argument name="storeGroupCode" value="{{customStoreGroup.code}}"/>
            </actionGroup>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createNewStoreView">
                <argument name="StoreGroup" value="customStoreGroup"/>
                <argument name="customStore" value="customStore"/>
            </actionGroup>
            <magentoCron groups="index" stepKey="reindex"/>

            <!--Create a Simple Product 1 -->
            <actionGroup ref="CreateSimpleProductAndAddToWebsiteActionGroup" stepKey="createSimpleProduct1">
                <argument name="product" value="simpleProductForMassUpdate"/>
                <argument name="website" value="{{customWebsite.name}}"/>
            </actionGroup>

            <!--Create a Simple Product 2 -->
            <actionGroup ref="CreateSimpleProductAndAddToWebsiteActionGroup" stepKey="createSimpleProduct2">
                <argument name="product" value="simpleProductForMassUpdate2"/>
                <argument name="website" value="{{customWebsite.name}}"/>
            </actionGroup>
        </before>
        <after>
            <!--Delete website -->
            <actionGroup ref="AdminDeleteWebsiteActionGroup" stepKey="deleteSecondWebsite">
                <argument name="websiteName" value="{{customWebsite.name}}"/>
            </actionGroup>
            <magentoCron groups="index" stepKey="reindex"/>
            <actionGroup ref="AdminClearFiltersActionGroup" stepKey="clearFilters"/>

            <!--Delete Products -->
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteProduct1">
                <argument name="sku" value="{{simpleProductForMassUpdate.sku}}"/>
            </actionGroup>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteProduct2">
                <argument name="sku" value="{{simpleProductForMassUpdate2.sku}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilter"/>
        </after>

        <!-- Search and select products -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndex"/>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetGrid"/>
        <actionGroup ref="SearchProductGridByKeyword2ActionGroup" stepKey="searchByKeyword">
            <argument name="keyword" value="{{simpleProductForMassUpdate.keyword}}"/>
        </actionGroup>
        <actionGroup ref="SortProductsByIdDescendingActionGroup" stepKey="sortProductsByIdDescending"/>

        <!-- Filter to Second Store View -->
        <actionGroup ref="AdminFilterStoreViewActionGroup" stepKey="filterStoreView">
            <argument name="customStore" value="customStore.name"/>
        </actionGroup>

        <!-- Select Product 2 -->
        <checkOption selector="{{AdminProductGridSection.productGridCheckboxOnRow('2')}}" stepKey="clickCheckbox2"/>

        <!-- Mass update attributes -->
        <click selector="{{AdminProductGridSection.bulkActionDropdown}}" stepKey="clickDropdown"/>
        <click selector="{{AdminProductGridSection.bulkActionOption('Change status')}}" stepKey="clickOption"/>
        <click selector="{{AdminProductGridSection.bulkActionOption('Disable')}}" stepKey="clickDisabled"/>
        <waitForPageLoad stepKey="waitForBulkUpdatePage"/>

        <!-- Verify Product Statuses -->
        <see selector="{{AdminProductGridSection.productGridContentsOnRow('1')}}" userInput="Enabled" stepKey="checkIfProduct1IsEnabled"/>
        <see selector="{{AdminProductGridSection.productGridContentsOnRow('2')}}" userInput="Disabled" stepKey="checkIfProduct2IsDisabled"/>

        <!-- Filter to Default Store View -->
        <actionGroup ref="AdminFilterStoreViewActionGroup" stepKey="filterDefaultStoreView">
            <argument name="customStore" value="'Default'"/>
        </actionGroup>

        <!-- Verify Product Statuses -->
        <see selector="{{AdminProductGridSection.productGridContentsOnRow('1')}}" userInput="Enabled" stepKey="checkIfDefaultViewProduct1IsEnabled"/>
        <see selector="{{AdminProductGridSection.productGridContentsOnRow('2')}}" userInput="Enabled" stepKey="checkIfDefaultViewProduct2IsEnabled"/>

        <!-- Assert on storefront default view with first product -->
        <actionGroup ref="GoToStoreViewAdvancedCatalogSearchActionGroup" stepKey="GoToStoreViewAdvancedCatalogSearchActionGroupDefault"/>
        <actionGroup ref="StorefrontAdvancedCatalogSearchByProductNameAndDescriptionActionGroup" stepKey="searchByNameDefault">
            <argument name="name" value="{{simpleProductForMassUpdate.name}}"/>
            <argument name="description" value=""/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckAdvancedSearchResultActionGroup" stepKey="StorefrontCheckAdvancedSearchResultDefault"/>
        <see userInput="1 item" selector="{{StorefrontCatalogSearchAdvancedResultMainSection.itemFound}}" stepKey="seeInDefault"/>

        <!-- Assert on storefront default view with second product -->
        <actionGroup ref="GoToStoreViewAdvancedCatalogSearchActionGroup" stepKey="GoToStoreViewAdvancedCatalogSearchActionGroupDefaultToSearchSecondProduct"/>
        <actionGroup ref="StorefrontAdvancedCatalogSearchByProductNameAndDescriptionActionGroup" stepKey="searchByNameDefaultWithSecondProduct">
            <argument name="name" value="{{simpleProductForMassUpdate2.name}}"/>
            <argument name="description" value=""/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckAdvancedSearchResultActionGroup" stepKey="StorefrontCheckAdvancedSearchResultDefaultForSecondProduct"/>
        <see userInput="1 item" selector="{{StorefrontCatalogSearchAdvancedResultMainSection.itemFound}}" stepKey="seeInDefaultSecondProductResults"/>

        <!--Enable the product in Default store view-->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndex2"/>
        <checkOption selector="{{AdminProductGridSection.productGridCheckboxOnRow('1')}}" stepKey="clickCheckboxDefaultStoreView"/>
        <checkOption selector="{{AdminProductGridSection.productGridCheckboxOnRow('2')}}" stepKey="clickCheckboxDefaultStoreView2"/>

        <!-- Mass update attributes -->
        <click selector="{{AdminProductGridSection.bulkActionDropdown}}" stepKey="clickDropdownDefaultStoreView"/>
        <click selector="{{AdminProductGridSection.bulkActionOption('Change status')}}" stepKey="clickOptionDefaultStoreView"/>
        <click selector="{{AdminProductGridSection.bulkActionOption('Disable')}}" stepKey="clickDisabledDefaultStoreView"/>
        <waitForPageLoad stepKey="waitForBulkUpdatePageDefaultStoreView"/>
        <see selector="{{AdminProductGridSection.productGridContentsOnRow('1')}}" userInput="Disabled" stepKey="checkIfProduct2IsDisabledDefaultStoreView"/>

        <!-- Assert on storefront default view -->
        <actionGroup ref="GoToStoreViewAdvancedCatalogSearchActionGroup" stepKey="GoToStoreViewAdvancedCatalogSearchActionGroupDefault2"/>
        <actionGroup ref="StorefrontAdvancedCatalogSearchByProductNameAndDescriptionActionGroup" stepKey="searchByNameDefault2">
            <argument name="name" value="{{simpleProductForMassUpdate.name}}"/>
            <argument name="description" value=""/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckAdvancedSearchResultActionGroup" stepKey="StorefrontCheckAdvancedSearchResultDefault2"/>
        <see userInput="We can't find any items matching these search criteria." selector="{{StorefrontCatalogSearchAdvancedResultMainSection.message}}" stepKey="seeInDefault2"/>
   </test>
</tests>
