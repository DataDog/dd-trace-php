<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontDeleteConfigurableProductFromWishlistTest">
        <annotations>
            <stories value="Wishlist"/>
            <title value="Delete Configurable Product from Wishlist on Frontend"/>
            <description value="Delete Configurable Product from Wishlist on Frontend"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-14217"/>
            <group value="wishlist"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!-- Create Data -->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the attribute just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Get the first option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the second option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the third option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="3" stepKey="getConfigAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Create Configurable product -->
            <createData entity="BaseConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <field key="price">10.00</field>
            </createData>

            <!--Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <field key="price">20.00</field>
            </createData>

            <!--Create a simple product and give it the attribute with the Third option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
                <field key="price">30.00</field>
            </createData>

            <!-- Create the configurable product -->
            <createData entity="ConfigurableProductThreeOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
            </createData>

            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>

            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>

            <!-- Add the third simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild3">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct3"/>
            </createData>
            <comment userInput="Adding the comment to replace CliIndexerReindexActionGroup action group ('indexer:reindex' commands) for preserving Backward Compatibility" stepKey="reindex"/>
            <comment userInput="Adding the comment to replace CliCacheFlushActionGroup action group ('cache:flush' command) for preserving Backward Compatibility" stepKey="flushCache"/>
        </before>
        <after>
            <!-- Delete data -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createConfigChildProduct3" stepKey="deleteSimpleProduct3"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteProductAttribute"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- 1. Login as a customer -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefrontAccount">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>

        <!-- 2. Navigate to catalog page -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="openProductFromCategory">
            <argument name="category" value="$$createCategory$$"/>
        </actionGroup>

        <!--  3. Add created product to Wishlist according to dataset and assert add product to wishlist success message -->
        <actionGroup ref="StorefrontCustomerAddCategoryProductToWishlistActionGroup" stepKey="addProductToWishlist">
            <argument name="productVar" value="$$createConfigProduct$$"/>
        </actionGroup>

        <!--  Navigate to My Account > My Wishlist -->
        <amOnPage url="{{StorefrontCustomerWishlistPage.url}}" stepKey="amOnWishListPage"/>
        <waitForPageLoad stepKey="waitForWishlistPageLoad"/>

        <!-- Click "Remove item" -->
        <scrollTo selector="{{StorefrontCustomerWishlistProductSection.ProductInfoByName($$createConfigProduct.name$$)}}" stepKey="scrollToProduct"/>
        <moveMouseOver selector="{{StorefrontCustomerWishlistProductSection.ProductInfoByName($$createConfigProduct.name$$)}}" stepKey="mouseOverOnProduct"/>
        <click selector="{{StorefrontCustomerWishlistProductSection.removeProduct}}" stepKey="clickRemoveButton"/>

        <!-- Assert Wishlist is empty -->
        <actionGroup ref="StorefrontAssertCustomerWishlistIsEmptyActionGroup" stepKey="assertWishlistIsEmpty"/>
    </test>
</tests>
