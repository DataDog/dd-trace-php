<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminMassOrdersCancelProcessingAndClosedTest" deprecated="Use AdminMassOrdersCancelClosedAndProcessingTest instead">
        <annotations>
            <stories value="Mass Update Orders"/>
            <title value="DEPRECATED. Mass cancel orders in status  Processing, Closed"/>
            <description value="Try to cancel orders in status Processing, Closed"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-16184"/>
            <group value="sales"/>
            <group value="mtf_migrated"/>
            <skip>
                <issueId value="DEPRECATED">Use AdminMassOrdersCancelClosedAndProcessingTest instead</issueId>
            </skip>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>

            <!-- Create Data -->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="defaultSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <!-- Delete data -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Create first order -->
        <actionGroup ref="CreateOrderActionGroup" stepKey="createFirstOrder">
            <argument name="product" value="$$createProduct$$"/>
            <argument name="customer" value="$$createCustomer$$"/>
        </actionGroup>
        <comment userInput="BIC workaround" stepKey="getFirstOrderId"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber1"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="orderId1"/>
        <assertNotEmpty stepKey="assertOrderIdIsNotEmpty">
            <actualResult type="const">$orderNumber1</actualResult>
        </assertNotEmpty>

        <!-- Create Invoice for first Order -->
        <actionGroup ref="AdminCreateInvoiceActionGroup" stepKey="createInvoice"/>

        <!-- Create second order -->
        <actionGroup ref="CreateOrderActionGroup" stepKey="createSecondOrder">
            <argument name="product" value="$$createProduct$$"/>
            <argument name="customer" value="$$createCustomer$$"/>
        </actionGroup>
        <comment userInput="BIC workaround" stepKey="getSecondOrderId"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber2"/>
        <grabFromCurrentUrl regex="~/order_id/(\d+)/~" stepKey="orderId2"/>
        <assertNotEmpty stepKey="assertSecondOrderIdIsNotEmpty">
            <actualResult type="const">$orderNumber2</actualResult>
        </assertNotEmpty>

        <!-- Create CreditMemo for second Order -->
        <actionGroup ref="AdminCreateInvoiceAndCreditMemoActionGroup" stepKey="createCreditMemo"/>

        <!-- Navigate to backend: Go to Sales > Orders -->
        <actionGroup ref="AdminOrdersPageOpenActionGroup" stepKey="onOrderPage"/>
        <actionGroup ref="AdminOrdersGridClearFiltersActionGroup" stepKey="clearFilters"/>

        <!-- Select Mass Action according to dataset: Cancel -->
        <actionGroup ref="AdminTwoOrderActionOnGridActionGroup" stepKey="massActionCancel">
            <argument name="action" value="Cancel"/>
            <argument name="orderId" value="{$orderNumber1}"/>
            <argument name="secondOrderId" value="{$orderNumber2}"/>
        </actionGroup>
        <see userInput="You cannot cancel the order(s)." stepKey="assertOrderCancelMassActionFailMessage"/>

        <!--Assert first order in orders grid -->
        <actionGroup ref="AdminOrderFilterByOrderIdAndStatusActionGroup" stepKey="seeFirstOrder">
            <argument name="orderId" value="{$orderNumber1}"/>
            <argument name="orderStatus" value="Processing"/>
        </actionGroup>
        <see userInput="{$orderNumber1}" selector="{{AdminOrdersGridSection.gridCell('1','ID')}}" stepKey="assertFirstOrderID"/>
        <see userInput="Processing" selector="{{AdminOrdersGridSection.gridCell('1','Status')}}" stepKey="assertFirstOrderStatus"/>

        <!--Assert second order in orders grid -->
        <actionGroup ref="AdminOrderFilterByOrderIdAndStatusActionGroup" stepKey="seeSecondOrder">
            <argument name="orderId" value="{$orderNumber2}"/>
            <argument name="orderStatus" value="Closed"/>
        </actionGroup>
        <see userInput="{$orderNumber2}" selector="{{AdminOrdersGridSection.gridCell('1','ID')}}" stepKey="assertSecondOrderID"/>
        <see userInput="Closed" selector="{{AdminOrdersGridSection.gridCell('1','Status')}}" stepKey="assertSecondStatus"/>
    </test>
</tests>
