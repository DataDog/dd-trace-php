<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCorrectnessInvoicedItemInBundleProductTest">
        <annotations>
            <features value="Sales"/>
            <stories value="Product invoice"/>
            <title value="Check correctness of invoiced items in a Bundle Product"/>
            <description value="Check correctness of invoiced items in a Bundle Product"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-11059"/>
            <useCaseId value="MC-10969"/>
            <group value="sales"/>
            <group value="guest_checkout"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!--Create category and simple product-->
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!--Create bundle product-->
            <createData entity="ApiBundleProductPriceViewRange" stepKey="createBundleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="DropDownBundleOption" stepKey="bundleOption">
                <requiredEntity createDataKey="createBundleProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="createBundleLink1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="bundleOption"/>
                <requiredEntity createDataKey="createSimpleProduct"/>
                <field key="qty">10</field>
            </createData>
        </before>
        <after>
            <!--Delete created data-->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createBundleProduct" stepKey="deleteBundleProduct"/>

            <actionGroup ref="AdminLogoutActionGroup" stepKey="logOut"/>
        </after>

        <!--Complete Bundle product creation-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="goToProductEditPage">
            <argument name="productId" value="$$createBundleProduct.id$$"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>

        <comment userInput="Adding the comment to replace CliIndexerReindexActionGroup action group ('indexer:reindex' commands) for preserving Backward Compatibility" stepKey="reindex"/>

        <!--Go to bundle product page-->
        <amOnPage url="{{StorefrontProductPage.url($$createCategory.custom_attributes[url_key]$$)}}" stepKey="navigateToBundleProductPage"/>

        <!--Place order bundle product with 10 options-->
        <actionGroup ref="StorefrontAddCategoryBundleProductWithSingleChoiceToCartActionGroup" stepKey="addBundleProductToCart">
            <argument name="product" value="$$createBundleProduct$$"/>
            <argument name="quantity" value="10"/>
        </actionGroup>
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart" />
        <actionGroup ref="GuestCheckoutFillingShippingSectionActionGroup" stepKey="guestCheckoutFillingShipping"/>
        <actionGroup ref="CheckoutPlaceOrderActionGroup" stepKey="placeOrder">
            <argument name="orderNumberMessage" value="CONST.successGuestCheckoutOrderNumberMessage" />
            <argument name="emailYouMessage" value="CONST.successCheckoutEmailYouMessage"/>
        </actionGroup>

        <!--Go to order page submit invoice-->
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>
        <actionGroup ref="AdminOrdersPageOpenActionGroup" stepKey="onOrdersPage"/>
        <actionGroup ref="FilterOrderGridByIdActionGroup" stepKey="filterOrderGridById">
            <argument name="orderId" value="$grabOrderNumber"/>
        </actionGroup>
        <actionGroup ref="AdminOrderGridClickFirstRowActionGroup" stepKey="clickOrderRow"/>
        <actionGroup ref="GoToInvoiceIntoOrderActionGroup" stepKey="goToInvoiceIntoOrderPage"/>
        <fillField selector="{{AdminInvoiceItemsSection.qtyToInvoiceColumn}}" userInput="5" stepKey="ChangeQtyToInvoice"/>
        <click selector="{{AdminInvoiceItemsSection.updateQty}}" stepKey="updateQuantity"/>
        <waitForPageLoad stepKey="waitPageToBeLoaded"/>
        <actionGroup ref="SubmitInvoiceActionGroup" stepKey="submitInvoice"/>

        <!--Verify invoiced items qty in ship tab-->
        <actionGroup ref="GoToShipmentIntoOrderActionGroup" stepKey="goToShipment"/>
        <grabTextFrom selector="{{AdminShipmentItemsSection.itemQtyInvoiced('1')}}" stepKey="grabInvoicedItemQty"/>
        <assertEquals stepKey="assertInvoicedItemsQty">
			<actualResult type="const">$grabInvoicedItemQty</actualResult>
			<expectedResult type="string">5</expectedResult>
        </assertEquals>
    </test>
</tests>
