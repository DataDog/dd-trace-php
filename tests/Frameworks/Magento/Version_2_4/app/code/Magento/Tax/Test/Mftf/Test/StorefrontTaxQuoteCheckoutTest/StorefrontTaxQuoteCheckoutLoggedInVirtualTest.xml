<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontTaxQuoteCheckoutLoggedInVirtualTest">
        <annotations>
            <features value="Tax"/>
            <stories value="Tax Calculation in One Page Checkout"/>
            <title value="Tax for Virtual Product Quote should be recalculated according to inputted data on Checkout flow for Logged in Customer"/>
            <description value="Tax for Virtual Product Quote should be recalculated according to inputted data on Checkout flow for Logged in Customer"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-259"/>
            <group value="Tax"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="VirtualProduct" stepKey="virtualProduct1"/>

            <!-- Fill in rules to display tax in the cart -->
            <actionGroup ref="EditTaxConfigurationByUIActionGroup" stepKey="fillDefaultTaxForms"/>

            <!-- Go to tax rule page -->
            <actionGroup ref="AdminTaxRuleGridOpenPageActionGroup" stepKey="goToTaxRulePage"/>
            <click stepKey="addNewTaxRate" selector="{{AdminGridMainControls.add}}"/>
            <fillField stepKey="fillRuleName" selector="{{AdminTaxRulesSection.ruleName}}" userInput="SampleRule"/>

            <!-- Add NY and CA tax rules -->
            <actionGroup ref="AddNewTaxRateNoZipActionGroup" stepKey="addNYTaxRate">
                <argument name="taxCode" value="SimpleTaxNY"/>
            </actionGroup>

            <actionGroup ref="AddNewTaxRateNoZipActionGroup" stepKey="addCATaxRate">
                <argument name="taxCode" value="SimpleTaxCA"/>
            </actionGroup>

            <click stepKey="clickSave" selector="{{AdminStoresMainActionsSection.saveButton}}"/>

            <magentoCLI command="cron:run --group=index" stepKey="runCronIndexer"/>
        </before>
        <after>
            <deleteData createDataKey="virtualProduct1" stepKey="deleteVirtualProduct"/>
            <!-- Go to the tax rule page and delete the row we created-->
            <actionGroup ref="AdminTaxRuleGridOpenPageActionGroup" stepKey="goToTaxRulesPage"/>
            <actionGroup ref="deleteEntitySecondaryGrid" stepKey="deleteRule">
                <argument name="name" value="SampleRule"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.taxIdentifierSearch}}"/>
            </actionGroup>

            <!-- Go to the tax rate page -->
            <actionGroup ref="AdminTaxRateGridOpenPageActionGroup" stepKey="goToTaxRatesPage"/>

            <!-- Delete the two tax rates that were created -->
            <actionGroup ref="deleteEntitySecondaryGrid" stepKey="deleteNYRate">
                <argument name="name" value="{{SimpleTaxNY.state}}-{{SimpleTaxNY.rate}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.taxIdentifierSearch}}"/>
            </actionGroup>

            <actionGroup ref="deleteEntitySecondaryGrid" stepKey="deleteCARate">
                <argument name="name" value="{{SimpleTaxCA.state}}-{{SimpleTaxCA.rate}}"/>
                <argument name="searchInput" value="{{AdminSecondaryGridSection.taxIdentifierSearch}}"/>
            </actionGroup>

            <!-- Ensure tax won't be shown in the cart -->
            <actionGroup ref="ChangeToDefaultTaxConfigurationUIActionGroup" stepKey="changeToDefaultTaxConfiguration"/>
            <actionGroup ref="DeleteCustomerByEmailActionGroup" stepKey="deleteCustomer">
                <argument name="email" value="{{Simple_US_Customer_NY.email}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetGrid"/>

            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
            <comment userInput="BIC workaround" stepKey="deleteVirtualProduct1"/>
        </after>

        <!-- Fill out form for a new user with address -->
        <actionGroup ref="StorefrontOpenCustomerAccountCreatePageActionGroup" stepKey="openCreateAccountPage"/>
        <actionGroup ref="StorefrontFillCustomerAccountCreationFormActionGroup" stepKey="fillCreateAccountForm">
            <argument name="customer" value="Simple_US_Customer_NY"/>
        </actionGroup>
        <actionGroup ref="StorefrontClickCreateAnAccountCustomerAccountCreationFormActionGroup" stepKey="submitCreateAccountForm"/>
        <actionGroup ref="AssertMessageCustomerCreateAccountActionGroup" stepKey="seeSuccessMessage">
            <argument name="messageType" value="success"/>
            <argument name="message" value="Thank you for registering with Main Website Store."/>
        </actionGroup>

        <actionGroup ref="EnterCustomerAddressInfoActionGroup" stepKey="enterAddressInfo">
            <argument name="Address" value="US_Address_NY"/>
        </actionGroup>

        <!-- Go to the created product page and add it to the cart -->
        <amOnPage url="$$virtualProduct1.custom_attributes[url_key]$$.html" stepKey="goToVirtualProductPage"/>
        <waitForPageLoad stepKey="waitForVirtualProductPage"/>
        <waitForElementClickable selector="{{StorefrontProductActionSection.addToCart}}" stepKey="waitForAddToCartButton"/>
        <click stepKey="addVirtualProductToCart" selector="{{StorefrontProductActionSection.addToCart}}"/>
        <waitForPageLoad stepKey="waitForProductAdded"/>
        <see stepKey="seeSuccess" selector="{{StorefrontMessagesSection.success}}" userInput="You added"/>

        <!-- Assert that taxes are applied correctly for NY -->
        <actionGroup ref="StorefrontOpenCheckoutPageActionGroup" stepKey="goToCheckout"/>
        <!-- Checkout select Check/Money Order payment -->
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyPayment"/>
        <see stepKey="seeAddress" selector="{{CheckoutShippingSection.defaultShipping}}" userInput="{{SimpleTaxNY.state}}"/>

        <waitForElementVisible stepKey="waitForOverviewVisible" selector="{{CheckoutPaymentSection.tax}}"/>
        <see stepKey="seeTax" selector="{{CheckoutPaymentSection.tax}}" userInput="$8.37"/>
        <click stepKey="expandTax" selector="{{CheckoutPaymentSection.tax}}"/>
        <see stepKey="seeTaxPercent" selector="{{CheckoutPaymentSection.taxPercentage}}" userInput="({{SimpleTaxNY.rate}}%)"/>
        <see stepKey="seeTotalIncl" selector="{{CheckoutPaymentSection.orderSummaryTotalIncluding}}" userInput="$108.36"/>
        <see stepKey="seeTotalExcl" selector="{{CheckoutPaymentSection.orderSummaryTotalExcluding}}" userInput="$$virtualProduct1.price$$"/>

        <!-- Change the address -->
        <click stepKey="editAddress" selector="{{CheckoutShippingSection.editAddressButton}}"/>
        <selectOption stepKey="addNewAddress" selector="{{CheckoutShippingSection.addressDropdown}}" userInput="New Address"/>
        <waitForPageLoad stepKey="waitForNewAddressForm"/>

        <actionGroup ref="LoggedInCheckoutFillNewBillingAddressActionGroup" stepKey="changeAddress">
            <argument name="Address" value="US_Address_CA"/>
            <argument name="classPrefix" value="[aria-hidden=false]"/>
        </actionGroup>
        <actionGroup ref="StorefrontClickUpdateAddressInCheckoutActionGroup" stepKey="saveAddress"/>

        <comment userInput="BIC workaround" stepKey="waitForAddressSaved"/>
        <!-- Checkout select Check/Money Order payment -->
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyPayment2"/>
        <see stepKey="seeAddress2" selector="{{CheckoutShippingSection.defaultShipping}}" userInput="{{SimpleTaxCA.state}}"/>

        <!-- Assert that taxes are applied correctly for CA -->
        <waitForElementVisible stepKey="waitForOverviewVisible2" selector="{{CheckoutPaymentSection.tax}}"/>
        <see stepKey="seeTax2" selector="{{CheckoutPaymentSection.tax}}" userInput="$8.25"/>
        <click stepKey="expandTax2" selector="{{CheckoutPaymentSection.tax}}"/>
        <see stepKey="seeTaxPercent2" selector="{{CheckoutPaymentSection.taxPercentage}}" userInput="({{SimpleTaxCA.rate}}%)"/>
        <see stepKey="seeTotalIncl2" selector="{{CheckoutPaymentSection.orderSummaryTotalIncluding}}" userInput="$108.24"/>
        <see stepKey="seeTotalExcl2" selector="{{CheckoutPaymentSection.orderSummaryTotalExcluding}}" userInput="$$virtualProduct1.price$$"/>
    </test>
</tests>
