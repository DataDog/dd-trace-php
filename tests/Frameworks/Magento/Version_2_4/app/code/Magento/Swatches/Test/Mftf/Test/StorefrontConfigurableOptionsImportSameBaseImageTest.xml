<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontConfigurableOptionsImportSameBaseImageTest">
        <annotations>
            <features value="Swatches"/>
            <stories value="Configurable product import same base image"/>
            <title value="Check thumbnail images for Configurable Product with same base image from Import option"/>
            <description value="Login as admin, create attribute with three options, configurable product with three
                associated simple products. Add few images for products, check the fotorama thumbnail images
                (visible and active) for each selected option for the configurable product"/>
            <severity value="MAJOR"/>
            <group value="swatches"/>
            <group value="skip_in_cloud_native_s3"/>
        </annotations>
        <before>
            <!-- Login as Admin -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin1"/>

            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="createDirectory" stepKey="createDirectoryForImportImages">
                <argument name="path">var/import/images/{{ImportProduct_Configurable.name}}</argument>
            </helper>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="copy" stepKey="copyBaseImage">
                <argument name="source">dev/tests/acceptance/tests/_data/{{ImportProductSimple3_Configurable.baseImage}}</argument>
                <argument name="destination">var/import/images/{{ImportProduct_Configurable.name}}/{{ImportProductSimple3_Configurable.baseImage}}</argument>
            </helper>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="copy" stepKey="copyProduct1BaseImage">
                <argument name="source">dev/tests/acceptance/tests/_data/{{ImportProductSimple2_Configurable.baseImage}}</argument>
                <argument name="destination">var/import/images/{{ImportProduct_Configurable.name}}/{{ImportProductSimple2_Configurable.baseImage}}</argument>
            </helper>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="copy" stepKey="copyProduct2BaseImage">
                <argument name="source">dev/tests/acceptance/tests/_data/{{ImportProductSimple1_Configurable.baseImage}}</argument>
                <argument name="destination">var/import/images/{{ImportProduct_Configurable.name}}/{{ImportProductSimple1_Configurable.baseImage}}</argument>
            </helper>
        </before>
        <after>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="deleteDirectory" stepKey="deleteProductImageDirectory">
                <argument name="path">var/import/images/{{ImportProduct_Configurable.name}}</argument>
            </helper>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteConfigurableProduct">
                <argument name="sku" value="import-product-configurable"/>
            </actionGroup>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteConfigurableProduct2">
                <argument name="sku" value="import-product-simple1-configurable"/>
            </actionGroup>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteConfigurableProduct3">
                <argument name="sku" value="import-product-simple2-configurable"/>
            </actionGroup>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteConfigurableProduct4">
                <argument name="sku" value="import-product-simple3-configurable"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteProductAttributeByLabelActionGroup" stepKey="deleteAttribute">
                <argument name="productAttributeLabel" value="Set Size" />
            </actionGroup>
            <!-- Logout -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
        </after>
        <!--Create text swatch attribute with 3 options:  4, 24 and 30-->
        <actionGroup ref="AddTextSwatchToProductActionGroup" stepKey="addSizeAttribute">
            <argument name="attributeName" value="{{SwatchProductSizeAttribute.frontend_label}}"/>
            <argument name="attributeCode" value="{{SwatchProductSizeAttribute.attribute_code}}"/>
            <argument name="option1" value="4"/>
            <argument name="option2" value="24"/>
            <argument name="option3" value="30"/>
        </actionGroup>

        <!-- Go to created attribute (attribute page) -->
        <actionGroup ref="NavigateToEditProductAttributeActionGroup" stepKey="navigateToSkuProductAttribute">
            <argument name="ProductAttribute" value="{{SwatchProductSizeAttribute.frontend_label}}"/>
        </actionGroup>
        <!-- Set 'yes' value for option "Update Product Preview Image" -->
        <actionGroup ref="AdminUpdateProductPreviewImageActionGroup" stepKey="setUpdateProductPreviewImage" after="navigateToSkuProductAttribute"/>
        <!-- Save Product Attribute -->
        <actionGroup ref="SaveProductAttributeActionGroup" stepKey="saveAttribute" after="setUpdateProductPreviewImage"/>

        <actionGroup ref="AdminOpenAttributeSetGridPageActionGroup" stepKey="openAttributeSetPage"/>

        <!-- From grid, click on attribute set Default -->
        <actionGroup ref="AdminOpenAttributeSetByNameActionGroup" stepKey="openDefaultAttributeSet"/>

        <!-- Add Product Attribute to Default attribute by dragging and dropping this to the 'Project Details' folder. Then Save. -->
        <actionGroup ref="AssignAttributeToGroupActionGroup" stepKey="assignAttributeToGroup">
            <argument name="group" value="Product Details"/>
            <argument name="attribute" value="{{SwatchProductSizeAttribute.attribute_code}}"/>
        </actionGroup>
        <actionGroup ref="SaveAttributeSetActionGroup" stepKey="saveAttributeSet"/>

        <actionGroup ref="AdminImportProductsWithCustomImagesDirectoryActionGroup" stepKey="adminImportProduct">
            <argument name="behavior" value="Add/Update"/>
            <argument name="importFile" value="import_configurable_product_same_images.csv"/>
            <argument name="imagesFileDirectory" value="{{ImportProduct_Configurable.name}}"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForSaveImportProduct"/>

        <!-- Open the configurable product page on storefront -->
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="goToProductPage">
            <argument name="productUrlKey" value="{{ImportProduct_Configurable.name}}"/>
        </actionGroup>
        <!-- Select first option -->
        <actionGroup ref="StorefrontSelectSwatchOptionOnProductPageActionGroup" stepKey="selectFirstOptionValue">
            <argument name="optionName" value="4"/>
        </actionGroup>
        <seeElement selector="{{StorefrontProductMediaSection.productImageInFotorama(ImportProductSimple3_Configurable.baseImage)}}" stepKey="seeFirstImageInRibbon"/>
        <!-- Select second option -->
        <actionGroup ref="StorefrontSelectSwatchOptionOnProductPageActionGroup" stepKey="selectSecondOptionValue">
            <argument name="optionName" value="24"/>
        </actionGroup>
        <!-- Select third option -->
        <actionGroup ref="StorefrontSelectSwatchOptionOnProductPageActionGroup" stepKey="selectThirdOptionValue">
            <argument name="optionName" value="30"/>
        </actionGroup>
    </test>
</tests>
