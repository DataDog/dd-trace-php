#!/usr/bin/env sh

set -xe

PHP_70_API='20151012'
PHP_72_API='20170718'
PHP_74_API='20190902'
PHP_81_API='20210902'

# Downloading PHP
PHP_TAR_FILE=php.tar.gz
apk add --no-cache --virtual .php-build-deps \
    autoconf \
    bison \
    ca-certificates \
    coreutils \
    re2c \
    wget

mkdir -p $PHP_SRC_DIR
cd $SRC_DIR
wget -O "${PHP_TAR_FILE}" "$PHP_URL"
sha256sum "${PHP_TAR_FILE}"
echo "$PHP_SHA256 *${PHP_TAR_FILE}" | sha256sum -c -
docker-php-source extract
cd $PHP_SRC_DIR

if [ -f ext/opcache/jit/zend_jit_x86.dasc ]; then
    sed -i 's/: "=a" (ti))/: "=D" (ti))/g' ext/opcache/jit/zend_jit_x86.dasc
elif [ -f ext/opcache/jit/zend_jit_ir.c ]; then
    # PHP 8.4 specific, can be removed once PHP 8.4.9 is released
    sed -i 's/: "=a" (ti))/: "=D" (ti))/g' ext/opcache/jit/zend_jit_ir.c
fi
if [ "${PHP_API}" -lt "${PHP_81_API}" ]; then
    patch -p1 < /patches/0001-Backport-0a39890c-Fix-libxml2-2.12-build-due-to-API-.patch
fi
if [ "${PHP_API}" -le "${PHP_70_API}" ]; then
    patch -p1 < /patches/0001-Sync-callback-signature-with-libxml2-2.9.8.patch
fi

export CFLAGS="$PHP_CFLAGS"
if [ "${PHP_API}" -le "${PHP_74_API}" ]; then
   export CFLAGS="$CFLAGS -DHAVE_POSIX_READDIR_R=1 -DHAVE_OLD_READDIR_R=0"
fi
if [ "${PHP_API}" -lt "${PHP_74_API}" ]; then
   export CFLAGS="$CFLAGS -DCOOKIE_SEEKER_USES_OFF64_T=1 -D__off64_t=ssize_t"
elif [ "${PHP_API}" -le "${PHP_81_API}" ]; then
   export CFLAGS="$CFLAGS -DCOOKIE_SEEKER_USES_OFF64_T=1 -Doff64_t=ssize_t"
fi
export CPPFLAGS="$PHP_CPPFLAGS"
export LDFLAGS="$PHP_LDFLAGS"
PHP_CONFIG_ARGS=""

if [ "${PHP_API}" -lt "${PHP_72_API}" ] ; then
    # Removed in v7.2
    PHP_CONFIG_ARGS="--with-mcrypt $PHP_CONFIG_ARGS"
else
    PHP_CONFIG_ARGS="--with-sodium=shared $PHP_CONFIG_ARGS"
fi

if [ "${PHP_API}" -ge "${PHP_74_API}" ] ; then
    PHP_CONFIG_ARGS="--with-ffi $PHP_CONFIG_ARGS"
fi

for target in "" "-zts"; do
  srcdir="$PWD"
  # Installing PHP
  mkdir -vp /tmp/build-php
  cd /tmp/build-php
  "$srcdir/configure" \
      --prefix="${PHP_INSTALL_DIR}${target}" \
      $([ "${target}" = '-zts' ] && echo --enable$(grep -q 'maintainer-zts' "${srcdir}/configure" && echo "-maintainer")-zts) \
      --with-config-file-path="${PHP_INI_DIR}" \
      --with-config-file-scan-dir="${PHP_INI_DIR}/conf.d" \
      --with-mhash \
      --enable-ftp \
      --enable-mbstring \
      --with-curl \
      --with-libedit \
      --without-pdo-sqlite \
      --without-sqlite3 \
      $([ -n "$SSL_DEV_DEP" ] && echo --with-openssl || echo --without-openssl ) \
      --with-zlib \
      --enable-fpm \
      --with-fpm-user=www-data \
      --with-fpm-group=www-data \
      ${PHP_CONFIG_ARGS}
  make -j "$(nproc)"
  make install clean
  cd -
  rm -fr /tmp/build-php
done

# Removing sources and unused packages
docker-php-source delete
rm "$SRC_DIR/${PHP_TAR_FILE}"
apk del .php-build-deps
